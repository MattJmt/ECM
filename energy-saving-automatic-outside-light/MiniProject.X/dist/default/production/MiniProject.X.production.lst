

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 10 10:06:40 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Version 2.35
    47                           ; Generated 05/05/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F67K40 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     _T0CON0bits	set	4053
    82   000000                     _T0CON1bits	set	4054
    83   000000                     _LATHbits	set	3968
    84   000000                     _CM2CON1bits	set	3789
    85   000000                     _CM2PCHbits	set	3791
    86   000000                     _CM1CON1bits	set	3793
    87   000000                     _LATFbits	set	3966
    88   000000                     _LATGbits	set	3967
    89   000000                     _TRISFbits	set	3974
    90   000000                     _TRISAbits	set	3969
    91   000000                     _TRISGbits	set	3975
    92   000000                     _TRISBbits	set	3970
    93   000000                     _TRISCbits	set	3971
    94   000000                     _IPR0bits	set	3615
    95   000000                     _IPR2bits	set	3617
    96   000000                     _PIE0bits	set	3625
    97   000000                     _PIE2bits	set	3627
    98   000000                     _DAC1CON0bits	set	3782
    99   000000                     _LATAbits	set	3961
   100   000000                     _LATBbits	set	3962
   101   000000                     _LATCbits	set	3963
   102   000000                     _LATEbits	set	3965
   103   000000                     _TRISEbits	set	3973
   104   000000                     _TRISHbits	set	3976
   105   000000                     _TMR0L	set	4051
   106   000000                     _TMR0H	set	4052
   107   000000                     _INTCONbits	set	4082
   108   000000                     _CM2CON0bits	set	3788
   109   000000                     _CM2NCHbits	set	3790
   110   000000                     _CM1CON0bits	set	3792
   111   000000                     _CM1NCHbits	set	3794
   112   000000                     _DAC1CON1bits	set	3783
   113   000000                     _CM1PCHbits	set	3795
   114   000000                     _PIR0bits	set	3635
   115   000000                     _PIR2bits	set	3637
   116                           
   117                           	psect	smallconst
   118   000E00                     __psmallconst:
   119                           	callstack 0
   120   000E00  00                 	db	0
   121   000E01                     STR_1:
   122                           
   123                           ; BSR set to: 14
   124   000E01  48                 	db	72	;'H'
   125   000E02  3A                 	db	58	;':'
   126   000E03  25                 	db	37
   127   000E04  64                 	db	100	;'d'
   128   000E05  20                 	db	32
   129   000E06  44                 	db	68	;'D'
   130   000E07  6F                 	db	111	;'o'
   131   000E08  57                 	db	87	;'W'
   132   000E09  3A                 	db	58	;':'
   133   000E0A  25                 	db	37
   134   000E0B  64                 	db	100	;'d'
   135   000E0C  20                 	db	32
   136   000E0D  4D                 	db	77	;'M'
   137   000E0E  44                 	db	68	;'D'
   138   000E0F  3A                 	db	58	;':'
   139   000E10  25                 	db	37
   140   000E11  64                 	db	100	;'d'
   141   000E12  20                 	db	32
   142   000E13  20                 	db	32
   143   000E14  00                 	db	0
   144   000E15                     STR_2:
   145                           
   146                           ; BSR set to: 14
   147   000E15  44                 	db	68	;'D'
   148   000E16  61                 	db	97	;'a'
   149   000E17  74                 	db	116	;'t'
   150   000E18  65                 	db	101	;'e'
   151   000E19  3A                 	db	58	;':'
   152   000E1A  20                 	db	32
   153   000E1B  25                 	db	37
   154   000E1C  64                 	db	100	;'d'
   155   000E1D  2F                 	db	47
   156   000E1E  25                 	db	37
   157   000E1F  64                 	db	100	;'d'
   158   000E20  2F                 	db	47
   159   000E21  25                 	db	37
   160   000E22  64                 	db	100	;'d'
   161   000E23  20                 	db	32
   162   000E24  20                 	db	32
   163   000E25  00                 	db	0
   164   000E26  00                 	db	0	; dummy byte at the end
   165   000000                     
   166                           ; #config settings
   167                           
   168                           	psect	cinit
   169   0020DE                     __pcinit:
   170                           	callstack 0
   171   0020DE                     start_initialization:
   172                           	callstack 0
   173   0020DE                     __initialization:
   174                           	callstack 0
   175                           
   176                           ; Clear objects allocated to BANK0 (37 bytes)
   177   0020DE  EE00  F0CE         	lfsr	0,__pbssBANK0
   178   0020E2  0E25               	movlw	37
   179   0020E4                     clear_0:
   180   0020E4  6AEE               	clrf	postinc0,c
   181   0020E6  06E8               	decf	wreg,f,c
   182   0020E8  E1FD               	bnz	clear_0
   183                           
   184                           ; Clear objects allocated to COMRAM (4 bytes)
   185   0020EA  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   186   0020EC  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   187   0020EE  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   188   0020F0  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   189   0020F2                     end_of_initialization:
   190                           	callstack 0
   191   0020F2                     __end_of__initialization:
   192                           	callstack 0
   193   0020F2  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   194   0020F4  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   195   0020F6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   196   0020F8  6EF8               	movwf	tblptru,c
   197   0020FA  0E0E               	movlw	high __Lsmallconst
   198   0020FC  6EF7               	movwf	tblptrh,c
   199   0020FE  0100               	movlb	0
   200   002100  EFA6  F00B         	goto	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMRAM
   203   00005A                     __pbssCOMRAM:
   204                           	callstack 0
   205   00005A                     _flags:
   206                           	callstack 0
   207   00005A                     	ds	1
   208   00005B                     _sunDown:
   209                           	callstack 0
   210   00005B                     	ds	1
   211   00005C                     _sunUp:
   212                           	callstack 0
   213   00005C                     	ds	1
   214   00005D                     _hour:
   215                           	callstack 0
   216   00005D                     	ds	1
   217                           
   218                           	psect	bssBANK0
   219   0000CE                     __pbssBANK0:
   220                           	callstack 0
   221   0000CE                     _width:
   222                           	callstack 0
   223   0000CE                     	ds	2
   224   0000D0                     _prec:
   225                           	callstack 0
   226   0000D0                     	ds	2
   227   0000D2                     _midDay:
   228                           	callstack 0
   229   0000D2                     	ds	1
   230   0000D3                     _dbuf:
   231                           	callstack 0
   232   0000D3                     	ds	32
   233                           
   234                           	psect	cstackBANK0
   235   000060                     __pcstackBANK0:
   236                           	callstack 0
   237   000060                     ?_sprintf:
   238                           	callstack 0
   239   000060                     sprintf@s:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x0
   243   000060                     	ds	2
   244   000062                     sprintf@fmt:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x2
   248   000062                     	ds	8
   249   00006A                     sprintf@ap:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0xA
   253   00006A                     	ds	2
   254   00006C                     sprintf@f:
   255                           	callstack 0
   256                           
   257                           ; 11 bytes @ 0xC
   258   00006C                     	ds	11
   259   000077                     main@buf1:
   260                           	callstack 0
   261                           
   262                           ; 40 bytes @ 0x17
   263   000077                     	ds	40
   264   00009F                     main@buf2:
   265                           	callstack 0
   266                           
   267                           ; 40 bytes @ 0x3F
   268   00009F                     	ds	40
   269   0000C7                     main@deadTime:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x67
   273   0000C7                     	ds	1
   274   0000C8                     main@year:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x68
   278   0000C8                     	ds	2
   279   0000CA                     main@daylightSavings:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x6A
   283   0000CA                     	ds	1
   284   0000CB                     main@dayOfWeek:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x6B
   288   0000CB                     	ds	1
   289   0000CC                     main@dayOfMonth:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x6C
   293   0000CC                     	ds	1
   294   0000CD                     main@month:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x6D
   298   0000CD                     	ds	1
   299                           
   300                           	psect	cstackCOMRAM
   301   000001                     __pcstackCOMRAM:
   302                           	callstack 0
   303   000001                     ??_LCD_sendnibble:
   304   000001                     ??_LEDarray_disp_bin:
   305   000001                     ?___awdiv:
   306                           	callstack 0
   307   000001                     ?___aodiv:
   308                           	callstack 0
   309   000001                     ?___aomod:
   310                           	callstack 0
   311   000001                     ___awdiv@dividend:
   312                           	callstack 0
   313   000001                     fputc@c:
   314                           	callstack 0
   315   000001                     ___aodiv@dividend:
   316                           	callstack 0
   317   000001                     ___aomod@dividend:
   318                           	callstack 0
   319                           
   320                           ; 8 bytes @ 0x0
   321   000001                     	ds	1
   322   000002                     LCD_sendnibble@number:
   323                           	callstack 0
   324   000002                     LEDarray_disp_bin@number:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x1
   328   000002                     	ds	1
   329   000003                     LCD_sendbyte@type:
   330                           	callstack 0
   331   000003                     ___awdiv@divisor:
   332                           	callstack 0
   333   000003                     fputc@fp:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x2
   337   000003                     	ds	1
   338   000004                     ??_LCD_sendbyte:
   339                           
   340                           ; 1 bytes @ 0x3
   341   000004                     	ds	1
   342   000005                     ??_fputc:
   343   000005                     LCD_sendbyte@Byte:
   344                           	callstack 0
   345   000005                     ___awdiv@counter:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x4
   349   000005                     	ds	1
   350   000006                     ??_LCD_Init:
   351   000006                     LCD_setline@line:
   352                           	callstack 0
   353   000006                     ___awdiv@sign:
   354                           	callstack 0
   355   000006                     LCD_sendstring@string:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x5
   359   000006                     	ds	1
   360   000007                     ___awdiv@quotient:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x6
   364   000007                     	ds	1
   365   000008                     
   366                           ; 1 bytes @ 0x7
   367   000008                     	ds	1
   368   000009                     ??_syncro:
   369   000009                     ___aodiv@divisor:
   370                           	callstack 0
   371   000009                     ___aomod@divisor:
   372                           	callstack 0
   373                           
   374                           ; 8 bytes @ 0x8
   375   000009                     	ds	1
   376   00000A                     fputs@s:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x9
   380   00000A                     	ds	2
   381   00000C                     fputs@fp:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0xB
   385   00000C                     	ds	2
   386   00000E                     syncro@daylightSavings:
   387                           	callstack 0
   388   00000E                     fputs@c:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0xD
   392   00000E                     	ds	1
   393   00000F                     syncro@trueMid:
   394                           	callstack 0
   395   00000F                     fputs@i:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0xE
   399   00000F                     	ds	1
   400   000010                     dateIncrement@daylightSavingsP:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0xF
   404   000010                     	ds	1
   405   000011                     ___aodiv@counter:
   406                           	callstack 0
   407   000011                     ___aomod@counter:
   408                           	callstack 0
   409   000011                     pad@fp:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x10
   413   000011                     	ds	1
   414   000012                     ___aodiv@sign:
   415                           	callstack 0
   416   000012                     ___aomod@sign:
   417                           	callstack 0
   418   000012                     dateIncrement@dayOfWeekP:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x11
   422   000012                     	ds	1
   423   000013                     ?_abs:
   424                           	callstack 0
   425   000013                     pad@buf:
   426                           	callstack 0
   427   000013                     abs@a:
   428                           	callstack 0
   429   000013                     ___aodiv@quotient:
   430                           	callstack 0
   431                           
   432                           ; 8 bytes @ 0x12
   433   000013                     	ds	1
   434   000014                     dateIncrement@dayOfMonthP:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x13
   438   000014                     	ds	1
   439   000015                     ??_abs:
   440   000015                     pad@p:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x14
   444   000015                     	ds	1
   445   000016                     dateIncrement@monthP:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x15
   449   000016                     	ds	1
   450   000017                     ??_pad:
   451                           
   452                           ; 1 bytes @ 0x16
   453   000017                     	ds	1
   454   000018                     dateIncrement@yearP:
   455                           	callstack 0
   456   000018                     pad@i:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x17
   460   000018                     	ds	2
   461   00001A                     ??_dateIncrement:
   462   00001A                     pad@w:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x19
   466   00001A                     	ds	2
   467   00001C                     _dateIncrement$882:
   468                           	callstack 0
   469   00001C                     dtoa@fp:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x1B
   473   00001C                     	ds	2
   474   00001E                     dtoa@d:
   475                           	callstack 0
   476                           
   477                           ; 8 bytes @ 0x1D
   478   00001E                     	ds	8
   479   000026                     ??_dtoa:
   480                           
   481                           ; 1 bytes @ 0x25
   482   000026                     	ds	8
   483   00002E                     _dtoa$1861:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x2D
   487   00002E                     	ds	2
   488   000030                     dtoa@p:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x2F
   492   000030                     	ds	2
   493   000032                     dtoa@w:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x31
   497   000032                     	ds	2
   498   000034                     dtoa@n:
   499                           	callstack 0
   500                           
   501                           ; 8 bytes @ 0x33
   502   000034                     	ds	8
   503   00003C                     dtoa@i:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x3B
   507   00003C                     	ds	2
   508   00003E                     dtoa@s:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0x3D
   512   00003E                     	ds	1
   513   00003F                     vfpfcnvrt@fp:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x3E
   517   00003F                     	ds	2
   518   000041                     vfpfcnvrt@fmt:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x40
   522   000041                     	ds	2
   523   000043                     vfpfcnvrt@ap:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x42
   527   000043                     	ds	2
   528   000045                     ??_vfpfcnvrt:
   529                           
   530                           ; 1 bytes @ 0x44
   531   000045                     	ds	2
   532   000047                     vfpfcnvrt@convarg:
   533                           	callstack 0
   534                           
   535                           ; 8 bytes @ 0x46
   536   000047                     	ds	8
   537   00004F                     vfpfcnvrt@cp:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x4E
   541   00004F                     	ds	2
   542   000051                     ?_vfprintf:
   543                           	callstack 0
   544   000051                     vfprintf@fp:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x50
   548   000051                     	ds	2
   549   000053                     vfprintf@fmt:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x52
   553   000053                     	ds	2
   554   000055                     vfprintf@ap:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x54
   558   000055                     	ds	2
   559   000057                     vfprintf@cfmt:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x56
   563   000057                     	ds	2
   564   000059                     ??_main:
   565                           
   566                           ; 1 bytes @ 0x58
   567   000059                     	ds	1
   568                           
   569 ;;
   570 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   571 ;;
   572 ;; *************** function _main *****************
   573 ;; Defined at:
   574 ;;		line 21 in file "../main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;  buf2           40   63[BANK0 ] unsigned char [40]
   579 ;;  buf1           40   23[BANK0 ] unsigned char [40]
   580 ;;  year            2  104[BANK0 ] unsigned int 
   581 ;;  month           1  109[BANK0 ] unsigned char 
   582 ;;  dayOfMonth      1  108[BANK0 ] unsigned char 
   583 ;;  dayOfWeek       1  107[BANK0 ] unsigned char 
   584 ;;  daylightSavi    1  106[BANK0 ] unsigned char 
   585 ;;  deadTime        1  103[BANK0 ] unsigned char 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   596 ;;      Locals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   597 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   598 ;;      Totals:         1      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   599 ;;Total ram usage:       88 bytes
   600 ;; Hardware stack levels required when called: 9
   601 ;; This function calls:
   602 ;;		_Comp1_init
   603 ;;		_Comp2_init
   604 ;;		_Interrupts_init
   605 ;;		_LCD_Init
   606 ;;		_LCD_sendstring
   607 ;;		_LCD_setline
   608 ;;		_LEDarray_disp_bin
   609 ;;		_LEDarray_init
   610 ;;		_Timer0_init
   611 ;;		_dateIncrement
   612 ;;		_sprintf
   613 ;; This function is called by:
   614 ;;		Startup code after reset
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text0
   619   00174C                     __ptext0:
   620                           	callstack 0
   621   00174C                     _main:
   622                           	callstack 22
   623   00174C                     
   624                           ;../main.c: 24:     LATHbits.LATH3=0;
   625   00174C  9680               	bcf	128,3,c	;volatile
   626                           
   627                           ;../main.c: 25:     TRISHbits.TRISH3=0;
   628   00174E  9688               	bcf	136,3,c	;volatile
   629   001750                     
   630                           ;../main.c: 29:     Interrupts_init();
   631   001750  ECC7  F010         	call	_Interrupts_init	;wreg free
   632   001754                     
   633                           ;../main.c: 30:     Comp1_init();
   634   001754  EC94  F010         	call	_Comp1_init	;wreg free
   635   001758                     
   636                           ;../main.c: 31:     Comp2_init();
   637   001758  EC82  F010         	call	_Comp2_init	;wreg free
   638   00175C                     
   639                           ;../main.c: 32:     Timer0_init();
   640   00175C  ECB7  F010         	call	_Timer0_init	;wreg free
   641   001760                     
   642                           ;../main.c: 33:     LEDarray_init();
   643   001760  ECA6  F010         	call	_LEDarray_init	;wreg free
   644   001764                     
   645                           ;../main.c: 34:     LCD_Init();
   646   001764  ECB2  F00E         	call	_LCD_Init	;wreg free
   647   001768                     
   648                           ;../main.c: 38:     char dayOfWeek = 1;
   649   001768  0E01               	movlw	1
   650   00176A  0100               	movlb	0	; () banked
   651   00176C  6FCB               	movwf	main@dayOfWeek& (0+255),b
   652   00176E                     
   653                           ; BSR set to: 0
   654                           ;../main.c: 39:     char dayOfMonth = 25;
   655   00176E  0E19               	movlw	25
   656   001770  6FCC               	movwf	main@dayOfMonth& (0+255),b
   657   001772                     
   658                           ; BSR set to: 0
   659                           ;../main.c: 40:     char month = 3;
   660   001772  0E03               	movlw	3
   661   001774  6FCD               	movwf	main@month& (0+255),b
   662   001776                     
   663                           ; BSR set to: 0
   664                           ;../main.c: 41:     unsigned int year = 2022;
   665   001776  0E07               	movlw	7
   666   001778  6FC9               	movwf	(main@year+1)& (0+255),b
   667   00177A  0EE6               	movlw	230
   668   00177C  6FC8               	movwf	main@year& (0+255),b
   669   00177E                     
   670                           ; BSR set to: 0
   671                           ;../main.c: 42:     char daylightSavings = 0;
   672   00177E  0E00               	movlw	0
   673   001780  6FCA               	movwf	main@daylightSavings& (0+255),b
   674   001782                     l2174:
   675                           
   676                           ;../main.c: 47:     if (hour >= 1 && hour <=5){
   677   001782  505D               	movf	_hour^0,w,c
   678   001784  B4D8               	btfsc	status,2,c
   679   001786  EFC7  F00B         	goto	u2061
   680   00178A  EFC9  F00B         	goto	u2060
   681   00178E                     u2061:
   682   00178E  EFD6  F00B         	goto	l2180
   683   001792                     u2060:
   684   001792  0E06               	movlw	6
   685   001794  605D               	cpfslt	_hour^0,c
   686   001796  EFCF  F00B         	goto	u2071
   687   00179A  EFD1  F00B         	goto	u2070
   688   00179E                     u2071:
   689   00179E  EFD6  F00B         	goto	l2180
   690   0017A2                     u2070:
   691   0017A2                     
   692                           ;../main.c: 48:         deadTime = 1;
   693   0017A2  0E01               	movlw	1
   694   0017A4  0100               	movlb	0	; () banked
   695   0017A6  6FC7               	movwf	main@deadTime& (0+255),b
   696                           
   697                           ;../main.c: 49:     }
   698   0017A8  EFD9  F00B         	goto	l2182
   699   0017AC                     l2180:
   700   0017AC  0E00               	movlw	0
   701   0017AE  0100               	movlb	0	; () banked
   702   0017B0  6FC7               	movwf	main@deadTime& (0+255),b
   703   0017B2                     l2182:
   704                           
   705                           ; BSR set to: 0
   706                           ;../main.c: 53:     if (CM1CON0bits.OUT & !deadTime){LATHbits.LATH3=1;}
   707   0017B2  010E               	movlb	14	; () banked
   708   0017B4  BDD0               	btfsc	208,6,b	;volatile
   709   0017B6  EFDF  F00B         	goto	u2081
   710   0017BA  EFE3  F00B         	goto	u2080
   711   0017BE                     u2081:
   712   0017BE  6A59               	clrf	??_main^0,c
   713   0017C0  2A59               	incf	??_main^0,f,c
   714   0017C2  EFE4  F00B         	goto	u2088
   715   0017C6                     u2080:
   716   0017C6  6A59               	clrf	??_main^0,c
   717   0017C8                     u2088:
   718   0017C8  0100               	movlb	0	; () banked
   719   0017CA  51C7               	movf	main@deadTime& (0+255),w,b
   720   0017CC  B4D8               	btfsc	status,2,c
   721   0017CE  EFEB  F00B         	goto	u2091
   722   0017D2  EFEE  F00B         	goto	u2090
   723   0017D6                     u2091:
   724   0017D6  0E01               	movlw	1
   725   0017D8  EFEF  F00B         	goto	u2100
   726   0017DC                     u2090:
   727   0017DC  0E00               	movlw	0
   728   0017DE                     u2100:
   729   0017DE  1459               	andwf	??_main^0,w,c
   730   0017E0  0900               	iorlw	0
   731   0017E2  B4D8               	btfsc	status,2,c
   732   0017E4  EFF6  F00B         	goto	u2111
   733   0017E8  EFF8  F00B         	goto	u2110
   734   0017EC                     u2111:
   735   0017EC  EFFB  F00B         	goto	l221
   736   0017F0                     u2110:
   737   0017F0                     
   738                           ; BSR set to: 0
   739   0017F0  8680               	bsf	128,3,c	;volatile
   740   0017F2  EFFC  F00B         	goto	l2186
   741   0017F6                     l221:
   742                           
   743                           ; BSR set to: 0
   744   0017F6  9680               	bcf	128,3,c	;volatile
   745   0017F8                     l2186:
   746                           
   747                           ; BSR set to: 0
   748                           ;../main.c: 56:     dateIncrement(&daylightSavings, &dayOfWeek, &dayOfMonth, &month, &ye
      +                          ar);
   749   0017F8  0ECA               	movlw	low main@daylightSavings
   750   0017FA  6E10               	movwf	dateIncrement@daylightSavingsP^0,c
   751   0017FC  0E00               	movlw	high main@daylightSavings
   752   0017FE  6E11               	movwf	(dateIncrement@daylightSavingsP+1)^0,c
   753   001800  0ECB               	movlw	low main@dayOfWeek
   754   001802  6E12               	movwf	dateIncrement@dayOfWeekP^0,c
   755   001804  0E00               	movlw	high main@dayOfWeek
   756   001806  6E13               	movwf	(dateIncrement@dayOfWeekP+1)^0,c
   757   001808  0ECC               	movlw	low main@dayOfMonth
   758   00180A  6E14               	movwf	dateIncrement@dayOfMonthP^0,c
   759   00180C  0E00               	movlw	high main@dayOfMonth
   760   00180E  6E15               	movwf	(dateIncrement@dayOfMonthP+1)^0,c
   761   001810  0ECD               	movlw	low main@month
   762   001812  6E16               	movwf	dateIncrement@monthP^0,c
   763   001814  0E00               	movlw	high main@month
   764   001816  6E17               	movwf	(dateIncrement@monthP+1)^0,c
   765   001818  0EC8               	movlw	low main@year
   766   00181A  6E18               	movwf	dateIncrement@yearP^0,c
   767   00181C  0E00               	movlw	high main@year
   768   00181E  6E19               	movwf	(dateIncrement@yearP+1)^0,c
   769   001820  EC14  F007         	call	_dateIncrement	;wreg free
   770   001824                     
   771                           ;../main.c: 59:     LEDarray_disp_bin(hour);
   772   001824  505D               	movf	_hour^0,w,c
   773   001826  EC54  F00E         	call	_LEDarray_disp_bin
   774   00182A                     
   775                           ;../main.c: 62:     char buf1[40];;../main.c: 63:     char buf2[40];;../main.c: 64:     
      +                          sprintf(buf1, "H:%d DoW:%d MD:%d  ",hour,dayOfWeek,midDay);
   776   00182A  0E77               	movlw	low main@buf1
   777   00182C  0100               	movlb	0	; () banked
   778   00182E  6F60               	movwf	sprintf@s& (0+255),b
   779   001830  0E00               	movlw	high main@buf1
   780   001832  6F61               	movwf	(sprintf@s+1)& (0+255),b
   781   001834  0E01               	movlw	low STR_1
   782   001836  6F62               	movwf	sprintf@fmt& (0+255),b
   783   001838  0E0E               	movlw	high STR_1
   784   00183A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   785   00183C  C05D  F064         	movff	_hour,?_sprintf+4
   786   001840  6B65               	clrf	(?_sprintf+5)& (0+255),b
   787   001842  C0CB  F066         	movff	main@dayOfWeek,?_sprintf+6
   788   001846  6B67               	clrf	(?_sprintf+7)& (0+255),b
   789   001848  C0D2  F068         	movff	_midDay,?_sprintf+8
   790   00184C  6B69               	clrf	(?_sprintf+9)& (0+255),b
   791   00184E  EC8B  F00F         	call	_sprintf	;wreg free
   792   001852                     
   793                           ;../main.c: 65:     sprintf(buf2,"Date: %d/%d/%d  ",dayOfMonth,month,year);
   794   001852  0E9F               	movlw	low main@buf2
   795   001854  0100               	movlb	0	; () banked
   796   001856  6F60               	movwf	sprintf@s& (0+255),b
   797   001858  0E00               	movlw	high main@buf2
   798   00185A  6F61               	movwf	(sprintf@s+1)& (0+255),b
   799   00185C  0E15               	movlw	low STR_2
   800   00185E  6F62               	movwf	sprintf@fmt& (0+255),b
   801   001860  0E0E               	movlw	high STR_2
   802   001862  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   803   001864  C0CC  F064         	movff	main@dayOfMonth,?_sprintf+4
   804   001868  6B65               	clrf	(?_sprintf+5)& (0+255),b
   805   00186A  C0CD  F066         	movff	main@month,?_sprintf+6
   806   00186E  6B67               	clrf	(?_sprintf+7)& (0+255),b
   807   001870  C0C8  F068         	movff	main@year,?_sprintf+8
   808   001874  C0C9  F069         	movff	main@year+1,?_sprintf+9
   809   001878  EC8B  F00F         	call	_sprintf	;wreg free
   810   00187C                     
   811                           ;../main.c: 66:     LCD_setline(1);
   812   00187C  0E01               	movlw	1
   813   00187E  EC59  F010         	call	_LCD_setline
   814                           
   815                           ;../main.c: 67:     LCD_sendstring(buf1);
   816   001882  0E77               	movlw	low main@buf1
   817   001884  6E06               	movwf	LCD_sendstring@string^0,c
   818   001886  0E00               	movlw	high main@buf1
   819   001888  6E07               	movwf	(LCD_sendstring@string+1)^0,c
   820   00188A  EC3F  F010         	call	_LCD_sendstring	;wreg free
   821   00188E                     
   822                           ;../main.c: 68:     LCD_setline(0);
   823   00188E  0E00               	movlw	0
   824   001890  EC59  F010         	call	_LCD_setline
   825   001894                     
   826                           ;../main.c: 69:     LCD_sendstring(buf2);
   827   001894  0E9F               	movlw	low main@buf2
   828   001896  6E06               	movwf	LCD_sendstring@string^0,c
   829   001898  0E00               	movlw	high main@buf2
   830   00189A  6E07               	movwf	(LCD_sendstring@string+1)^0,c
   831   00189C  EC3F  F010         	call	_LCD_sendstring	;wreg free
   832   0018A0  EFC1  F00B         	goto	l2174
   833   0018A4  EF29  F000         	goto	start
   834   0018A8                     __end_of_main:
   835                           	callstack 0
   836                           
   837 ;; *************** function _sprintf *****************
   838 ;; Defined at:
   839 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;  s               2    0[BANK0 ] PTR unsigned char 
   842 ;;		 -> main@buf2(40), main@buf1(40), 
   843 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   844 ;;		 -> STR_2(17), STR_1(20), 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  f              11   12[BANK0 ] struct _IO_FILE
   847 ;;  ap              2   10[BANK0 ] PTR void [1]
   848 ;;		 -> ?_sprintf(2), 
   849 ;;  ret             2    0        int 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  2    0[BANK0 ] int 
   852 ;; Registers used:
   853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   859 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   860 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   862 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   863 ;;Total ram usage:       23 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 8
   866 ;; This function calls:
   867 ;;		_vfprintf
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text1
   874   001F16                     __ptext1:
   875                           	callstack 0
   876   001F16                     _sprintf:
   877                           	callstack 22
   878   001F16  0E64               	movlw	low (?_sprintf+4)
   879   001F18  0100               	movlb	0	; () banked
   880   001F1A  6F6A               	movwf	sprintf@ap& (0+255),b
   881   001F1C  0E00               	movlw	high (?_sprintf+4)
   882   001F1E  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
   883   001F20  C060  F06C         	movff	sprintf@s,sprintf@f
   884   001F24  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
   885   001F28                     
   886                           ; BSR set to: 0
   887   001F28  0E00               	movlw	0
   888   001F2A  6F70               	movwf	(sprintf@f+4)& (0+255),b
   889   001F2C  0E00               	movlw	0
   890   001F2E  6F6F               	movwf	(sprintf@f+3)& (0+255),b
   891   001F30                     
   892                           ; BSR set to: 0
   893   001F30  0E00               	movlw	0
   894   001F32  6F76               	movwf	(sprintf@f+10)& (0+255),b
   895   001F34  0E00               	movlw	0
   896   001F36  6F75               	movwf	(sprintf@f+9)& (0+255),b
   897   001F38                     
   898                           ; BSR set to: 0
   899   001F38  0E6C               	movlw	low sprintf@f
   900   001F3A  6E51               	movwf	vfprintf@fp^0,c
   901   001F3C  0E00               	movlw	high sprintf@f
   902   001F3E  6E52               	movwf	(vfprintf@fp+1)^0,c
   903   001F40  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
   904   001F44  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
   905   001F48  0E6A               	movlw	low sprintf@ap
   906   001F4A  6E55               	movwf	vfprintf@ap^0,c
   907   001F4C  0E00               	movlw	high sprintf@ap
   908   001F4E  6E56               	movwf	(vfprintf@ap+1)^0,c
   909   001F50  ECB4  F00F         	call	_vfprintf	;wreg free
   910   001F54  0100               	movlb	0	; () banked
   911   001F56  516F               	movf	(sprintf@f+3)& (0+255),w,b
   912   001F58  2560               	addwf	sprintf@s& (0+255),w,b
   913   001F5A  6ED9               	movwf	fsr2l,c
   914   001F5C  5170               	movf	(sprintf@f+4)& (0+255),w,b
   915   001F5E  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
   916   001F60  6EDA               	movwf	fsr2h,c
   917   001F62  0E00               	movlw	0
   918   001F64  6EDF               	movwf	indf2,c
   919   001F66                     
   920                           ; BSR set to: 0
   921   001F66  0012               	return		;funcret
   922   001F68                     __end_of_sprintf:
   923                           	callstack 0
   924                           
   925 ;; *************** function _vfprintf *****************
   926 ;; Defined at:
   927 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
   930 ;;		 -> sprintf@f(11), 
   931 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
   932 ;;		 -> STR_2(17), STR_1(20), 
   933 ;;  ap              2   84[COMRAM] PTR PTR void 
   934 ;;		 -> sprintf@ap(2), 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
   937 ;;		 -> STR_2(17), STR_1(20), 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  2   80[COMRAM] int 
   940 ;; Registers used:
   941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   947 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   950 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;Total ram usage:        8 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 7
   954 ;; This function calls:
   955 ;;		_vfpfcnvrt
   956 ;; This function is called by:
   957 ;;		_sprintf
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text2
   962   001F68                     __ptext2:
   963                           	callstack 0
   964   001F68                     _vfprintf:
   965                           	callstack 22
   966   001F68                     
   967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   968   001F68  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
   969   001F6C  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   970                           
   971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   972   001F70  EFC8  F00F         	goto	l1930
   973   001F74                     l1928:
   974                           
   975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   976   001F74  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
   977   001F78  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   978   001F7C  0E57               	movlw	low vfprintf@cfmt
   979   001F7E  6E41               	movwf	vfpfcnvrt@fmt^0,c
   980   001F80  0E00               	movlw	high vfprintf@cfmt
   981   001F82  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
   982   001F84  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
   983   001F88  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   984   001F8C  EC54  F00C         	call	_vfpfcnvrt	;wreg free
   985   001F90                     l1930:
   986                           
   987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   988   001F90  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
   989   001F94  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   990   001F98                     	if	0	;tblptru may be non-zero
   991   001F98                     	endif
   992   001F98                     	if	0	;tblptru may be non-zero
   993   001F98                     	endif
   994   001F98  0008               	tblrd		*
   995   001F9A  50F5               	movf	tablat,w,c
   996   001F9C  0900               	iorlw	0
   997   001F9E  A4D8               	btfss	status,2,c
   998   001FA0  EFD4  F00F         	goto	u1641
   999   001FA4  EFD6  F00F         	goto	u1640
  1000   001FA8                     u1641:
  1001   001FA8  EFBA  F00F         	goto	l1928
  1002   001FAC                     u1640:
  1003   001FAC                     
  1004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1005   001FAC  0E00               	movlw	0
  1006   001FAE  6E52               	movwf	(?_vfprintf+1)^0,c
  1007   001FB0  0E00               	movlw	0
  1008   001FB2  6E51               	movwf	?_vfprintf^0,c
  1009   001FB4  0012               	return		;funcret
  1010   001FB6                     __end_of_vfprintf:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _vfpfcnvrt *****************
  1014 ;; Defined at:
  1015 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1018 ;;		 -> sprintf@f(11), 
  1019 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1020 ;;		 -> vfprintf@cfmt(2), 
  1021 ;;  ap              2   66[COMRAM] PTR PTR void 
  1022 ;;		 -> sprintf@ap(2), 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  convarg         8   70[COMRAM] struct .
  1025 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1026 ;;		 -> STR_2(17), STR_1(20), 
  1027 ;;  i               2    0        int 
  1028 ;;  done            2    0        int 
  1029 ;;  c               1    0        unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1039 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1040 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1041 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1042 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1043 ;;Total ram usage:       18 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 6
  1046 ;; This function calls:
  1047 ;;		_dtoa
  1048 ;;		_fputc
  1049 ;; This function is called by:
  1050 ;;		_vfprintf
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text3
  1055   0018A8                     __ptext3:
  1056                           	callstack 0
  1057   0018A8                     _vfpfcnvrt:
  1058                           	callstack 22
  1059   0018A8                     
  1060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1061   0018A8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1062   0018AC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1063   0018B0  CFDE FFF6          	movff	postinc2,tblptrl
  1064   0018B4  CFDD FFF7          	movff	postdec2,tblptrh
  1065   0018B8                     	if	0	;tblptru may be non-zero
  1066   0018B8                     	endif
  1067   0018B8                     	if	0	;tblptru may be non-zero
  1068   0018B8                     	endif
  1069   0018B8  0008               	tblrd		*
  1070   0018BA  50F5               	movf	tablat,w,c
  1071   0018BC  0A25               	xorlw	37
  1072   0018BE  A4D8               	btfss	status,2,c
  1073   0018C0  EF64  F00C         	goto	u1531
  1074   0018C4  EF66  F00C         	goto	u1530
  1075   0018C8                     u1531:
  1076   0018C8  EFE6  F00C         	goto	l1878
  1077   0018CC                     u1530:
  1078   0018CC                     
  1079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1080   0018CC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1081   0018D0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1082   0018D4  2ADE               	incf	postinc2,f,c
  1083   0018D6  0E00               	movlw	0
  1084   0018D8  22DD               	addwfc	postdec2,f,c
  1085   0018DA                     
  1086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1087   0018DA  0E00               	movlw	0
  1088   0018DC  0100               	movlb	0	; () banked
  1089   0018DE  6FCF               	movwf	(_width+1)& (0+255),b
  1090   0018E0  0E00               	movlw	0
  1091   0018E2  6FCE               	movwf	_width& (0+255),b
  1092   0018E4  C0CE  F05A         	movff	_width,_flags
  1093   0018E8                     
  1094                           ; BSR set to: 0
  1095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1096   0018E8  69D0               	setf	_prec& (0+255),b
  1097   0018EA  69D1               	setf	(_prec+1)& (0+255),b
  1098   0018EC                     
  1099                           ; BSR set to: 0
  1100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1101   0018EC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1102   0018F0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1103   0018F4  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1104   0018F8  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1105   0018FC                     
  1106                           ; BSR set to: 0
  1107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1108   0018FC  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1109   001900  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1110   001904                     	if	0	;tblptru may be non-zero
  1111   001904                     	endif
  1112   001904                     	if	0	;tblptru may be non-zero
  1113   001904                     	endif
  1114   001904  0008               	tblrd		*
  1115   001906  50F5               	movf	tablat,w,c
  1116   001908  0A64               	xorlw	100
  1117   00190A  B4D8               	btfsc	status,2,c
  1118   00190C  EF8A  F00C         	goto	u1541
  1119   001910  EF8C  F00C         	goto	u1540
  1120   001914                     u1541:
  1121   001914  EF9A  F00C         	goto	l1868
  1122   001918                     u1540:
  1123   001918                     
  1124                           ; BSR set to: 0
  1125   001918  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1126   00191C  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1127   001920                     	if	0	;tblptru may be non-zero
  1128   001920                     	endif
  1129   001920                     	if	0	;tblptru may be non-zero
  1130   001920                     	endif
  1131   001920  0008               	tblrd		*
  1132   001922  50F5               	movf	tablat,w,c
  1133   001924  0A69               	xorlw	105
  1134   001926  A4D8               	btfss	status,2,c
  1135   001928  EF98  F00C         	goto	u1551
  1136   00192C  EF9A  F00C         	goto	u1550
  1137   001930                     u1551:
  1138   001930  EFDD  F00C         	goto	l1874
  1139   001934                     u1550:
  1140   001934                     l1868:
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1144   001934  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1145   001938  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1146   00193C  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1147   001940  0E02               	movlw	2
  1148   001942  26DE               	addwf	postinc2,f,c
  1149   001944  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1150   001948  0E00               	movlw	0
  1151   00194A  22DD               	addwfc	postdec2,f,c
  1152   00194C  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1153   001950  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1154   001954  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1155   001958  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1156   00195C  0E00               	movlw	0
  1157   00195E  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1158   001960  0EFF               	movlw	-1
  1159   001962  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1160   001964  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1161   001966  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1162   001968  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1163   00196A  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1164   00196C  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1165                           
  1166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1167   00196E  0E01               	movlw	1
  1168   001970  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1169   001972  6E45               	movwf	??_vfpfcnvrt^0,c
  1170   001974  0E00               	movlw	0
  1171   001976  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1172   001978  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1173   00197A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1174   00197E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1175   001982  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1176   001986  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1177   00198A                     
  1178                           ; BSR set to: 0
  1179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1180   00198A  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1181   00198E  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1182   001992  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1183   001996  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1184   00199A  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1185   00199E  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1186   0019A2  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1187   0019A6  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1188   0019AA  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1189   0019AE  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1190   0019B2  ECF2  F008         	call	_dtoa	;wreg free
  1191   0019B6  EFFA  F00C         	goto	l994
  1192   0019BA                     l1874:
  1193                           
  1194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1195   0019BA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1196   0019BE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1197   0019C2  2ADE               	incf	postinc2,f,c
  1198   0019C4  0E00               	movlw	0
  1199   0019C6  22DD               	addwfc	postdec2,f,c
  1200   0019C8  EFFA  F00C         	goto	l994
  1201   0019CC                     l1878:
  1202                           
  1203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1204   0019CC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1205   0019D0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1206   0019D4  CFDE FFF6          	movff	postinc2,tblptrl
  1207   0019D8  CFDD FFF7          	movff	postdec2,tblptrh
  1208   0019DC                     	if	0	;tblptru may be non-zero
  1209   0019DC                     	endif
  1210   0019DC                     	if	0	;tblptru may be non-zero
  1211   0019DC                     	endif
  1212   0019DC  0008               	tblrd		*
  1213   0019DE  50F5               	movf	tablat,w,c
  1214   0019E0  6E01               	movwf	fputc@c^0,c
  1215   0019E2  6A02               	clrf	(fputc@c+1)^0,c
  1216   0019E4  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1217   0019E8  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1218   0019EC  EC8D  F00D         	call	_fputc	;wreg free
  1219   0019F0  EFDD  F00C         	goto	l1874
  1220   0019F4                     l994:
  1221   0019F4  0012               	return		;funcret
  1222   0019F6                     __end_of_vfpfcnvrt:
  1223                           	callstack 0
  1224                           
  1225 ;; *************** function _dtoa *****************
  1226 ;; Defined at:
  1227 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1230 ;;		 -> sprintf@f(11), 
  1231 ;;  d               8   29[COMRAM] long long 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  n               8   51[COMRAM] long long 
  1234 ;;  i               2   59[COMRAM] int 
  1235 ;;  w               2   49[COMRAM] int 
  1236 ;;  p               2   47[COMRAM] int 
  1237 ;;  s               1   61[COMRAM] unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1247 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1248 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1249 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1250 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;Total ram usage:       35 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; Hardware stack levels required when called: 5
  1254 ;; This function calls:
  1255 ;;		___aodiv
  1256 ;;		___aomod
  1257 ;;		_abs
  1258 ;;		_pad
  1259 ;; This function is called by:
  1260 ;;		_vfpfcnvrt
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text4
  1265   0011E4                     __ptext4:
  1266                           	callstack 0
  1267   0011E4                     _dtoa:
  1268                           	callstack 22
  1269   0011E4                     
  1270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1271   0011E4  C01E  F034         	movff	dtoa@d,dtoa@n
  1272   0011E8  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1273   0011EC  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1274   0011F0  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1275   0011F4  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1276   0011F8  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1277   0011FC  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1278   001200  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1279   001204                     
  1280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1281   001204  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1282   001206  EF07  F009         	goto	u1291
  1283   00120A  EF0A  F009         	goto	u1290
  1284   00120E                     u1291:
  1285   00120E  0E01               	movlw	1
  1286   001210  EF0B  F009         	goto	u1300
  1287   001214                     u1290:
  1288   001214  0E00               	movlw	0
  1289   001216                     u1300:
  1290   001216  6E3E               	movwf	dtoa@s^0,c
  1291   001218                     
  1292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1293   001218  503E               	movf	dtoa@s^0,w,c
  1294   00121A  B4D8               	btfsc	status,2,c
  1295   00121C  EF12  F009         	goto	u1311
  1296   001220  EF14  F009         	goto	u1310
  1297   001224                     u1311:
  1298   001224  EF24  F009         	goto	l1760
  1299   001228                     u1310:
  1300   001228                     
  1301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1302   001228  1E3B               	comf	(dtoa@n+7)^0,f,c
  1303   00122A  1E3A               	comf	(dtoa@n+6)^0,f,c
  1304   00122C  1E39               	comf	(dtoa@n+5)^0,f,c
  1305   00122E  1E38               	comf	(dtoa@n+4)^0,f,c
  1306   001230  1E37               	comf	(dtoa@n+3)^0,f,c
  1307   001232  1E36               	comf	(dtoa@n+2)^0,f,c
  1308   001234  1E35               	comf	(dtoa@n+1)^0,f,c
  1309   001236  6C34               	negf	dtoa@n^0,c
  1310   001238  0E00               	movlw	0
  1311   00123A  2235               	addwfc	(dtoa@n+1)^0,f,c
  1312   00123C  2236               	addwfc	(dtoa@n+2)^0,f,c
  1313   00123E  2237               	addwfc	(dtoa@n+3)^0,f,c
  1314   001240  2238               	addwfc	(dtoa@n+4)^0,f,c
  1315   001242  2239               	addwfc	(dtoa@n+5)^0,f,c
  1316   001244  223A               	addwfc	(dtoa@n+6)^0,f,c
  1317   001246  223B               	addwfc	(dtoa@n+7)^0,f,c
  1318   001248                     l1760:
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1321   001248  0100               	movlb	0	; () banked
  1322   00124A  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  1323   00124C  EF32  F009         	goto	u1320
  1324   001250  51D1               	movf	(_prec+1)& (0+255),w,b
  1325   001252  E106               	bnz	u1321
  1326   001254  05D0               	decf	_prec& (0+255),w,b
  1327   001256  B0D8               	btfsc	status,0,c
  1328   001258  EF30  F009         	goto	u1321
  1329   00125C  EF32  F009         	goto	u1320
  1330   001260                     u1321:
  1331   001260  EF38  F009         	goto	l973
  1332   001264                     u1320:
  1333   001264                     
  1334                           ; BSR set to: 0
  1335   001264  0E00               	movlw	0
  1336   001266  6E31               	movwf	(dtoa@p+1)^0,c
  1337   001268  0E01               	movlw	1
  1338   00126A  6E30               	movwf	dtoa@p^0,c
  1339   00126C  EF3C  F009         	goto	l975
  1340   001270                     l973:
  1341                           
  1342                           ; BSR set to: 0
  1343   001270  C0D0  F030         	movff	_prec,dtoa@p
  1344   001274  C0D1  F031         	movff	_prec+1,dtoa@p+1
  1345   001278                     l975:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1349   001278  C0CE  F032         	movff	_width,dtoa@w
  1350   00127C  C0CF  F033         	movff	_width+1,dtoa@w+1
  1351   001280                     
  1352                           ; BSR set to: 0
  1353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1354   001280  503E               	movf	dtoa@s^0,w,c
  1355   001282  B4D8               	btfsc	status,2,c
  1356   001284  EF46  F009         	goto	u1331
  1357   001288  EF48  F009         	goto	u1330
  1358   00128C                     u1331:
  1359   00128C  EF5F  F009         	goto	l976
  1360   001290                     u1330:
  1361   001290                     
  1362                           ; BSR set to: 0
  1363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1364   001290  0632               	decf	dtoa@w^0,f,c
  1365   001292  A0D8               	btfss	status,0,c
  1366   001294  0633               	decf	(dtoa@w+1)^0,f,c
  1367   001296                     
  1368                           ; BSR set to: 0
  1369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1370   001296  503E               	movf	dtoa@s^0,w,c
  1371   001298  A4D8               	btfss	status,2,c
  1372   00129A  EF51  F009         	goto	u1341
  1373   00129E  EF53  F009         	goto	u1340
  1374   0012A2                     u1341:
  1375   0012A2  EF59  F009         	goto	l1772
  1376   0012A6                     u1340:
  1377   0012A6                     
  1378                           ; BSR set to: 0
  1379   0012A6  0E00               	movlw	0
  1380   0012A8  6E2F               	movwf	(_dtoa$1861+1)^0,c
  1381   0012AA  0E2B               	movlw	43
  1382   0012AC  6E2E               	movwf	_dtoa$1861^0,c
  1383   0012AE  EF5D  F009         	goto	l1774
  1384   0012B2                     l1772:
  1385                           
  1386                           ; BSR set to: 0
  1387   0012B2  0E00               	movlw	0
  1388   0012B4  6E2F               	movwf	(_dtoa$1861+1)^0,c
  1389   0012B6  0E2D               	movlw	45
  1390   0012B8  6E2E               	movwf	_dtoa$1861^0,c
  1391   0012BA                     l1774:
  1392                           
  1393                           ; BSR set to: 0
  1394   0012BA  C02E  F03E         	movff	_dtoa$1861,dtoa@s
  1395   0012BE                     l976:
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1399   0012BE  0E00               	movlw	0
  1400   0012C0  6E3D               	movwf	(dtoa@i+1)^0,c
  1401   0012C2  0E1F               	movlw	31
  1402   0012C4  6E3C               	movwf	dtoa@i^0,c
  1403   0012C6                     
  1404                           ; BSR set to: 0
  1405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1406   0012C6  0E00               	movlw	0
  1407   0012C8  6FF2               	movwf	(_dbuf+31)& (0+255),b
  1408                           
  1409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1410   0012CA  EFE3  F009         	goto	l1788
  1411   0012CE                     l1778:
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1414   0012CE  063C               	decf	dtoa@i^0,f,c
  1415   0012D0  A0D8               	btfss	status,0,c
  1416   0012D2  063D               	decf	(dtoa@i+1)^0,f,c
  1417   0012D4                     
  1418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1419   0012D4  0ED3               	movlw	low _dbuf
  1420   0012D6  243C               	addwf	dtoa@i^0,w,c
  1421   0012D8  6ED9               	movwf	fsr2l,c
  1422   0012DA  0E00               	movlw	high _dbuf
  1423   0012DC  203D               	addwfc	(dtoa@i+1)^0,w,c
  1424   0012DE  6EDA               	movwf	fsr2h,c
  1425   0012E0  C034  F001         	movff	dtoa@n,___aomod@dividend
  1426   0012E4  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1427   0012E8  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1428   0012EC  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1429   0012F0  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1430   0012F4  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1431   0012F8  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1432   0012FC  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1433   001300  0E0A               	movlw	10
  1434   001302  6E09               	movwf	___aomod@divisor^0,c
  1435   001304  0E00               	movlw	0
  1436   001306  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1437   001308  0E00               	movlw	0
  1438   00130A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1439   00130C  0E00               	movlw	0
  1440   00130E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1441   001310  0E00               	movlw	0
  1442   001312  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1443   001314  0E00               	movlw	0
  1444   001316  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1445   001318  0E00               	movlw	0
  1446   00131A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1447   00131C  0E00               	movlw	0
  1448   00131E  6E10               	movwf	(___aomod@divisor+7)^0,c
  1449   001320  ECF4  F00A         	call	___aomod	;wreg free
  1450   001324  C001  F026         	movff	?___aomod,??_dtoa
  1451   001328  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1452   00132C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1453   001330  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1454   001334  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1455   001338  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1456   00133C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1457   001340  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1458   001344  C026  F013         	movff	??_dtoa,abs@a
  1459   001348  C027  F014         	movff	??_dtoa+1,abs@a+1
  1460   00134C  EC1F  F010         	call	_abs	;wreg free
  1461   001350  5013               	movf	?_abs^0,w,c
  1462   001352  0F30               	addlw	48
  1463   001354  6EDF               	movwf	indf2,c
  1464   001356                     
  1465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1466   001356  0630               	decf	dtoa@p^0,f,c
  1467   001358  A0D8               	btfss	status,0,c
  1468   00135A  0631               	decf	(dtoa@p+1)^0,f,c
  1469   00135C                     
  1470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1471   00135C  0632               	decf	dtoa@w^0,f,c
  1472   00135E  A0D8               	btfss	status,0,c
  1473   001360  0633               	decf	(dtoa@w+1)^0,f,c
  1474   001362                     
  1475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1476   001362  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1477   001366  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1478   00136A  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1479   00136E  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1480   001372  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1481   001376  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1482   00137A  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1483   00137E  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1484   001382  0E0A               	movlw	10
  1485   001384  6E09               	movwf	___aodiv@divisor^0,c
  1486   001386  0E00               	movlw	0
  1487   001388  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1488   00138A  0E00               	movlw	0
  1489   00138C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1490   00138E  0E00               	movlw	0
  1491   001390  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1492   001392  0E00               	movlw	0
  1493   001394  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1494   001396  0E00               	movlw	0
  1495   001398  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1496   00139A  0E00               	movlw	0
  1497   00139C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1498   00139E  0E00               	movlw	0
  1499   0013A0  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1500   0013A2  EC30  F00A         	call	___aodiv	;wreg free
  1501   0013A6  C001  F034         	movff	?___aodiv,dtoa@n
  1502   0013AA  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1503   0013AE  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1504   0013B2  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1505   0013B6  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1506   0013BA  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1507   0013BE  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1508   0013C2  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1509   0013C6                     l1788:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1512   0013C6  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1513   0013C8  EFEE  F009         	goto	u1351
  1514   0013CC  503D               	movf	(dtoa@i+1)^0,w,c
  1515   0013CE  E108               	bnz	u1350
  1516   0013D0  043C               	decf	dtoa@i^0,w,c
  1517   0013D2  A0D8               	btfss	status,0,c
  1518   0013D4  EFEE  F009         	goto	u1351
  1519   0013D8  EFF0  F009         	goto	u1350
  1520   0013DC                     u1351:
  1521   0013DC  EF0C  F00A         	goto	l1794
  1522   0013E0                     u1350:
  1523   0013E0  5034               	movf	dtoa@n^0,w,c
  1524   0013E2  1035               	iorwf	(dtoa@n+1)^0,w,c
  1525   0013E4  1036               	iorwf	(dtoa@n+2)^0,w,c
  1526   0013E6  1037               	iorwf	(dtoa@n+3)^0,w,c
  1527   0013E8  1038               	iorwf	(dtoa@n+4)^0,w,c
  1528   0013EA  1039               	iorwf	(dtoa@n+5)^0,w,c
  1529   0013EC  103A               	iorwf	(dtoa@n+6)^0,w,c
  1530   0013EE  103B               	iorwf	(dtoa@n+7)^0,w,c
  1531   0013F0  A4D8               	btfss	status,2,c
  1532   0013F2  EFFD  F009         	goto	u1361
  1533   0013F6  EFFF  F009         	goto	u1360
  1534   0013FA                     u1361:
  1535   0013FA  EF67  F009         	goto	l1778
  1536   0013FE                     u1360:
  1537   0013FE  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1538   001400  EF0C  F00A         	goto	u1370
  1539   001404  5031               	movf	(dtoa@p+1)^0,w,c
  1540   001406  E106               	bnz	u1371
  1541   001408  0430               	decf	dtoa@p^0,w,c
  1542   00140A  B0D8               	btfsc	status,0,c
  1543   00140C  EF0A  F00A         	goto	u1371
  1544   001410  EF0C  F00A         	goto	u1370
  1545   001414                     u1371:
  1546   001414  EF67  F009         	goto	l1778
  1547   001418                     u1370:
  1548   001418                     l1794:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1551   001418  503E               	movf	dtoa@s^0,w,c
  1552   00141A  B4D8               	btfsc	status,2,c
  1553   00141C  EF12  F00A         	goto	u1381
  1554   001420  EF14  F00A         	goto	u1380
  1555   001424                     u1381:
  1556   001424  EF1F  F00A         	goto	l1800
  1557   001428                     u1380:
  1558   001428                     
  1559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1560   001428  063C               	decf	dtoa@i^0,f,c
  1561   00142A  A0D8               	btfss	status,0,c
  1562   00142C  063D               	decf	(dtoa@i+1)^0,f,c
  1563   00142E                     
  1564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1565   00142E  0ED3               	movlw	low _dbuf
  1566   001430  243C               	addwf	dtoa@i^0,w,c
  1567   001432  6ED9               	movwf	fsr2l,c
  1568   001434  0E00               	movlw	high _dbuf
  1569   001436  203D               	addwfc	(dtoa@i+1)^0,w,c
  1570   001438  6EDA               	movwf	fsr2h,c
  1571   00143A  C03E  FFDF         	movff	dtoa@s,indf2
  1572   00143E                     l1800:
  1573                           
  1574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1575   00143E  C01C  F011         	movff	dtoa@fp,pad@fp
  1576   001442  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1577   001446  0ED3               	movlw	low _dbuf
  1578   001448  243C               	addwf	dtoa@i^0,w,c
  1579   00144A  6E13               	movwf	pad@buf^0,c
  1580   00144C  0E00               	movlw	high _dbuf
  1581   00144E  203D               	addwfc	(dtoa@i+1)^0,w,c
  1582   001450  6E14               	movwf	(pad@buf+1)^0,c
  1583   001452  C032  F015         	movff	dtoa@w,pad@p
  1584   001456  C033  F016         	movff	dtoa@w+1,pad@p+1
  1585   00145A  EC4E  F00F         	call	_pad	;wreg free
  1586   00145E  0012               	return		;funcret
  1587   001460                     __end_of_dtoa:
  1588                           	callstack 0
  1589                           
  1590 ;; *************** function _pad *****************
  1591 ;; Defined at:
  1592 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1595 ;;		 -> sprintf@f(11), 
  1596 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1597 ;;		 -> dbuf(32), 
  1598 ;;  p               2   20[COMRAM] int 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  w               2   25[COMRAM] int 
  1601 ;;  i               2   23[COMRAM] int 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1611 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1612 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1614 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1615 ;;Total ram usage:       11 bytes
  1616 ;; Hardware stack levels used: 1
  1617 ;; Hardware stack levels required when called: 4
  1618 ;; This function calls:
  1619 ;;		_fputc
  1620 ;;		_fputs
  1621 ;; This function is called by:
  1622 ;;		_dtoa
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text5
  1627   001E9C                     __ptext5:
  1628                           	callstack 0
  1629   001E9C                     _pad:
  1630                           	callstack 22
  1631   001E9C                     
  1632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1633   001E9C  BE16               	btfsc	(pad@p+1)^0,7,c
  1634   001E9E  EF53  F00F         	goto	u1261
  1635   001EA2  EF55  F00F         	goto	u1260
  1636   001EA6                     u1261:
  1637   001EA6  EF5B  F00F         	goto	l1732
  1638   001EAA                     u1260:
  1639   001EAA  C015  F01A         	movff	pad@p,pad@w
  1640   001EAE  C016  F01B         	movff	pad@p+1,pad@w+1
  1641   001EB2  EF5F  F00F         	goto	l964
  1642   001EB6                     l1732:
  1643   001EB6  0E00               	movlw	0
  1644   001EB8  6E1B               	movwf	(pad@w+1)^0,c
  1645   001EBA  0E00               	movlw	0
  1646   001EBC  6E1A               	movwf	pad@w^0,c
  1647   001EBE                     l964:
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1650   001EBE  0E00               	movlw	0
  1651   001EC0  6E19               	movwf	(pad@i+1)^0,c
  1652   001EC2  0E00               	movlw	0
  1653   001EC4  6E18               	movwf	pad@i^0,c
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1656   001EC6  EF71  F00F         	goto	l1738
  1657   001ECA                     l1734:
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1660   001ECA  0E00               	movlw	0
  1661   001ECC  6E02               	movwf	(fputc@c+1)^0,c
  1662   001ECE  0E20               	movlw	32
  1663   001ED0  6E01               	movwf	fputc@c^0,c
  1664   001ED2  C011  F003         	movff	pad@fp,fputc@fp
  1665   001ED6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1666   001EDA  EC8D  F00D         	call	_fputc	;wreg free
  1667   001EDE                     
  1668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1669   001EDE  4A18               	infsnz	pad@i^0,f,c
  1670   001EE0  2A19               	incf	(pad@i+1)^0,f,c
  1671   001EE2                     l1738:
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1674   001EE2  501A               	movf	pad@w^0,w,c
  1675   001EE4  5C18               	subwf	pad@i^0,w,c
  1676   001EE6  5019               	movf	(pad@i+1)^0,w,c
  1677   001EE8  0A80               	xorlw	128
  1678   001EEA  6E17               	movwf	??_pad^0,c
  1679   001EEC  501B               	movf	(pad@w+1)^0,w,c
  1680   001EEE  0A80               	xorlw	128
  1681   001EF0  5817               	subwfb	??_pad^0,w,c
  1682   001EF2  A0D8               	btfss	status,0,c
  1683   001EF4  EF7E  F00F         	goto	u1271
  1684   001EF8  EF80  F00F         	goto	u1270
  1685   001EFC                     u1271:
  1686   001EFC  EF65  F00F         	goto	l1734
  1687   001F00                     u1270:
  1688   001F00                     
  1689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1690   001F00  C013  F00A         	movff	pad@buf,fputs@s
  1691   001F04  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1692   001F08  C011  F00C         	movff	pad@fp,fputs@fp
  1693   001F0C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1694   001F10  ECDB  F00F         	call	_fputs	;wreg free
  1695   001F14  0012               	return		;funcret
  1696   001F16                     __end_of_pad:
  1697                           	callstack 0
  1698                           
  1699 ;; *************** function _fputs *****************
  1700 ;; Defined at:
  1701 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1704 ;;		 -> dbuf(32), 
  1705 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1706 ;;		 -> sprintf@f(11), 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  i               2   14[COMRAM] int 
  1709 ;;  c               1   13[COMRAM] unsigned char 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  2    9[COMRAM] int 
  1712 ;; Registers used:
  1713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1720 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1722 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1723 ;;Total ram usage:        7 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 3
  1726 ;; This function calls:
  1727 ;;		_fputc
  1728 ;; This function is called by:
  1729 ;;		_pad
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text6
  1734   001FB6                     __ptext6:
  1735                           	callstack 0
  1736   001FB6                     _fputs:
  1737                           	callstack 22
  1738   001FB6  0E00               	movlw	0
  1739   001FB8  6E10               	movwf	(fputs@i+1)^0,c
  1740   001FBA  0E00               	movlw	0
  1741   001FBC  6E0F               	movwf	fputs@i^0,c
  1742   001FBE  EFEC  F00F         	goto	l1646
  1743   001FC2                     l1642:
  1744   001FC2  C00E  F001         	movff	fputs@c,fputc@c
  1745   001FC6  6A02               	clrf	(fputc@c+1)^0,c
  1746   001FC8  C00C  F003         	movff	fputs@fp,fputc@fp
  1747   001FCC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1748   001FD0  EC8D  F00D         	call	_fputc	;wreg free
  1749   001FD4  4A0F               	infsnz	fputs@i^0,f,c
  1750   001FD6  2A10               	incf	(fputs@i+1)^0,f,c
  1751   001FD8                     l1646:
  1752   001FD8  500F               	movf	fputs@i^0,w,c
  1753   001FDA  240A               	addwf	fputs@s^0,w,c
  1754   001FDC  6ED9               	movwf	fsr2l,c
  1755   001FDE  5010               	movf	(fputs@i+1)^0,w,c
  1756   001FE0  200B               	addwfc	(fputs@s+1)^0,w,c
  1757   001FE2  6EDA               	movwf	fsr2h,c
  1758   001FE4  50DF               	movf	indf2,w,c
  1759   001FE6  6E0E               	movwf	fputs@c^0,c
  1760   001FE8  500E               	movf	fputs@c^0,w,c
  1761   001FEA  A4D8               	btfss	status,2,c
  1762   001FEC  EFFA  F00F         	goto	u1121
  1763   001FF0  EFFC  F00F         	goto	u1120
  1764   001FF4                     u1121:
  1765   001FF4  EFE1  F00F         	goto	l1642
  1766   001FF8                     u1120:
  1767   001FF8  0012               	return		;funcret
  1768   001FFA                     __end_of_fputs:
  1769                           	callstack 0
  1770                           
  1771 ;; *************** function _fputc *****************
  1772 ;; Defined at:
  1773 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  c               2    0[COMRAM] int 
  1776 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1777 ;;		 -> sprintf@f(11), 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  2    0[COMRAM] int 
  1782 ;; Registers used:
  1783 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1792 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;Total ram usage:        9 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; Hardware stack levels required when called: 2
  1796 ;; This function calls:
  1797 ;;		_putch
  1798 ;; This function is called by:
  1799 ;;		_pad
  1800 ;;		_vfpfcnvrt
  1801 ;;		_fputs
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text7
  1806   001B1A                     __ptext7:
  1807                           	callstack 0
  1808   001B1A                     _fputc:
  1809                           	callstack 25
  1810   001B1A  5003               	movf	fputc@fp^0,w,c
  1811   001B1C  1004               	iorwf	(fputc@fp+1)^0,w,c
  1812   001B1E  B4D8               	btfsc	status,2,c
  1813   001B20  EF94  F00D         	goto	u1081
  1814   001B24  EF96  F00D         	goto	u1080
  1815   001B28                     u1081:
  1816   001B28  EF9F  F00D         	goto	l1630
  1817   001B2C                     u1080:
  1818   001B2C  5003               	movf	fputc@fp^0,w,c
  1819   001B2E  1004               	iorwf	(fputc@fp+1)^0,w,c
  1820   001B30  A4D8               	btfss	status,2,c
  1821   001B32  EF9D  F00D         	goto	u1091
  1822   001B36  EF9F  F00D         	goto	u1090
  1823   001B3A                     u1091:
  1824   001B3A  EFA4  F00D         	goto	l1632
  1825   001B3E                     u1090:
  1826   001B3E                     l1630:
  1827   001B3E  5001               	movf	fputc@c^0,w,c
  1828   001B40  ECE8  F010         	call	_putch
  1829   001B44  EFF1  F00D         	goto	l1019
  1830   001B48                     l1632:
  1831   001B48  EE20 F009          	lfsr	2,9
  1832   001B4C  5003               	movf	fputc@fp^0,w,c
  1833   001B4E  26D9               	addwf	fsr2l,f,c
  1834   001B50  5004               	movf	(fputc@fp+1)^0,w,c
  1835   001B52  22DA               	addwfc	fsr2h,f,c
  1836   001B54  50DE               	movf	postinc2,w,c
  1837   001B56  10DE               	iorwf	postinc2,w,c
  1838   001B58  B4D8               	btfsc	status,2,c
  1839   001B5A  EFB1  F00D         	goto	u1101
  1840   001B5E  EFB3  F00D         	goto	u1100
  1841   001B62                     u1101:
  1842   001B62  EFCE  F00D         	goto	l1636
  1843   001B66                     u1100:
  1844   001B66  EE20 F009          	lfsr	2,9
  1845   001B6A  5003               	movf	fputc@fp^0,w,c
  1846   001B6C  26D9               	addwf	fsr2l,f,c
  1847   001B6E  5004               	movf	(fputc@fp+1)^0,w,c
  1848   001B70  22DA               	addwfc	fsr2h,f,c
  1849   001B72  EE10 F003          	lfsr	1,3
  1850   001B76  5003               	movf	fputc@fp^0,w,c
  1851   001B78  26E1               	addwf	fsr1l,f,c
  1852   001B7A  5004               	movf	(fputc@fp+1)^0,w,c
  1853   001B7C  22E2               	addwfc	fsr1h,f,c
  1854   001B7E  50DE               	movf	postinc2,w,c
  1855   001B80  5CE6               	subwf	postinc1,w,c
  1856   001B82  50E6               	movf	postinc1,w,c
  1857   001B84  0A80               	xorlw	128
  1858   001B86  6E09               	movwf	(??_fputc+4)^0,c
  1859   001B88  50DE               	movf	postinc2,w,c
  1860   001B8A  0A80               	xorlw	128
  1861   001B8C  5809               	subwfb	(??_fputc+4)^0,w,c
  1862   001B8E  B0D8               	btfsc	status,0,c
  1863   001B90  EFCC  F00D         	goto	u1111
  1864   001B94  EFCE  F00D         	goto	u1110
  1865   001B98                     u1111:
  1866   001B98  EFF1  F00D         	goto	l1019
  1867   001B9C                     u1110:
  1868   001B9C                     l1636:
  1869   001B9C  EE20 F003          	lfsr	2,3
  1870   001BA0  5003               	movf	fputc@fp^0,w,c
  1871   001BA2  26D9               	addwf	fsr2l,f,c
  1872   001BA4  5004               	movf	(fputc@fp+1)^0,w,c
  1873   001BA6  22DA               	addwfc	fsr2h,f,c
  1874   001BA8  CFDE F005          	movff	postinc2,??_fputc
  1875   001BAC  CFDD F006          	movff	postdec2,??_fputc+1
  1876   001BB0  C003  FFD9         	movff	fputc@fp,fsr2l
  1877   001BB4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1878   001BB8  CFDE F007          	movff	postinc2,??_fputc+2
  1879   001BBC  CFDD F008          	movff	postdec2,??_fputc+3
  1880   001BC0  5005               	movf	??_fputc^0,w,c
  1881   001BC2  2407               	addwf	(??_fputc+2)^0,w,c
  1882   001BC4  6ED9               	movwf	fsr2l,c
  1883   001BC6  5006               	movf	(??_fputc+1)^0,w,c
  1884   001BC8  2008               	addwfc	(??_fputc+3)^0,w,c
  1885   001BCA  6EDA               	movwf	fsr2h,c
  1886   001BCC  C001  FFDF         	movff	fputc@c,indf2
  1887   001BD0  EE20 F003          	lfsr	2,3
  1888   001BD4  5003               	movf	fputc@fp^0,w,c
  1889   001BD6  26D9               	addwf	fsr2l,f,c
  1890   001BD8  5004               	movf	(fputc@fp+1)^0,w,c
  1891   001BDA  22DA               	addwfc	fsr2h,f,c
  1892   001BDC  2ADE               	incf	postinc2,f,c
  1893   001BDE  0E00               	movlw	0
  1894   001BE0  22DD               	addwfc	postdec2,f,c
  1895   001BE2                     l1019:
  1896   001BE2  0012               	return		;funcret
  1897   001BE4                     __end_of_fputc:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _putch *****************
  1901 ;; Defined at:
  1902 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  c               1    wreg     unsigned char 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  c               1    0[COMRAM] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 1
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_fputc
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text8
  1931   0021D0                     __ptext8:
  1932                           	callstack 0
  1933   0021D0                     _putch:
  1934                           	callstack 25
  1935   0021D0  0012               	return		;funcret
  1936   0021D2                     __end_of_putch:
  1937                           	callstack 0
  1938                           
  1939 ;; *************** function _abs *****************
  1940 ;; Defined at:
  1941 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  a               2   18[COMRAM] int 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  2   18[COMRAM] int 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1957 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1958 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1959 ;;Total ram usage:        4 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_dtoa
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text9
  1970   00203E                     __ptext9:
  1971                           	callstack 0
  1972   00203E                     _abs:
  1973                           	callstack 25
  1974   00203E  BE14               	btfsc	(abs@a+1)^0,7,c
  1975   002040  EF2C  F010         	goto	u1280
  1976   002044  5014               	movf	(abs@a+1)^0,w,c
  1977   002046  E106               	bnz	u1281
  1978   002048  0413               	decf	abs@a^0,w,c
  1979   00204A  B0D8               	btfsc	status,0,c
  1980   00204C  EF2A  F010         	goto	u1281
  1981   002050  EF2C  F010         	goto	u1280
  1982   002054                     u1281:
  1983   002054  EF3A  F010         	goto	l1004
  1984   002058                     u1280:
  1985   002058  C013  F015         	movff	abs@a,??_abs
  1986   00205C  C014  F016         	movff	abs@a+1,??_abs+1
  1987   002060  1E15               	comf	??_abs^0,f,c
  1988   002062  1E16               	comf	(??_abs+1)^0,f,c
  1989   002064  4A15               	infsnz	??_abs^0,f,c
  1990   002066  2A16               	incf	(??_abs+1)^0,f,c
  1991   002068  C015  F013         	movff	??_abs,?_abs
  1992   00206C  C016  F014         	movff	??_abs+1,?_abs+1
  1993   002070  EF3E  F010         	goto	l1007
  1994   002074                     l1004:
  1995   002074  C013  F013         	movff	abs@a,?_abs
  1996   002078  C014  F014         	movff	abs@a+1,?_abs+1
  1997   00207C                     l1007:
  1998   00207C  0012               	return		;funcret
  1999   00207E                     __end_of_abs:
  2000                           	callstack 0
  2001                           
  2002 ;; *************** function ___aomod *****************
  2003 ;; Defined at:
  2004 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  dividend        8    0[COMRAM] long long 
  2007 ;;  divisor         8    8[COMRAM] long long 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  sign            1   17[COMRAM] unsigned char 
  2010 ;;  counter         1   16[COMRAM] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  8    0[COMRAM] long long 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2020 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2023 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2024 ;;Total ram usage:       18 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_dtoa
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text10
  2035   0015E8                     __ptext10:
  2036                           	callstack 0
  2037   0015E8                     ___aomod:
  2038                           	callstack 25
  2039   0015E8  0E00               	movlw	0
  2040   0015EA  6E12               	movwf	___aomod@sign^0,c
  2041   0015EC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2042   0015EE  EFFD  F00A         	goto	u1200
  2043   0015F2  EFFB  F00A         	goto	u1201
  2044   0015F6                     u1201:
  2045   0015F6  EF0F  F00B         	goto	l1700
  2046   0015FA                     u1200:
  2047   0015FA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2048   0015FC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2049   0015FE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2050   001600  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2051   001602  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2052   001604  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2053   001606  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2054   001608  6C01               	negf	___aomod@dividend^0,c
  2055   00160A  0E00               	movlw	0
  2056   00160C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2057   00160E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2058   001610  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2059   001612  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2060   001614  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2061   001616  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2062   001618  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2063   00161A  0E01               	movlw	1
  2064   00161C  6E12               	movwf	___aomod@sign^0,c
  2065   00161E                     l1700:
  2066   00161E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2067   001620  EF16  F00B         	goto	u1210
  2068   001624  EF14  F00B         	goto	u1211
  2069   001628                     u1211:
  2070   001628  EF26  F00B         	goto	l1704
  2071   00162C                     u1210:
  2072   00162C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2073   00162E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2074   001630  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2075   001632  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2076   001634  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2077   001636  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2078   001638  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2079   00163A  6C09               	negf	___aomod@divisor^0,c
  2080   00163C  0E00               	movlw	0
  2081   00163E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2082   001640  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2083   001642  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2084   001644  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2085   001646  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2086   001648  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2087   00164A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2088   00164C                     l1704:
  2089   00164C  5009               	movf	___aomod@divisor^0,w,c
  2090   00164E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2091   001650  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2092   001652  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2093   001654  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2094   001656  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2095   001658  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2096   00165A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2097   00165C  B4D8               	btfsc	status,2,c
  2098   00165E  EF33  F00B         	goto	u1221
  2099   001662  EF35  F00B         	goto	u1220
  2100   001666                     u1221:
  2101   001666  EF7D  F00B         	goto	l1720
  2102   00166A                     u1220:
  2103   00166A  0E01               	movlw	1
  2104   00166C  6E11               	movwf	___aomod@counter^0,c
  2105   00166E  EF43  F00B         	goto	l1710
  2106   001672                     l1708:
  2107   001672  90D8               	bcf	status,0,c
  2108   001674  3609               	rlcf	___aomod@divisor^0,f,c
  2109   001676  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2110   001678  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2111   00167A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2112   00167C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2113   00167E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2114   001680  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2115   001682  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2116   001684  2A11               	incf	___aomod@counter^0,f,c
  2117   001686                     l1710:
  2118   001686  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2119   001688  EF48  F00B         	goto	u1231
  2120   00168C  EF4A  F00B         	goto	u1230
  2121   001690                     u1231:
  2122   001690  EF39  F00B         	goto	l1708
  2123   001694                     u1230:
  2124   001694                     l1712:
  2125   001694  5009               	movf	___aomod@divisor^0,w,c
  2126   001696  5C01               	subwf	___aomod@dividend^0,w,c
  2127   001698  500A               	movf	(___aomod@divisor+1)^0,w,c
  2128   00169A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2129   00169C  500B               	movf	(___aomod@divisor+2)^0,w,c
  2130   00169E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2131   0016A0  500C               	movf	(___aomod@divisor+3)^0,w,c
  2132   0016A2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2133   0016A4  500D               	movf	(___aomod@divisor+4)^0,w,c
  2134   0016A6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2135   0016A8  500E               	movf	(___aomod@divisor+5)^0,w,c
  2136   0016AA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2137   0016AC  500F               	movf	(___aomod@divisor+6)^0,w,c
  2138   0016AE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2139   0016B0  5010               	movf	(___aomod@divisor+7)^0,w,c
  2140   0016B2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2141   0016B4  A0D8               	btfss	status,0,c
  2142   0016B6  EF5F  F00B         	goto	u1241
  2143   0016BA  EF61  F00B         	goto	u1240
  2144   0016BE                     u1241:
  2145   0016BE  EF71  F00B         	goto	l1716
  2146   0016C2                     u1240:
  2147   0016C2  5009               	movf	___aomod@divisor^0,w,c
  2148   0016C4  5E01               	subwf	___aomod@dividend^0,f,c
  2149   0016C6  500A               	movf	(___aomod@divisor+1)^0,w,c
  2150   0016C8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2151   0016CA  500B               	movf	(___aomod@divisor+2)^0,w,c
  2152   0016CC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2153   0016CE  500C               	movf	(___aomod@divisor+3)^0,w,c
  2154   0016D0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2155   0016D2  500D               	movf	(___aomod@divisor+4)^0,w,c
  2156   0016D4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2157   0016D6  500E               	movf	(___aomod@divisor+5)^0,w,c
  2158   0016D8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2159   0016DA  500F               	movf	(___aomod@divisor+6)^0,w,c
  2160   0016DC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2161   0016DE  5010               	movf	(___aomod@divisor+7)^0,w,c
  2162   0016E0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2163   0016E2                     l1716:
  2164   0016E2  90D8               	bcf	status,0,c
  2165   0016E4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2166   0016E6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2167   0016E8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2168   0016EA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2169   0016EC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2170   0016EE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2171   0016F0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2172   0016F2  3209               	rrcf	___aomod@divisor^0,f,c
  2173   0016F4  2E11               	decfsz	___aomod@counter^0,f,c
  2174   0016F6  EF4A  F00B         	goto	l1712
  2175   0016FA                     l1720:
  2176   0016FA  5012               	movf	___aomod@sign^0,w,c
  2177   0016FC  B4D8               	btfsc	status,2,c
  2178   0016FE  EF83  F00B         	goto	u1251
  2179   001702  EF85  F00B         	goto	u1250
  2180   001706                     u1251:
  2181   001706  EF95  F00B         	goto	l1724
  2182   00170A                     u1250:
  2183   00170A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2184   00170C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2185   00170E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2186   001710  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2187   001712  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2188   001714  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2189   001716  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2190   001718  6C01               	negf	___aomod@dividend^0,c
  2191   00171A  0E00               	movlw	0
  2192   00171C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2193   00171E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2194   001720  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2195   001722  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2196   001724  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2197   001726  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2198   001728  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2199   00172A                     l1724:
  2200   00172A  C001  F001         	movff	___aomod@dividend,?___aomod
  2201   00172E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2202   001732  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2203   001736  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2204   00173A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2205   00173E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2206   001742  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2207   001746  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2208   00174A  0012               	return		;funcret
  2209   00174C                     __end_of___aomod:
  2210                           	callstack 0
  2211                           
  2212 ;; *************** function ___aodiv *****************
  2213 ;; Defined at:
  2214 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  dividend        8    0[COMRAM] long long 
  2217 ;;  divisor         8    8[COMRAM] long long 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  quotient        8   18[COMRAM] long long 
  2220 ;;  sign            1   17[COMRAM] unsigned char 
  2221 ;;  counter         1   16[COMRAM] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  8    0[COMRAM] long long 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2231 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2234 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2235 ;;Total ram usage:       26 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 1
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_dtoa
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text11
  2246   001460                     __ptext11:
  2247                           	callstack 0
  2248   001460                     ___aodiv:
  2249                           	callstack 25
  2250   001460  0E00               	movlw	0
  2251   001462  6E12               	movwf	___aodiv@sign^0,c
  2252   001464  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2253   001466  EF39  F00A         	goto	u1130
  2254   00146A  EF37  F00A         	goto	u1131
  2255   00146E                     u1131:
  2256   00146E  EF4B  F00A         	goto	l1656
  2257   001472                     u1130:
  2258   001472  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2259   001474  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2260   001476  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2261   001478  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2262   00147A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2263   00147C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2264   00147E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2265   001480  6C09               	negf	___aodiv@divisor^0,c
  2266   001482  0E00               	movlw	0
  2267   001484  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2268   001486  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2269   001488  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2270   00148A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2271   00148C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2272   00148E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2273   001490  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2274   001492  0E01               	movlw	1
  2275   001494  6E12               	movwf	___aodiv@sign^0,c
  2276   001496                     l1656:
  2277   001496  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2278   001498  EF52  F00A         	goto	u1140
  2279   00149C  EF50  F00A         	goto	u1141
  2280   0014A0                     u1141:
  2281   0014A0  EF64  F00A         	goto	l1662
  2282   0014A4                     u1140:
  2283   0014A4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2284   0014A6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2285   0014A8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2286   0014AA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2287   0014AC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2288   0014AE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2289   0014B0  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2290   0014B2  6C01               	negf	___aodiv@dividend^0,c
  2291   0014B4  0E00               	movlw	0
  2292   0014B6  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2293   0014B8  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2294   0014BA  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2295   0014BC  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2296   0014BE  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2297   0014C0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2298   0014C2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2299   0014C4  0E01               	movlw	1
  2300   0014C6  1A12               	xorwf	___aodiv@sign^0,f,c
  2301   0014C8                     l1662:
  2302   0014C8  EE20  F013         	lfsr	2,___aodiv@quotient
  2303   0014CC  0E07               	movlw	7
  2304   0014CE                     u1151:
  2305   0014CE  6ADE               	clrf	postinc2,c
  2306   0014D0  06E8               	decf	wreg,f,c
  2307   0014D2  E2FD               	bc	u1151
  2308   0014D4  5009               	movf	___aodiv@divisor^0,w,c
  2309   0014D6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2310   0014D8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2311   0014DA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2312   0014DC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2313   0014DE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2314   0014E0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2315   0014E2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2316   0014E4  B4D8               	btfsc	status,2,c
  2317   0014E6  EF77  F00A         	goto	u1161
  2318   0014EA  EF79  F00A         	goto	u1160
  2319   0014EE                     u1161:
  2320   0014EE  EFCB  F00A         	goto	l1684
  2321   0014F2                     u1160:
  2322   0014F2  0E01               	movlw	1
  2323   0014F4  6E11               	movwf	___aodiv@counter^0,c
  2324   0014F6  EF87  F00A         	goto	l1670
  2325   0014FA                     l1668:
  2326   0014FA  90D8               	bcf	status,0,c
  2327   0014FC  3609               	rlcf	___aodiv@divisor^0,f,c
  2328   0014FE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2329   001500  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2330   001502  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2331   001504  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2332   001506  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2333   001508  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2334   00150A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2335   00150C  2A11               	incf	___aodiv@counter^0,f,c
  2336   00150E                     l1670:
  2337   00150E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2338   001510  EF8C  F00A         	goto	u1171
  2339   001514  EF8E  F00A         	goto	u1170
  2340   001518                     u1171:
  2341   001518  EF7D  F00A         	goto	l1668
  2342   00151C                     u1170:
  2343   00151C                     l1672:
  2344   00151C  90D8               	bcf	status,0,c
  2345   00151E  3613               	rlcf	___aodiv@quotient^0,f,c
  2346   001520  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2347   001522  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2348   001524  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2349   001526  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2350   001528  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2351   00152A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2352   00152C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2353   00152E  5009               	movf	___aodiv@divisor^0,w,c
  2354   001530  5C01               	subwf	___aodiv@dividend^0,w,c
  2355   001532  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2356   001534  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2357   001536  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2358   001538  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2359   00153A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2360   00153C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2361   00153E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2362   001540  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2363   001542  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2364   001544  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2365   001546  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2366   001548  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2367   00154A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2368   00154C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2369   00154E  A0D8               	btfss	status,0,c
  2370   001550  EFAC  F00A         	goto	u1181
  2371   001554  EFAE  F00A         	goto	u1180
  2372   001558                     u1181:
  2373   001558  EFBF  F00A         	goto	l1680
  2374   00155C                     u1180:
  2375   00155C  5009               	movf	___aodiv@divisor^0,w,c
  2376   00155E  5E01               	subwf	___aodiv@dividend^0,f,c
  2377   001560  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2378   001562  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2379   001564  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2380   001566  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2381   001568  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2382   00156A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2383   00156C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2384   00156E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2385   001570  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2386   001572  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2387   001574  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2388   001576  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2389   001578  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2390   00157A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2391   00157C  8013               	bsf	___aodiv@quotient^0,0,c
  2392   00157E                     l1680:
  2393   00157E  90D8               	bcf	status,0,c
  2394   001580  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2395   001582  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2396   001584  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2397   001586  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2398   001588  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2399   00158A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2400   00158C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2401   00158E  3209               	rrcf	___aodiv@divisor^0,f,c
  2402   001590  2E11               	decfsz	___aodiv@counter^0,f,c
  2403   001592  EF8E  F00A         	goto	l1672
  2404   001596                     l1684:
  2405   001596  5012               	movf	___aodiv@sign^0,w,c
  2406   001598  B4D8               	btfsc	status,2,c
  2407   00159A  EFD1  F00A         	goto	u1191
  2408   00159E  EFD3  F00A         	goto	u1190
  2409   0015A2                     u1191:
  2410   0015A2  EFE3  F00A         	goto	l1688
  2411   0015A6                     u1190:
  2412   0015A6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2413   0015A8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2414   0015AA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2415   0015AC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2416   0015AE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2417   0015B0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2418   0015B2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2419   0015B4  6C13               	negf	___aodiv@quotient^0,c
  2420   0015B6  0E00               	movlw	0
  2421   0015B8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2422   0015BA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2423   0015BC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2424   0015BE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2425   0015C0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2426   0015C2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2427   0015C4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2428   0015C6                     l1688:
  2429   0015C6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2430   0015CA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2431   0015CE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2432   0015D2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2433   0015D6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2434   0015DA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2435   0015DE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2436   0015E2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2437   0015E6  0012               	return		;funcret
  2438   0015E8                     __end_of___aodiv:
  2439                           	callstack 0
  2440                           
  2441 ;; *************** function _dateIncrement *****************
  2442 ;; Defined at:
  2443 ;;		line 3 in file "../dateIncrement.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  daylightSavi    2   15[COMRAM] PTR unsigned char 
  2446 ;;		 -> main@daylightSavings(1), 
  2447 ;;  dayOfWeekP      2   17[COMRAM] PTR unsigned char 
  2448 ;;		 -> main@dayOfWeek(1), 
  2449 ;;  dayOfMonthP     2   19[COMRAM] PTR unsigned char 
  2450 ;;		 -> main@dayOfMonth(1), 
  2451 ;;  monthP          2   21[COMRAM] PTR unsigned char 
  2452 ;;		 -> main@month(1), 
  2453 ;;  yearP           2   23[COMRAM] PTR unsigned int 
  2454 ;;		 -> main@year(2), 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  runSyncro       1    0        unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2466 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;Total ram usage:       13 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 3
  2473 ;; This function calls:
  2474 ;;		_syncro
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text12
  2481   000E28                     __ptext12:
  2482                           	callstack 0
  2483   000E28                     _dateIncrement:
  2484                           	callstack 27
  2485   000E28                     
  2486                           ;../dateIncrement.c: 10:     if (hour >= 24){
  2487   000E28  0E17               	movlw	23
  2488   000E2A  645D               	cpfsgt	_hour^0,c
  2489   000E2C  EF1A  F007         	goto	u1761
  2490   000E30  EF1C  F007         	goto	u1760
  2491   000E34                     u1761:
  2492   000E34  EF2F  F007         	goto	l2030
  2493   000E38                     u1760:
  2494   000E38                     
  2495                           ;../dateIncrement.c: 11:         hour = 0;
  2496   000E38  0E00               	movlw	0
  2497   000E3A  6E5D               	movwf	_hour^0,c
  2498   000E3C                     
  2499                           ;../dateIncrement.c: 12:         *dayOfWeekP +=1;
  2500   000E3C  C012  FFD9         	movff	dateIncrement@dayOfWeekP,fsr2l
  2501   000E40  C013  FFDA         	movff	dateIncrement@dayOfWeekP+1,fsr2h
  2502   000E44  2ADF               	incf	indf2,f,c
  2503   000E46                     
  2504                           ;../dateIncrement.c: 13:         *dayOfMonthP += 1;
  2505   000E46  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2506   000E4A  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2507   000E4E  2ADF               	incf	indf2,f,c
  2508   000E50  C010  FFD9         	movff	dateIncrement@daylightSavingsP,fsr2l
  2509   000E54  C011  FFDA         	movff	dateIncrement@daylightSavingsP+1,fsr2h
  2510   000E58  50DF               	movf	indf2,w,c
  2511   000E5A  ECFB  F00C         	call	_syncro
  2512   000E5E                     l2030:
  2513                           
  2514                           ;../dateIncrement.c: 17:     if (*dayOfWeekP > 7){*dayOfWeekP = 1; }
  2515   000E5E  C012  FFD9         	movff	dateIncrement@dayOfWeekP,fsr2l
  2516   000E62  C013  FFDA         	movff	dateIncrement@dayOfWeekP+1,fsr2h
  2517   000E66  0E07               	movlw	7
  2518   000E68  64DF               	cpfsgt	indf2,c
  2519   000E6A  EF39  F007         	goto	u1771
  2520   000E6E  EF3B  F007         	goto	u1770
  2521   000E72                     u1771:
  2522   000E72  EF41  F007         	goto	l2034
  2523   000E76                     u1770:
  2524   000E76  C012  FFD9         	movff	dateIncrement@dayOfWeekP,fsr2l
  2525   000E7A  C013  FFDA         	movff	dateIncrement@dayOfWeekP+1,fsr2h
  2526   000E7E  0E01               	movlw	1
  2527   000E80  6EDF               	movwf	indf2,c
  2528   000E82                     l2034:
  2529                           
  2530                           ;../dateIncrement.c: 20:     if (*dayOfMonthP > 30 & (*monthP == 4 | *monthP == 6 | *mon
      +                          thP == 9 | *monthP == 11)){*dayOfMonthP = 1; *monthP +=1;}
  2531   000E82  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2532   000E86  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2533   000E8A  0E1E               	movlw	30
  2534   000E8C  64DF               	cpfsgt	indf2,c
  2535   000E8E  EF4B  F007         	goto	u1781
  2536   000E92  EF4D  F007         	goto	u1780
  2537   000E96                     u1781:
  2538   000E96  EF8C  F007         	goto	l2048
  2539   000E9A                     u1780:
  2540   000E9A  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2541   000E9E  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2542   000EA2  0E04               	movlw	4
  2543   000EA4  18DE               	xorwf	postinc2,w,c
  2544   000EA6  B4D8               	btfsc	status,2,c
  2545   000EA8  EF58  F007         	goto	u1791
  2546   000EAC  EF5A  F007         	goto	u1790
  2547   000EB0                     u1791:
  2548   000EB0  EF81  F007         	goto	l2044
  2549   000EB4                     u1790:
  2550   000EB4  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2551   000EB8  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2552   000EBC  0E06               	movlw	6
  2553   000EBE  18DE               	xorwf	postinc2,w,c
  2554   000EC0  B4D8               	btfsc	status,2,c
  2555   000EC2  EF65  F007         	goto	u1801
  2556   000EC6  EF67  F007         	goto	u1800
  2557   000ECA                     u1801:
  2558   000ECA  EF81  F007         	goto	l2044
  2559   000ECE                     u1800:
  2560   000ECE  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2561   000ED2  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2562   000ED6  0E09               	movlw	9
  2563   000ED8  18DE               	xorwf	postinc2,w,c
  2564   000EDA  B4D8               	btfsc	status,2,c
  2565   000EDC  EF72  F007         	goto	u1811
  2566   000EE0  EF74  F007         	goto	u1810
  2567   000EE4                     u1811:
  2568   000EE4  EF81  F007         	goto	l2044
  2569   000EE8                     u1810:
  2570   000EE8  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2571   000EEC  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2572   000EF0  0E0B               	movlw	11
  2573   000EF2  18DE               	xorwf	postinc2,w,c
  2574   000EF4  A4D8               	btfss	status,2,c
  2575   000EF6  EF7F  F007         	goto	u1821
  2576   000EFA  EF81  F007         	goto	u1820
  2577   000EFE                     u1821:
  2578   000EFE  EF8C  F007         	goto	l2048
  2579   000F02                     u1820:
  2580   000F02                     l2044:
  2581   000F02  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2582   000F06  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2583   000F0A  0E01               	movlw	1
  2584   000F0C  6EDF               	movwf	indf2,c
  2585   000F0E  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2586   000F12  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2587   000F16  2ADF               	incf	indf2,f,c
  2588   000F18                     l2048:
  2589                           
  2590                           ;../dateIncrement.c: 21:     if (*dayOfMonthP > 31 & (*monthP == 1 | *monthP == 3 | *mon
      +                          thP == 5 | *monthP == 7 | *monthP == 8 | *monthP == 10)){*dayOfMonthP = 1; *monthP +=1;}
  2591   000F18  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2592   000F1C  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2593   000F20  0E1F               	movlw	31
  2594   000F22  64DF               	cpfsgt	indf2,c
  2595   000F24  EF96  F007         	goto	u1831
  2596   000F28  EF98  F007         	goto	u1830
  2597   000F2C                     u1831:
  2598   000F2C  EFF0  F007         	goto	l2066
  2599   000F30                     u1830:
  2600   000F30  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2601   000F34  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2602   000F38  04DE               	decf	postinc2,w,c
  2603   000F3A  B4D8               	btfsc	status,2,c
  2604   000F3C  EFA2  F007         	goto	u1841
  2605   000F40  EFA4  F007         	goto	u1840
  2606   000F44                     u1841:
  2607   000F44  EFE5  F007         	goto	l2062
  2608   000F48                     u1840:
  2609   000F48  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2610   000F4C  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2611   000F50  0E03               	movlw	3
  2612   000F52  18DE               	xorwf	postinc2,w,c
  2613   000F54  B4D8               	btfsc	status,2,c
  2614   000F56  EFAF  F007         	goto	u1851
  2615   000F5A  EFB1  F007         	goto	u1850
  2616   000F5E                     u1851:
  2617   000F5E  EFE5  F007         	goto	l2062
  2618   000F62                     u1850:
  2619   000F62  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2620   000F66  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2621   000F6A  0E05               	movlw	5
  2622   000F6C  18DE               	xorwf	postinc2,w,c
  2623   000F6E  B4D8               	btfsc	status,2,c
  2624   000F70  EFBC  F007         	goto	u1861
  2625   000F74  EFBE  F007         	goto	u1860
  2626   000F78                     u1861:
  2627   000F78  EFE5  F007         	goto	l2062
  2628   000F7C                     u1860:
  2629   000F7C  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2630   000F80  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2631   000F84  0E07               	movlw	7
  2632   000F86  18DE               	xorwf	postinc2,w,c
  2633   000F88  B4D8               	btfsc	status,2,c
  2634   000F8A  EFC9  F007         	goto	u1871
  2635   000F8E  EFCB  F007         	goto	u1870
  2636   000F92                     u1871:
  2637   000F92  EFE5  F007         	goto	l2062
  2638   000F96                     u1870:
  2639   000F96  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2640   000F9A  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2641   000F9E  0E08               	movlw	8
  2642   000FA0  18DE               	xorwf	postinc2,w,c
  2643   000FA2  B4D8               	btfsc	status,2,c
  2644   000FA4  EFD6  F007         	goto	u1881
  2645   000FA8  EFD8  F007         	goto	u1880
  2646   000FAC                     u1881:
  2647   000FAC  EFE5  F007         	goto	l2062
  2648   000FB0                     u1880:
  2649   000FB0  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2650   000FB4  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2651   000FB8  0E0A               	movlw	10
  2652   000FBA  18DE               	xorwf	postinc2,w,c
  2653   000FBC  A4D8               	btfss	status,2,c
  2654   000FBE  EFE3  F007         	goto	u1891
  2655   000FC2  EFE5  F007         	goto	u1890
  2656   000FC6                     u1891:
  2657   000FC6  EFF0  F007         	goto	l2066
  2658   000FCA                     u1890:
  2659   000FCA                     l2062:
  2660   000FCA  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2661   000FCE  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2662   000FD2  0E01               	movlw	1
  2663   000FD4  6EDF               	movwf	indf2,c
  2664   000FD6  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2665   000FDA  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2666   000FDE  2ADF               	incf	indf2,f,c
  2667   000FE0                     l2066:
  2668                           
  2669                           ;../dateIncrement.c: 22:     if (*dayOfMonthP > 27 & *monthP == 2){
  2670   000FE0  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2671   000FE4  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2672   000FE8  0E1B               	movlw	27
  2673   000FEA  64DF               	cpfsgt	indf2,c
  2674   000FEC  EFFA  F007         	goto	u1901
  2675   000FF0  EFFC  F007         	goto	u1900
  2676   000FF4                     u1901:
  2677   000FF4  EF45  F008         	goto	l2084
  2678   000FF8                     u1900:
  2679   000FF8  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2680   000FFC  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2681   001000  0E02               	movlw	2
  2682   001002  18DE               	xorwf	postinc2,w,c
  2683   001004  A4D8               	btfss	status,2,c
  2684   001006  EF07  F008         	goto	u1911
  2685   00100A  EF09  F008         	goto	u1910
  2686   00100E                     u1911:
  2687   00100E  EF45  F008         	goto	l2084
  2688   001012                     u1910:
  2689   001012                     
  2690                           ;../dateIncrement.c: 23:         if (*yearP%4 == 0){
  2691   001012  C018  FFD9         	movff	dateIncrement@yearP,fsr2l
  2692   001016  C019  FFDA         	movff	dateIncrement@yearP+1,fsr2h
  2693   00101A  CFDE F01A          	movff	postinc2,??_dateIncrement
  2694   00101E  CFDD F01B          	movff	postdec2,??_dateIncrement+1
  2695   001022  0E03               	movlw	3
  2696   001024  161A               	andwf	??_dateIncrement^0,f,c
  2697   001026  0E00               	movlw	0
  2698   001028  161B               	andwf	(??_dateIncrement+1)^0,f,c
  2699   00102A  501A               	movf	??_dateIncrement^0,w,c
  2700   00102C  101B               	iorwf	(??_dateIncrement+1)^0,w,c
  2701   00102E  A4D8               	btfss	status,2,c
  2702   001030  EF1C  F008         	goto	u1921
  2703   001034  EF1E  F008         	goto	u1920
  2704   001038                     u1921:
  2705   001038  EF37  F008         	goto	l2078
  2706   00103C                     u1920:
  2707   00103C                     
  2708                           ;../dateIncrement.c: 24:             if (*dayOfMonthP > 29){*dayOfMonthP = 1; *monthP +=
      +                          1;}
  2709   00103C  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2710   001040  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2711   001044  0E1D               	movlw	29
  2712   001046  64DF               	cpfsgt	indf2,c
  2713   001048  EF28  F008         	goto	u1931
  2714   00104C  EF2A  F008         	goto	u1930
  2715   001050                     u1931:
  2716   001050  EF45  F008         	goto	l2084
  2717   001054                     u1930:
  2718   001054                     l2074:
  2719   001054  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2720   001058  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2721   00105C  0E01               	movlw	1
  2722   00105E  6EDF               	movwf	indf2,c
  2723   001060  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2724   001064  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2725   001068  2ADF               	incf	indf2,f,c
  2726   00106A  EF45  F008         	goto	l2084
  2727   00106E                     l2078:
  2728                           
  2729                           ;../dateIncrement.c: 27:             if (*dayOfMonthP > 28){*dayOfMonthP = 1; *monthP +=
      +                          1;}
  2730   00106E  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2731   001072  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2732   001076  0E1C               	movlw	28
  2733   001078  64DF               	cpfsgt	indf2,c
  2734   00107A  EF41  F008         	goto	u1941
  2735   00107E  EF43  F008         	goto	u1940
  2736   001082                     u1941:
  2737   001082  EF45  F008         	goto	l2084
  2738   001086                     u1940:
  2739   001086  EF2A  F008         	goto	l2074
  2740   00108A                     l2084:
  2741                           
  2742                           ;../dateIncrement.c: 31:     if (*dayOfMonthP > 31 & *monthP == 12){*dayOfMonthP = 1; *m
      +                          onthP = 1; *yearP+=1;}
  2743   00108A  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2744   00108E  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2745   001092  0E1F               	movlw	31
  2746   001094  64DF               	cpfsgt	indf2,c
  2747   001096  EF4F  F008         	goto	u1951
  2748   00109A  EF51  F008         	goto	u1950
  2749   00109E                     u1951:
  2750   00109E  EF71  F008         	goto	l2092
  2751   0010A2                     u1950:
  2752   0010A2  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2753   0010A6  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2754   0010AA  0E0C               	movlw	12
  2755   0010AC  18DE               	xorwf	postinc2,w,c
  2756   0010AE  A4D8               	btfss	status,2,c
  2757   0010B0  EF5C  F008         	goto	u1961
  2758   0010B4  EF5E  F008         	goto	u1960
  2759   0010B8                     u1961:
  2760   0010B8  EF71  F008         	goto	l2092
  2761   0010BC                     u1960:
  2762   0010BC  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2763   0010C0  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2764   0010C4  0E01               	movlw	1
  2765   0010C6  6EDF               	movwf	indf2,c
  2766   0010C8  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2767   0010CC  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2768   0010D0  0E01               	movlw	1
  2769   0010D2  6EDF               	movwf	indf2,c
  2770   0010D4  C018  FFD9         	movff	dateIncrement@yearP,fsr2l
  2771   0010D8  C019  FFDA         	movff	dateIncrement@yearP+1,fsr2h
  2772   0010DC  2ADE               	incf	postinc2,f,c
  2773   0010DE  0E00               	movlw	0
  2774   0010E0  22DD               	addwfc	postdec2,f,c
  2775   0010E2                     l2092:
  2776                           
  2777                           ;../dateIncrement.c: 34:     if (*monthP == 3 & *dayOfMonthP > 24 & *dayOfWeekP == 7 & !
      +                          *daylightSavingsP & hour == 1){hour -= 1; *daylightSavingsP = 1;}
  2778   0010E2  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2779   0010E6  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2780   0010EA  0E03               	movlw	3
  2781   0010EC  18DE               	xorwf	postinc2,w,c
  2782   0010EE  A4D8               	btfss	status,2,c
  2783   0010F0  EF7C  F008         	goto	u1971
  2784   0010F4  EF7E  F008         	goto	u1970
  2785   0010F8                     u1971:
  2786   0010F8  EFB2  F008         	goto	l2106
  2787   0010FC                     u1970:
  2788   0010FC  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2789   001100  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2790   001104  0E18               	movlw	24
  2791   001106  64DF               	cpfsgt	indf2,c
  2792   001108  EF88  F008         	goto	u1981
  2793   00110C  EF8A  F008         	goto	u1980
  2794   001110                     u1981:
  2795   001110  EFB2  F008         	goto	l2106
  2796   001114                     u1980:
  2797   001114  C012  FFD9         	movff	dateIncrement@dayOfWeekP,fsr2l
  2798   001118  C013  FFDA         	movff	dateIncrement@dayOfWeekP+1,fsr2h
  2799   00111C  0E07               	movlw	7
  2800   00111E  18DE               	xorwf	postinc2,w,c
  2801   001120  A4D8               	btfss	status,2,c
  2802   001122  EF95  F008         	goto	u1991
  2803   001126  EF97  F008         	goto	u1990
  2804   00112A                     u1991:
  2805   00112A  EFB2  F008         	goto	l2106
  2806   00112E                     u1990:
  2807   00112E  C010  FFD9         	movff	dateIncrement@daylightSavingsP,fsr2l
  2808   001132  C011  FFDA         	movff	dateIncrement@daylightSavingsP+1,fsr2h
  2809   001136  50DF               	movf	indf2,w,c
  2810   001138  A4D8               	btfss	status,2,c
  2811   00113A  EFA1  F008         	goto	u2001
  2812   00113E  EFA3  F008         	goto	u2000
  2813   001142                     u2001:
  2814   001142  EFB2  F008         	goto	l2106
  2815   001146                     u2000:
  2816   001146  045D               	decf	_hour^0,w,c
  2817   001148  A4D8               	btfss	status,2,c
  2818   00114A  EFA9  F008         	goto	u2011
  2819   00114E  EFAB  F008         	goto	u2010
  2820   001152                     u2011:
  2821   001152  EFB2  F008         	goto	l2106
  2822   001156                     u2010:
  2823   001156  065D               	decf	_hour^0,f,c
  2824   001158  C010  FFD9         	movff	dateIncrement@daylightSavingsP,fsr2l
  2825   00115C  C011  FFDA         	movff	dateIncrement@daylightSavingsP+1,fsr2h
  2826   001160  0E01               	movlw	1
  2827   001162  6EDF               	movwf	indf2,c
  2828   001164                     l2106:
  2829                           
  2830                           ;../dateIncrement.c: 35:     if (*monthP ==8 & *dayOfMonthP > 24 & *dayOfWeekP == 7 & *d
      +                          aylightSavingsP) {hour += 1; *daylightSavingsP = 0;}
  2831   001164  0E00               	movlw	0
  2832   001166  6E1C               	movwf	_dateIncrement$882^0,c
  2833   001168  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2834   00116C  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2835   001170  0E08               	movlw	8
  2836   001172  18DE               	xorwf	postinc2,w,c
  2837   001174  A4D8               	btfss	status,2,c
  2838   001176  EFBF  F008         	goto	u2021
  2839   00117A  EFC1  F008         	goto	u2020
  2840   00117E                     u2021:
  2841   00117E  EFDC  F008         	goto	l2116
  2842   001182                     u2020:
  2843   001182  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2844   001186  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2845   00118A  0E18               	movlw	24
  2846   00118C  64DF               	cpfsgt	indf2,c
  2847   00118E  EFCB  F008         	goto	u2031
  2848   001192  EFCD  F008         	goto	u2030
  2849   001196                     u2031:
  2850   001196  EFDC  F008         	goto	l2116
  2851   00119A                     u2030:
  2852   00119A  C012  FFD9         	movff	dateIncrement@dayOfWeekP,fsr2l
  2853   00119E  C013  FFDA         	movff	dateIncrement@dayOfWeekP+1,fsr2h
  2854   0011A2  0E07               	movlw	7
  2855   0011A4  18DE               	xorwf	postinc2,w,c
  2856   0011A6  A4D8               	btfss	status,2,c
  2857   0011A8  EFD8  F008         	goto	u2041
  2858   0011AC  EFDA  F008         	goto	u2040
  2859   0011B0                     u2041:
  2860   0011B0  EFDC  F008         	goto	l2116
  2861   0011B4                     u2040:
  2862   0011B4  0E01               	movlw	1
  2863   0011B6  6E1C               	movwf	_dateIncrement$882^0,c
  2864   0011B8                     l2116:
  2865   0011B8  C010  FFD9         	movff	dateIncrement@daylightSavingsP,fsr2l
  2866   0011BC  C011  FFDA         	movff	dateIncrement@daylightSavingsP+1,fsr2h
  2867   0011C0  50DF               	movf	indf2,w,c
  2868   0011C2  141C               	andwf	_dateIncrement$882^0,w,c
  2869   0011C4  0900               	iorlw	0
  2870   0011C6  B4D8               	btfsc	status,2,c
  2871   0011C8  EFE8  F008         	goto	u2051
  2872   0011CC  EFEA  F008         	goto	u2050
  2873   0011D0                     u2051:
  2874   0011D0  EFF1  F008         	goto	l142
  2875   0011D4                     u2050:
  2876   0011D4  2A5D               	incf	_hour^0,f,c
  2877   0011D6  C010  FFD9         	movff	dateIncrement@daylightSavingsP,fsr2l
  2878   0011DA  C011  FFDA         	movff	dateIncrement@daylightSavingsP+1,fsr2h
  2879   0011DE  0E00               	movlw	0
  2880   0011E0  6EDF               	movwf	indf2,c
  2881   0011E2                     l142:
  2882   0011E2  0012               	return		;funcret
  2883   0011E4                     __end_of_dateIncrement:
  2884                           	callstack 0
  2885                           
  2886 ;; *************** function _syncro *****************
  2887 ;; Defined at:
  2888 ;;		line 3 in file "../syncro.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  daylightSavi    1    wreg     unsigned char 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  daylightSavi    1   13[COMRAM] unsigned char 
  2893 ;;  trueMid         1    0        unsigned char 
  2894 ;;  trueMid         1   14[COMRAM] unsigned char 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2, status,0, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;Total ram usage:        7 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; Hardware stack levels required when called: 2
  2911 ;; This function calls:
  2912 ;;		___awdiv
  2913 ;; This function is called by:
  2914 ;;		_dateIncrement
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text13
  2919   0019F6                     __ptext13:
  2920                           	callstack 0
  2921   0019F6                     _syncro:
  2922                           	callstack 27
  2923                           
  2924                           ;incstack = 0
  2925                           ;syncro@daylightSavings stored from wreg
  2926   0019F6  6E0E               	movwf	syncro@daylightSavings^0,c
  2927   0019F8                     
  2928                           ;../syncro.c: 4:     char trueMid = 12;
  2929   0019F8  0E0C               	movlw	12
  2930   0019FA  6E0F               	movwf	syncro@trueMid^0,c
  2931   0019FC                     
  2932                           ;../syncro.c: 5:     if (daylightSavings){char trueMid = 13;}
  2933   0019FC  500E               	movf	syncro@daylightSavings^0,w,c
  2934   0019FE  B4D8               	btfsc	status,2,c
  2935   001A00  EF04  F00D         	goto	u1581
  2936   001A04  EF06  F00D         	goto	u1580
  2937   001A08                     u1581:
  2938   001A08  EF06  F00D         	goto	l1906
  2939   001A0C                     u1580:
  2940   001A0C                     l1906:
  2941                           
  2942                           ;../syncro.c: 6:     if ( ((sunUp - sunDown) > 7) & (sunUp - sunDown < 16) ){
  2943   001A0C  505B               	movf	_sunDown^0,w,c
  2944   001A0E  C05C  F009         	movff	_sunUp,??_syncro
  2945   001A12  6A0A               	clrf	(??_syncro+1)^0,c
  2946   001A14  5E09               	subwf	??_syncro^0,f,c
  2947   001A16  0E00               	movlw	0
  2948   001A18  5A0A               	subwfb	(??_syncro+1)^0,f,c
  2949   001A1A  BE0A               	btfsc	(??_syncro+1)^0,7,c
  2950   001A1C  EF19  F00D         	goto	u1591
  2951   001A20  500A               	movf	(??_syncro+1)^0,w,c
  2952   001A22  E109               	bnz	u1590
  2953   001A24  0E08               	movlw	8
  2954   001A26  5C09               	subwf	??_syncro^0,w,c
  2955   001A28  A0D8               	btfss	status,0,c
  2956   001A2A  EF19  F00D         	goto	u1591
  2957   001A2E  EF1B  F00D         	goto	u1590
  2958   001A32                     u1591:
  2959   001A32  EF85  F00D         	goto	l1924
  2960   001A36                     u1590:
  2961   001A36  505B               	movf	_sunDown^0,w,c
  2962   001A38  C05C  F009         	movff	_sunUp,??_syncro
  2963   001A3C  6A0A               	clrf	(??_syncro+1)^0,c
  2964   001A3E  5E09               	subwf	??_syncro^0,f,c
  2965   001A40  0E00               	movlw	0
  2966   001A42  5A0A               	subwfb	(??_syncro+1)^0,f,c
  2967   001A44  BE0A               	btfsc	(??_syncro+1)^0,7,c
  2968   001A46  EF30  F00D         	goto	u1600
  2969   001A4A  500A               	movf	(??_syncro+1)^0,w,c
  2970   001A4C  E107               	bnz	u1601
  2971   001A4E  0E10               	movlw	16
  2972   001A50  5C09               	subwf	??_syncro^0,w,c
  2973   001A52  B0D8               	btfsc	status,0,c
  2974   001A54  EF2E  F00D         	goto	u1601
  2975   001A58  EF30  F00D         	goto	u1600
  2976   001A5C                     u1601:
  2977   001A5C  EF85  F00D         	goto	l1924
  2978   001A60                     u1600:
  2979   001A60                     
  2980                           ;../syncro.c: 7:     midDay = ((sunUp + sunDown)/2);
  2981   001A60  505C               	movf	_sunUp^0,w,c
  2982   001A62  245B               	addwf	_sunDown^0,w,c
  2983   001A64  6E01               	movwf	___awdiv@dividend^0,c
  2984   001A66  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2985   001A68  3602               	rlcf	(___awdiv@dividend+1)^0,f,c
  2986   001A6A  0E00               	movlw	0
  2987   001A6C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2988   001A6E  0E02               	movlw	2
  2989   001A70  6E03               	movwf	___awdiv@divisor^0,c
  2990   001A72  ECF2  F00D         	call	___awdiv	;wreg free
  2991   001A76  5001               	movf	?___awdiv^0,w,c
  2992   001A78  0100               	movlb	0	; () banked
  2993   001A7A  6FD2               	movwf	_midDay& (0+255),b
  2994   001A7C                     
  2995                           ; BSR set to: 0
  2996                           ;../syncro.c: 8:         if (midDay != trueMid){
  2997   001A7C  0E0C               	movlw	12
  2998   001A7E  19D2               	xorwf	_midDay& (0+255),w,b
  2999   001A80  B4D8               	btfsc	status,2,c
  3000   001A82  EF45  F00D         	goto	u1611
  3001   001A86  EF47  F00D         	goto	u1610
  3002   001A8A                     u1611:
  3003   001A8A  EF88  F00D         	goto	l246
  3004   001A8E                     u1610:
  3005   001A8E                     
  3006                           ; BSR set to: 0
  3007                           ;../syncro.c: 10:             if ((midDay - trueMid) > 0){hour += (midDay - trueMid);}
  3008   001A8E  0EF4               	movlw	244
  3009   001A90  25D2               	addwf	_midDay& (0+255),w,b
  3010   001A92  6E09               	movwf	??_syncro^0,c
  3011   001A94  6A0A               	clrf	(??_syncro+1)^0,c
  3012   001A96  0EFF               	movlw	255
  3013   001A98  220A               	addwfc	(??_syncro+1)^0,f,c
  3014   001A9A  BE0A               	btfsc	(??_syncro+1)^0,7,c
  3015   001A9C  EF58  F00D         	goto	u1621
  3016   001AA0  500A               	movf	(??_syncro+1)^0,w,c
  3017   001AA2  E108               	bnz	u1620
  3018   001AA4  0409               	decf	??_syncro^0,w,c
  3019   001AA6  A0D8               	btfss	status,0,c
  3020   001AA8  EF58  F00D         	goto	u1621
  3021   001AAC  EF5A  F00D         	goto	u1620
  3022   001AB0                     u1621:
  3023   001AB0  EF67  F00D         	goto	l1920
  3024   001AB4                     u1620:
  3025   001AB4                     
  3026                           ; BSR set to: 0
  3027   001AB4  51D2               	movf	_midDay& (0+255),w,b
  3028   001AB6  0FF4               	addlw	244
  3029   001AB8  265D               	addwf	_hour^0,f,c
  3030   001ABA  EF88  F00D         	goto	l246
  3031   001ABE                     l1918:
  3032                           
  3033                           ; BSR set to: 0
  3034   001ABE  0E15               	movlw	21
  3035   001AC0  6E09               	movwf	??_syncro^0,c
  3036   001AC2  0EC6               	movlw	198
  3037   001AC4                     u2127:
  3038   001AC4  2EE8               	decfsz	wreg,f,c
  3039   001AC6  D7FE               	bra	u2127
  3040   001AC8  2E09               	decfsz	??_syncro^0,f,c
  3041   001ACA  D7FC               	bra	u2127
  3042   001ACC  D000               	nop2	
  3043   001ACE                     l1920:
  3044   001ACE  0100               	movlb	0	; () banked
  3045   001AD0  51D2               	movf	_midDay& (0+255),w,b
  3046   001AD2  C00F  F009         	movff	syncro@trueMid,??_syncro
  3047   001AD6  6A0A               	clrf	(??_syncro+1)^0,c
  3048   001AD8  5E09               	subwf	??_syncro^0,f,c
  3049   001ADA  0E00               	movlw	0
  3050   001ADC  5A0A               	subwfb	(??_syncro+1)^0,f,c
  3051   001ADE  505D               	movf	_hour^0,w,c
  3052   001AE0  6E0B               	movwf	(??_syncro+2)^0,c
  3053   001AE2  6A0C               	clrf	(??_syncro+3)^0,c
  3054   001AE4  5009               	movf	??_syncro^0,w,c
  3055   001AE6  5C0B               	subwf	(??_syncro+2)^0,w,c
  3056   001AE8  500C               	movf	(??_syncro+3)^0,w,c
  3057   001AEA  0A80               	xorlw	128
  3058   001AEC  6E0D               	movwf	(??_syncro+4)^0,c
  3059   001AEE  500A               	movf	(??_syncro+1)^0,w,c
  3060   001AF0  0A80               	xorlw	128
  3061   001AF2  580D               	subwfb	(??_syncro+4)^0,w,c
  3062   001AF4  A0D8               	btfss	status,0,c
  3063   001AF6  EF7F  F00D         	goto	u1631
  3064   001AFA  EF81  F00D         	goto	u1630
  3065   001AFE                     u1631:
  3066   001AFE  EF5F  F00D         	goto	l1918
  3067   001B02                     u1630:
  3068   001B02                     
  3069                           ; BSR set to: 0
  3070                           ;../syncro.c: 14:                 hour = 0;
  3071   001B02  0E00               	movlw	0
  3072   001B04  6E5D               	movwf	_hour^0,c
  3073   001B06  EF88  F00D         	goto	l246
  3074   001B0A                     l1924:
  3075   001B0A  0E00               	movlw	0
  3076   001B0C  0100               	movlb	0	; () banked
  3077   001B0E  6FD2               	movwf	_midDay& (0+255),b
  3078   001B10                     l246:
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;../syncro.c: 20:     sunUp = sunDown = 0;
  3082   001B10  0E00               	movlw	0
  3083   001B12  6E5B               	movwf	_sunDown^0,c
  3084   001B14  C05B  F05C         	movff	_sunDown,_sunUp
  3085   001B18                     
  3086                           ; BSR set to: 0
  3087   001B18  0012               	return		;funcret
  3088   001B1A                     __end_of_syncro:
  3089                           	callstack 0
  3090                           
  3091 ;; *************** function ___awdiv *****************
  3092 ;; Defined at:
  3093 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  dividend        2    0[COMRAM] int 
  3096 ;;  divisor         2    2[COMRAM] int 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  quotient        2    6[COMRAM] int 
  3099 ;;  sign            1    5[COMRAM] unsigned char 
  3100 ;;  counter         1    4[COMRAM] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  2    0[COMRAM] int 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3111 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3113 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3114 ;;Total ram usage:        8 bytes
  3115 ;; Hardware stack levels used: 1
  3116 ;; Hardware stack levels required when called: 1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_syncro
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text14
  3125   001BE4                     __ptext14:
  3126                           	callstack 0
  3127   001BE4                     ___awdiv:
  3128                           	callstack 27
  3129   001BE4  0E00               	movlw	0
  3130   001BE6  6E06               	movwf	___awdiv@sign^0,c
  3131   001BE8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3132   001BEA  EFFB  F00D         	goto	u1470
  3133   001BEE  EFF9  F00D         	goto	u1471
  3134   001BF2                     u1471:
  3135   001BF2  EF01  F00E         	goto	l1818
  3136   001BF6                     u1470:
  3137   001BF6  6C03               	negf	___awdiv@divisor^0,c
  3138   001BF8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3139   001BFA  B0D8               	btfsc	status,0,c
  3140   001BFC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3141   001BFE  0E01               	movlw	1
  3142   001C00  6E06               	movwf	___awdiv@sign^0,c
  3143   001C02                     l1818:
  3144   001C02  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3145   001C04  EF08  F00E         	goto	u1480
  3146   001C08  EF06  F00E         	goto	u1481
  3147   001C0C                     u1481:
  3148   001C0C  EF0E  F00E         	goto	l1824
  3149   001C10                     u1480:
  3150   001C10  6C01               	negf	___awdiv@dividend^0,c
  3151   001C12  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3152   001C14  B0D8               	btfsc	status,0,c
  3153   001C16  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3154   001C18  0E01               	movlw	1
  3155   001C1A  1A06               	xorwf	___awdiv@sign^0,f,c
  3156   001C1C                     l1824:
  3157   001C1C  0E00               	movlw	0
  3158   001C1E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3159   001C20  0E00               	movlw	0
  3160   001C22  6E07               	movwf	___awdiv@quotient^0,c
  3161   001C24  5003               	movf	___awdiv@divisor^0,w,c
  3162   001C26  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3163   001C28  B4D8               	btfsc	status,2,c
  3164   001C2A  EF19  F00E         	goto	u1491
  3165   001C2E  EF1B  F00E         	goto	u1490
  3166   001C32                     u1491:
  3167   001C32  EF43  F00E         	goto	l1846
  3168   001C36                     u1490:
  3169   001C36  0E01               	movlw	1
  3170   001C38  6E05               	movwf	___awdiv@counter^0,c
  3171   001C3A  EF23  F00E         	goto	l1832
  3172   001C3E                     l1830:
  3173   001C3E  90D8               	bcf	status,0,c
  3174   001C40  3603               	rlcf	___awdiv@divisor^0,f,c
  3175   001C42  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3176   001C44  2A05               	incf	___awdiv@counter^0,f,c
  3177   001C46                     l1832:
  3178   001C46  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3179   001C48  EF28  F00E         	goto	u1501
  3180   001C4C  EF2A  F00E         	goto	u1500
  3181   001C50                     u1501:
  3182   001C50  EF1F  F00E         	goto	l1830
  3183   001C54                     u1500:
  3184   001C54                     l1834:
  3185   001C54  90D8               	bcf	status,0,c
  3186   001C56  3607               	rlcf	___awdiv@quotient^0,f,c
  3187   001C58  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3188   001C5A  5003               	movf	___awdiv@divisor^0,w,c
  3189   001C5C  5C01               	subwf	___awdiv@dividend^0,w,c
  3190   001C5E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3191   001C60  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3192   001C62  A0D8               	btfss	status,0,c
  3193   001C64  EF36  F00E         	goto	u1511
  3194   001C68  EF38  F00E         	goto	u1510
  3195   001C6C                     u1511:
  3196   001C6C  EF3D  F00E         	goto	l1842
  3197   001C70                     u1510:
  3198   001C70  5003               	movf	___awdiv@divisor^0,w,c
  3199   001C72  5E01               	subwf	___awdiv@dividend^0,f,c
  3200   001C74  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3201   001C76  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3202   001C78  8007               	bsf	___awdiv@quotient^0,0,c
  3203   001C7A                     l1842:
  3204   001C7A  90D8               	bcf	status,0,c
  3205   001C7C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3206   001C7E  3203               	rrcf	___awdiv@divisor^0,f,c
  3207   001C80  2E05               	decfsz	___awdiv@counter^0,f,c
  3208   001C82  EF2A  F00E         	goto	l1834
  3209   001C86                     l1846:
  3210   001C86  5006               	movf	___awdiv@sign^0,w,c
  3211   001C88  B4D8               	btfsc	status,2,c
  3212   001C8A  EF49  F00E         	goto	u1521
  3213   001C8E  EF4B  F00E         	goto	u1520
  3214   001C92                     u1521:
  3215   001C92  EF4F  F00E         	goto	l1850
  3216   001C96                     u1520:
  3217   001C96  6C07               	negf	___awdiv@quotient^0,c
  3218   001C98  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3219   001C9A  B0D8               	btfsc	status,0,c
  3220   001C9C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3221   001C9E                     l1850:
  3222   001C9E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3223   001CA2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3224   001CA6  0012               	return		;funcret
  3225   001CA8                     __end_of___awdiv:
  3226                           	callstack 0
  3227                           
  3228 ;; *************** function _Timer0_init *****************
  3229 ;; Defined at:
  3230 ;;		line 5 in file "../timers.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;Total ram usage:        0 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; Hardware stack levels required when called: 1
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text15
  3259   00216E                     __ptext15:
  3260                           	callstack 0
  3261   00216E                     _Timer0_init:
  3262                           	callstack 29
  3263   00216E                     
  3264                           ;../timers.c: 7:     T0CON1bits.T0CS=0b010;
  3265   00216E  50D6               	movf	214,w,c	;volatile
  3266   002170  0B1F               	andlw	-225
  3267   002172  0940               	iorlw	64
  3268   002174  6ED6               	movwf	214,c	;volatile
  3269   002176                     
  3270                           ;../timers.c: 8:     T0CON1bits.T0ASYNC=1;
  3271   002176  88D6               	bsf	214,4,c	;volatile
  3272                           
  3273                           ;../timers.c: 9:     T0CON1bits.T0CKPS=0b0110;
  3274   002178  50D6               	movf	214,w,c	;volatile
  3275   00217A  0BF0               	andlw	-16
  3276   00217C  0906               	iorlw	6
  3277   00217E  6ED6               	movwf	214,c	;volatile
  3278   002180                     
  3279                           ;../timers.c: 10:     T0CON0bits.T016BIT=1;
  3280   002180  88D5               	bsf	213,4,c	;volatile
  3281                           
  3282                           ;../timers.c: 13:     TMR0H=0;
  3283   002182  0E00               	movlw	0
  3284   002184  6ED4               	movwf	212,c	;volatile
  3285                           
  3286                           ;../timers.c: 14:     TMR0L=0;
  3287   002186  0E00               	movlw	0
  3288   002188  6ED3               	movwf	211,c	;volatile
  3289   00218A                     
  3290                           ;../timers.c: 15:     T0CON0bits.T0EN=1;
  3291   00218A  8ED5               	bsf	213,7,c	;volatile
  3292   00218C  0012               	return		;funcret
  3293   00218E                     __end_of_Timer0_init:
  3294                           	callstack 0
  3295                           
  3296 ;; *************** function _LEDarray_init *****************
  3297 ;; Defined at:
  3298 ;;		line 7 in file "../LEDarray.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		None
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;Total ram usage:        0 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 1
  3319 ;; This function calls:
  3320 ;;		Nothing
  3321 ;; This function is called by:
  3322 ;;		_main
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text16
  3327   00214C                     __ptext16:
  3328                           	callstack 0
  3329   00214C                     _LEDarray_init:
  3330                           	callstack 29
  3331   00214C                     
  3332                           ;../LEDarray.c: 10:     TRISGbits.TRISG0=0;
  3333   00214C  9087               	bcf	135,0,c	;volatile
  3334                           
  3335                           ;../LEDarray.c: 11:     TRISGbits.TRISG1=0;
  3336   00214E  9287               	bcf	135,1,c	;volatile
  3337                           
  3338                           ;../LEDarray.c: 12:     TRISAbits.TRISA2=0;
  3339   002150  9481               	bcf	129,2,c	;volatile
  3340                           
  3341                           ;../LEDarray.c: 13:     TRISFbits.TRISF6=0;
  3342   002152  9C86               	bcf	134,6,c	;volatile
  3343                           
  3344                           ;../LEDarray.c: 14:     TRISAbits.TRISA4=0;
  3345   002154  9881               	bcf	129,4,c	;volatile
  3346                           
  3347                           ;../LEDarray.c: 15:     TRISAbits.TRISA5=0;
  3348   002156  9A81               	bcf	129,5,c	;volatile
  3349                           
  3350                           ;../LEDarray.c: 16:     TRISFbits.TRISF0=0;
  3351   002158  9086               	bcf	134,0,c	;volatile
  3352                           
  3353                           ;../LEDarray.c: 17:     TRISBbits.TRISB0=0;
  3354   00215A  9082               	bcf	130,0,c	;volatile
  3355                           
  3356                           ;../LEDarray.c: 21:     LATGbits.LATG0=0;
  3357   00215C  907F               	bcf	127,0,c	;volatile
  3358                           
  3359                           ;../LEDarray.c: 22:     LATGbits.LATG1=0;
  3360   00215E  927F               	bcf	127,1,c	;volatile
  3361                           
  3362                           ;../LEDarray.c: 23:     LATAbits.LATA2=0;
  3363   002160  9479               	bcf	121,2,c	;volatile
  3364                           
  3365                           ;../LEDarray.c: 24:     LATFbits.LATF6=0;
  3366   002162  9C7E               	bcf	126,6,c	;volatile
  3367                           
  3368                           ;../LEDarray.c: 25:     LATAbits.LATA4=0;
  3369   002164  9879               	bcf	121,4,c	;volatile
  3370                           
  3371                           ;../LEDarray.c: 26:     LATAbits.LATA5=0;
  3372   002166  9A79               	bcf	121,5,c	;volatile
  3373                           
  3374                           ;../LEDarray.c: 27:     LATFbits.LATF0=0;
  3375   002168  907E               	bcf	126,0,c	;volatile
  3376                           
  3377                           ;../LEDarray.c: 28:     LATBbits.LATB0=0;
  3378   00216A  907A               	bcf	122,0,c	;volatile
  3379   00216C  0012               	return		;funcret
  3380   00216E                     __end_of_LEDarray_init:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _LEDarray_disp_bin *****************
  3384 ;; Defined at:
  3385 ;;		line 38 in file "../LEDarray.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  number          1    wreg     unsigned char 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  number          1    1[COMRAM] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3401 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3403 ;;Total ram usage:        2 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; Hardware stack levels required when called: 1
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_main
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text17
  3414   001CA8                     __ptext17:
  3415                           	callstack 0
  3416   001CA8                     _LEDarray_disp_bin:
  3417                           	callstack 29
  3418                           
  3419                           ;incstack = 0
  3420                           ;LEDarray_disp_bin@number stored from wreg
  3421   001CA8  6E02               	movwf	LEDarray_disp_bin@number^0,c
  3422   001CAA                     
  3423                           ;../LEDarray.c: 38: void LEDarray_disp_bin(char number);../LEDarray.c: 39: {;../LEDarray
      +                          .c: 44:     LATGbits.LATG0 = (number & 0b00000001)? 1 : 0;
  3424   001CAA  B002               	btfsc	LEDarray_disp_bin@number^0,0,c
  3425   001CAC  EF5A  F00E         	goto	u1671
  3426   001CB0  EF5E  F00E         	goto	u1670
  3427   001CB4                     u1671:
  3428   001CB4  6A01               	clrf	??_LEDarray_disp_bin^0,c
  3429   001CB6  2A01               	incf	??_LEDarray_disp_bin^0,f,c
  3430   001CB8  EF5F  F00E         	goto	u1688
  3431   001CBC                     u1670:
  3432   001CBC  6A01               	clrf	??_LEDarray_disp_bin^0,c
  3433   001CBE                     u1688:
  3434   001CBE  507F               	movf	127,w,c	;volatile
  3435   001CC0  1801               	xorwf	??_LEDarray_disp_bin^0,w,c
  3436   001CC2  0BFE               	andlw	-2
  3437   001CC4  1801               	xorwf	??_LEDarray_disp_bin^0,w,c
  3438   001CC6  6E7F               	movwf	127,c	;volatile
  3439   001CC8                     
  3440                           ;../LEDarray.c: 46:     if (number & 0b00000010) {LATGbits.LATG1=1;} else {LATGbits.LATG
      +                          1=0;}
  3441   001CC8  A202               	btfss	LEDarray_disp_bin@number^0,1,c
  3442   001CCA  EF69  F00E         	goto	u1691
  3443   001CCE  EF6B  F00E         	goto	u1690
  3444   001CD2                     u1691:
  3445   001CD2  EF6E  F00E         	goto	l65
  3446   001CD6                     u1690:
  3447   001CD6  827F               	bsf	127,1,c	;volatile
  3448   001CD8  EF6F  F00E         	goto	l66
  3449   001CDC                     l65:
  3450   001CDC  927F               	bcf	127,1,c	;volatile
  3451   001CDE                     l66:
  3452                           
  3453                           ;../LEDarray.c: 47:     if (number & 0b00000100) {LATAbits.LATA2=1;} else {LATAbits.LATA
      +                          2=0;}
  3454   001CDE  A402               	btfss	LEDarray_disp_bin@number^0,2,c
  3455   001CE0  EF74  F00E         	goto	u1701
  3456   001CE4  EF76  F00E         	goto	u1700
  3457   001CE8                     u1701:
  3458   001CE8  EF79  F00E         	goto	l67
  3459   001CEC                     u1700:
  3460   001CEC  8479               	bsf	121,2,c	;volatile
  3461   001CEE  EF7A  F00E         	goto	l68
  3462   001CF2                     l67:
  3463   001CF2  9479               	bcf	121,2,c	;volatile
  3464   001CF4                     l68:
  3465                           
  3466                           ;../LEDarray.c: 48:     if (number & 0b00001000) {LATFbits.LATF6=1;} else {LATFbits.LATF
      +                          6=0;}
  3467   001CF4  A602               	btfss	LEDarray_disp_bin@number^0,3,c
  3468   001CF6  EF7F  F00E         	goto	u1711
  3469   001CFA  EF81  F00E         	goto	u1710
  3470   001CFE                     u1711:
  3471   001CFE  EF84  F00E         	goto	l69
  3472   001D02                     u1710:
  3473   001D02  8C7E               	bsf	126,6,c	;volatile
  3474   001D04  EF85  F00E         	goto	l70
  3475   001D08                     l69:
  3476   001D08  9C7E               	bcf	126,6,c	;volatile
  3477   001D0A                     l70:
  3478                           
  3479                           ;../LEDarray.c: 49:     if (number & 0b00010000) {LATAbits.LATA4=1;} else {LATAbits.LATA
      +                          4=0;}
  3480   001D0A  A802               	btfss	LEDarray_disp_bin@number^0,4,c
  3481   001D0C  EF8A  F00E         	goto	u1721
  3482   001D10  EF8C  F00E         	goto	u1720
  3483   001D14                     u1721:
  3484   001D14  EF8F  F00E         	goto	l71
  3485   001D18                     u1720:
  3486   001D18  8879               	bsf	121,4,c	;volatile
  3487   001D1A  EF90  F00E         	goto	l72
  3488   001D1E                     l71:
  3489   001D1E  9879               	bcf	121,4,c	;volatile
  3490   001D20                     l72:
  3491                           
  3492                           ;../LEDarray.c: 50:     if (number & 0b00100000) {LATAbits.LATA5=1;} else {LATAbits.LATA
      +                          5=0;}
  3493   001D20  AA02               	btfss	LEDarray_disp_bin@number^0,5,c
  3494   001D22  EF95  F00E         	goto	u1731
  3495   001D26  EF97  F00E         	goto	u1730
  3496   001D2A                     u1731:
  3497   001D2A  EF9A  F00E         	goto	l73
  3498   001D2E                     u1730:
  3499   001D2E  8A79               	bsf	121,5,c	;volatile
  3500   001D30  EF9B  F00E         	goto	l74
  3501   001D34                     l73:
  3502   001D34  9A79               	bcf	121,5,c	;volatile
  3503   001D36                     l74:
  3504                           
  3505                           ;../LEDarray.c: 51:     if (number & 0b01000000) {LATFbits.LATF0=1;} else {LATFbits.LATF
      +                          0=0;}
  3506   001D36  AC02               	btfss	LEDarray_disp_bin@number^0,6,c
  3507   001D38  EFA0  F00E         	goto	u1741
  3508   001D3C  EFA2  F00E         	goto	u1740
  3509   001D40                     u1741:
  3510   001D40  EFA5  F00E         	goto	l75
  3511   001D44                     u1740:
  3512   001D44  807E               	bsf	126,0,c	;volatile
  3513   001D46  EFA6  F00E         	goto	l76
  3514   001D4A                     l75:
  3515   001D4A  907E               	bcf	126,0,c	;volatile
  3516   001D4C                     l76:
  3517                           
  3518                           ;../LEDarray.c: 52:     if (number & 0b10000000) {LATBbits.LATB0=1;} else {LATBbits.LATB
      +                          0=0;}
  3519   001D4C  AE02               	btfss	LEDarray_disp_bin@number^0,7,c
  3520   001D4E  EFAB  F00E         	goto	u1751
  3521   001D52  EFAD  F00E         	goto	u1750
  3522   001D56                     u1751:
  3523   001D56  EFB0  F00E         	goto	l77
  3524   001D5A                     u1750:
  3525   001D5A  807A               	bsf	122,0,c	;volatile
  3526   001D5C  EFB1  F00E         	goto	l79
  3527   001D60                     l77:
  3528   001D60  907A               	bcf	122,0,c	;volatile
  3529   001D62                     l79:
  3530   001D62  0012               	return		;funcret
  3531   001D64                     __end_of_LEDarray_disp_bin:
  3532                           	callstack 0
  3533                           
  3534 ;; *************** function _LCD_setline *****************
  3535 ;; Defined at:
  3536 ;;		line 114 in file "../LCD.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  line            1    wreg     unsigned char 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  line            1    5[COMRAM] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;Total ram usage:        1 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 4
  3557 ;; This function calls:
  3558 ;;		_LCD_sendbyte
  3559 ;; This function is called by:
  3560 ;;		_main
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text18
  3565   0020B2                     __ptext18:
  3566                           	callstack 0
  3567   0020B2                     _LCD_setline:
  3568                           	callstack 26
  3569                           
  3570                           ;incstack = 0
  3571                           ;LCD_setline@line stored from wreg
  3572   0020B2  6E06               	movwf	LCD_setline@line^0,c
  3573   0020B4                     
  3574                           ;../LCD.c: 114: void LCD_setline (char line);../LCD.c: 115: {;../LCD.c: 116:     if (lin
      +                          e){
  3575   0020B4  5006               	movf	LCD_setline@line^0,w,c
  3576   0020B6  B4D8               	btfsc	status,2,c
  3577   0020B8  EF60  F010         	goto	u1651
  3578   0020BC  EF62  F010         	goto	u1650
  3579   0020C0                     u1651:
  3580   0020C0  EF69  F010         	goto	l1960
  3581   0020C4                     u1650:
  3582   0020C4                     
  3583                           ;../LCD.c: 117:         LCD_sendbyte(0x80,0);
  3584   0020C4  0E00               	movlw	0
  3585   0020C6  6E03               	movwf	LCD_sendbyte@type^0,c
  3586   0020C8  0E80               	movlw	128
  3587   0020CA  ECFD  F00F         	call	_LCD_sendbyte
  3588                           
  3589                           ;../LCD.c: 118:     }
  3590   0020CE  EF6E  F010         	goto	l31
  3591   0020D2                     l1960:
  3592                           
  3593                           ;../LCD.c: 120:         LCD_sendbyte(0xC0,0);
  3594   0020D2  0E00               	movlw	0
  3595   0020D4  6E03               	movwf	LCD_sendbyte@type^0,c
  3596   0020D6  0EC0               	movlw	192
  3597   0020D8  ECFD  F00F         	call	_LCD_sendbyte
  3598   0020DC                     l31:
  3599   0020DC  0012               	return		;funcret
  3600   0020DE                     __end_of_LCD_setline:
  3601                           	callstack 0
  3602                           
  3603 ;; *************** function _LCD_sendstring *****************
  3604 ;; Defined at:
  3605 ;;		line 130 in file "../LCD.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  string          2    5[COMRAM] PTR unsigned char 
  3608 ;;		 -> main@buf2(40), main@buf1(40), 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;Total ram usage:        2 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 4
  3627 ;; This function calls:
  3628 ;;		_LCD_sendbyte
  3629 ;; This function is called by:
  3630 ;;		_main
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text19
  3635   00207E                     __ptext19:
  3636                           	callstack 0
  3637   00207E                     _LCD_sendstring:
  3638                           	callstack 26
  3639   00207E                     
  3640                           ;../LCD.c: 130: void LCD_sendstring(char *string);../LCD.c: 131: {;../LCD.c: 133:     wh
      +                          ile(*string != 0){
  3641   00207E  EF4C  F010         	goto	l1968
  3642   002082                     l1964:
  3643                           
  3644                           ;../LCD.c: 134:   LCD_sendbyte(*string++,1);
  3645   002082  0E01               	movlw	1
  3646   002084  6E03               	movwf	LCD_sendbyte@type^0,c
  3647   002086  C006  FFD9         	movff	LCD_sendstring@string,fsr2l
  3648   00208A  C007  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3649   00208E  50DF               	movf	indf2,w,c
  3650   002090  ECFD  F00F         	call	_LCD_sendbyte
  3651   002094  4A06               	infsnz	LCD_sendstring@string^0,f,c
  3652   002096  2A07               	incf	(LCD_sendstring@string+1)^0,f,c
  3653   002098                     l1968:
  3654                           
  3655                           ;../LCD.c: 133:     while(*string != 0){
  3656   002098  C006  FFD9         	movff	LCD_sendstring@string,fsr2l
  3657   00209C  C007  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3658   0020A0  50DF               	movf	indf2,w,c
  3659   0020A2  A4D8               	btfss	status,2,c
  3660   0020A4  EF56  F010         	goto	u1661
  3661   0020A8  EF58  F010         	goto	u1660
  3662   0020AC                     u1661:
  3663   0020AC  EF41  F010         	goto	l1964
  3664   0020B0                     u1660:
  3665   0020B0  0012               	return		;funcret
  3666   0020B2                     __end_of_LCD_sendstring:
  3667                           	callstack 0
  3668                           
  3669 ;; *************** function _LCD_Init *****************
  3670 ;; Defined at:
  3671 ;;		line 58 in file "../LCD.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;Total ram usage:        2 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 4
  3692 ;; This function calls:
  3693 ;;		_LCD_sendbyte
  3694 ;;		_LCD_sendnibble
  3695 ;; This function is called by:
  3696 ;;		_main
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text20
  3701   001D64                     __ptext20:
  3702                           	callstack 0
  3703   001D64                     _LCD_Init:
  3704                           	callstack 26
  3705   001D64                     
  3706                           ;../LCD.c: 64:     LATCbits.LATC6=0;
  3707   001D64  9C7B               	bcf	123,6,c	;volatile
  3708                           
  3709                           ;../LCD.c: 65:     LATCbits.LATC2=0;
  3710   001D66  947B               	bcf	123,2,c	;volatile
  3711                           
  3712                           ;../LCD.c: 66:     LATBbits.LATB3=0;
  3713   001D68  967A               	bcf	122,3,c	;volatile
  3714                           
  3715                           ;../LCD.c: 67:     LATBbits.LATB2=0;
  3716   001D6A  947A               	bcf	122,2,c	;volatile
  3717                           
  3718                           ;../LCD.c: 68:     LATEbits.LATE3=0;
  3719   001D6C  967D               	bcf	125,3,c	;volatile
  3720                           
  3721                           ;../LCD.c: 69:     LATEbits.LATE1=0;
  3722   001D6E  927D               	bcf	125,1,c	;volatile
  3723                           
  3724                           ;../LCD.c: 72:     TRISCbits.TRISC6=0;
  3725   001D70  9C83               	bcf	131,6,c	;volatile
  3726                           
  3727                           ;../LCD.c: 73:     TRISCbits.TRISC2=0;
  3728   001D72  9483               	bcf	131,2,c	;volatile
  3729                           
  3730                           ;../LCD.c: 74:     TRISBbits.TRISB3=0;
  3731   001D74  9682               	bcf	130,3,c	;volatile
  3732                           
  3733                           ;../LCD.c: 75:     TRISBbits.TRISB2=0;
  3734   001D76  9482               	bcf	130,2,c	;volatile
  3735                           
  3736                           ;../LCD.c: 76:     TRISEbits.TRISE3=0;
  3737   001D78  9685               	bcf	133,3,c	;volatile
  3738                           
  3739                           ;../LCD.c: 77:     TRISEbits.TRISE1=0;
  3740   001D7A  9285               	bcf	133,1,c	;volatile
  3741   001D7C                     
  3742                           ;../LCD.c: 84:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3743   001D7C  0E05               	movlw	5
  3744   001D7E  6E07               	movwf	(??_LCD_Init+1)^0,c
  3745   001D80  0E0F               	movlw	15
  3746   001D82  6E06               	movwf	??_LCD_Init^0,c
  3747   001D84  0EF1               	movlw	241
  3748   001D86                     u2137:
  3749   001D86  2EE8               	decfsz	wreg,f,c
  3750   001D88  D7FE               	bra	u2137
  3751   001D8A  2E06               	decfsz	??_LCD_Init^0,f,c
  3752   001D8C  D7FC               	bra	u2137
  3753   001D8E  2E07               	decfsz	(??_LCD_Init+1)^0,f,c
  3754   001D90  D7FA               	bra	u2137
  3755   001D92  F000               	nop	
  3756   001D94                     
  3757                           ;../LCD.c: 86:     LCD_sendnibble(0b0011);
  3758   001D94  0E03               	movlw	3
  3759   001D96  EC01  F00F         	call	_LCD_sendnibble
  3760   001D9A                     
  3761                           ;../LCD.c: 88:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3762   001D9A  0EA0               	movlw	160
  3763   001D9C                     u2147:
  3764   001D9C  D000               	nop2	
  3765   001D9E  2EE8               	decfsz	wreg,f,c
  3766   001DA0  D7FD               	bra	u2147
  3767                           
  3768                           ;../LCD.c: 90:     LCD_sendbyte(0b00101000,0);
  3769   001DA2  0E00               	movlw	0
  3770   001DA4  6E03               	movwf	LCD_sendbyte@type^0,c
  3771   001DA6  0E28               	movlw	40
  3772   001DA8  ECFD  F00F         	call	_LCD_sendbyte
  3773   001DAC                     
  3774                           ;../LCD.c: 92:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3775   001DAC  0EA0               	movlw	160
  3776   001DAE                     u2157:
  3777   001DAE  D000               	nop2	
  3778   001DB0  2EE8               	decfsz	wreg,f,c
  3779   001DB2  D7FD               	bra	u2157
  3780   001DB4                     
  3781                           ;../LCD.c: 94:     LCD_sendbyte(0b00001110,0);
  3782   001DB4  0E00               	movlw	0
  3783   001DB6  6E03               	movwf	LCD_sendbyte@type^0,c
  3784   001DB8  0E0E               	movlw	14
  3785   001DBA  ECFD  F00F         	call	_LCD_sendbyte
  3786                           
  3787                           ;../LCD.c: 96:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3788   001DBE  0EA0               	movlw	160
  3789   001DC0                     u2167:
  3790   001DC0  D000               	nop2	
  3791   001DC2  2EE8               	decfsz	wreg,f,c
  3792   001DC4  D7FD               	bra	u2167
  3793   001DC6                     
  3794                           ;../LCD.c: 98:     LCD_sendbyte(0b00000001,0);
  3795   001DC6  0E00               	movlw	0
  3796   001DC8  6E03               	movwf	LCD_sendbyte@type^0,c
  3797   001DCA  0E01               	movlw	1
  3798   001DCC  ECFD  F00F         	call	_LCD_sendbyte
  3799   001DD0                     
  3800                           ;../LCD.c: 100:     _delay((unsigned long)((10)*(64000000/4000.0)));
  3801   001DD0  0ED0               	movlw	208
  3802   001DD2  6E06               	movwf	??_LCD_Init^0,c
  3803   001DD4  0ECA               	movlw	202
  3804   001DD6                     u2177:
  3805   001DD6  2EE8               	decfsz	wreg,f,c
  3806   001DD8  D7FE               	bra	u2177
  3807   001DDA  2E06               	decfsz	??_LCD_Init^0,f,c
  3808   001DDC  D7FC               	bra	u2177
  3809                           
  3810                           ;../LCD.c: 102:     LCD_sendbyte(0b00000110,0);
  3811   001DDE  0E00               	movlw	0
  3812   001DE0  6E03               	movwf	LCD_sendbyte@type^0,c
  3813   001DE2  0E06               	movlw	6
  3814   001DE4  ECFD  F00F         	call	_LCD_sendbyte
  3815   001DE8                     
  3816                           ;../LCD.c: 104:     _delay((unsigned long)((10)*(64000000/4000.0)));
  3817   001DE8  0ED0               	movlw	208
  3818   001DEA  6E06               	movwf	??_LCD_Init^0,c
  3819   001DEC  0ECA               	movlw	202
  3820   001DEE                     u2187:
  3821   001DEE  2EE8               	decfsz	wreg,f,c
  3822   001DF0  D7FE               	bra	u2187
  3823   001DF2  2E06               	decfsz	??_LCD_Init^0,f,c
  3824   001DF4  D7FC               	bra	u2187
  3825   001DF6                     
  3826                           ;../LCD.c: 106:     LCD_sendbyte(0b00001100,0);
  3827   001DF6  0E00               	movlw	0
  3828   001DF8  6E03               	movwf	LCD_sendbyte@type^0,c
  3829   001DFA  0E0C               	movlw	12
  3830   001DFC  ECFD  F00F         	call	_LCD_sendbyte
  3831   001E00  0012               	return		;funcret
  3832   001E02                     __end_of_LCD_Init:
  3833                           	callstack 0
  3834                           
  3835 ;; *************** function _LCD_sendbyte *****************
  3836 ;; Defined at:
  3837 ;;		line 39 in file "../LCD.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  Byte            1    wreg     unsigned char 
  3840 ;;  type            1    2[COMRAM] unsigned char 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  Byte            1    4[COMRAM] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		wreg, status,2, status,0, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3852 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3855 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3856 ;;Total ram usage:        3 bytes
  3857 ;; Hardware stack levels used: 1
  3858 ;; Hardware stack levels required when called: 3
  3859 ;; This function calls:
  3860 ;;		_LCD_sendnibble
  3861 ;; This function is called by:
  3862 ;;		_LCD_Init
  3863 ;;		_LCD_setline
  3864 ;;		_LCD_sendstring
  3865 ;;		_LCD_scroll
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text21
  3870   001FFA                     __ptext21:
  3871                           	callstack 0
  3872   001FFA                     _LCD_sendbyte:
  3873                           	callstack 26
  3874                           
  3875                           ;incstack = 0
  3876                           ;LCD_sendbyte@Byte stored from wreg
  3877   001FFA  6E05               	movwf	LCD_sendbyte@Byte^0,c
  3878   001FFC                     
  3879                           ;../LCD.c: 39: void LCD_sendbyte(unsigned char Byte, char type);../LCD.c: 40: {;../LCD.c
      +                          : 44:  LATCbits.LATC6 = (type)? 1 : 0;
  3880   001FFC  5003               	movf	LCD_sendbyte@type^0,w,c
  3881   001FFE  A4D8               	btfss	status,2,c
  3882   002000  EF04  F010         	goto	u1561
  3883   002004  EF08  F010         	goto	u1560
  3884   002008                     u1561:
  3885   002008  6A04               	clrf	??_LCD_sendbyte^0,c
  3886   00200A  2A04               	incf	??_LCD_sendbyte^0,f,c
  3887   00200C  EF09  F010         	goto	u1578
  3888   002010                     u1560:
  3889   002010  6A04               	clrf	??_LCD_sendbyte^0,c
  3890   002012                     u1578:
  3891   002012  3A04               	swapf	??_LCD_sendbyte^0,f,c
  3892   002014  4604               	rlncf	??_LCD_sendbyte^0,f,c
  3893   002016  4604               	rlncf	??_LCD_sendbyte^0,f,c
  3894   002018  507B               	movf	123,w,c	;volatile
  3895   00201A  1804               	xorwf	??_LCD_sendbyte^0,w,c
  3896   00201C  0BBF               	andlw	-65
  3897   00201E  1804               	xorwf	??_LCD_sendbyte^0,w,c
  3898   002020  6E7B               	movwf	123,c	;volatile
  3899   002022                     
  3900                           ;../LCD.c: 46:     LCD_sendnibble(Byte>>4);
  3901   002022  3805               	swapf	LCD_sendbyte@Byte^0,w,c
  3902   002024  0B0F               	andlw	15
  3903   002026  EC01  F00F         	call	_LCD_sendnibble
  3904   00202A                     
  3905                           ;../LCD.c: 47:     LCD_sendnibble(Byte&0b00001111);
  3906   00202A  5005               	movf	LCD_sendbyte@Byte^0,w,c
  3907   00202C  0B0F               	andlw	15
  3908   00202E  EC01  F00F         	call	_LCD_sendnibble
  3909   002032                     
  3910                           ;../LCD.c: 50:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3911   002032  0EA0               	movlw	160
  3912   002034                     u2197:
  3913   002034  D000               	nop2	
  3914   002036  2EE8               	decfsz	wreg,f,c
  3915   002038  D7FD               	bra	u2197
  3916   00203A                     
  3917                           ;../LCD.c: 51:     LATCbits.LATC6 = 0;
  3918   00203A  9C7B               	bcf	123,6,c	;volatile
  3919   00203C  0012               	return		;funcret
  3920   00203E                     __end_of_LCD_sendbyte:
  3921                           	callstack 0
  3922                           
  3923 ;; *************** function _LCD_sendnibble *****************
  3924 ;; Defined at:
  3925 ;;		line 21 in file "../LCD.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  number          1    wreg     unsigned char 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  number          1    1[COMRAM] unsigned char 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, status,2, status,0, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3940 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3943 ;;Total ram usage:        2 bytes
  3944 ;; Hardware stack levels used: 1
  3945 ;; Hardware stack levels required when called: 2
  3946 ;; This function calls:
  3947 ;;		_LCD_E_TOG
  3948 ;; This function is called by:
  3949 ;;		_LCD_sendbyte
  3950 ;;		_LCD_Init
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text22
  3955   001E02                     __ptext22:
  3956                           	callstack 0
  3957   001E02                     _LCD_sendnibble:
  3958                           	callstack 26
  3959                           
  3960                           ;incstack = 0
  3961                           ;LCD_sendnibble@number stored from wreg
  3962   001E02  6E02               	movwf	LCD_sendnibble@number^0,c
  3963   001E04                     
  3964                           ;../LCD.c: 21: void LCD_sendnibble(unsigned char number);../LCD.c: 22: {;../LCD.c: 26:  
      +                             LATBbits.LATB3 = (number & 0b00000001)? 1 : 0;
  3965   001E04  B002               	btfsc	LCD_sendnibble@number^0,0,c
  3966   001E06  EF07  F00F         	goto	u1391
  3967   001E0A  EF0B  F00F         	goto	u1390
  3968   001E0E                     u1391:
  3969   001E0E  6A01               	clrf	??_LCD_sendnibble^0,c
  3970   001E10  2A01               	incf	??_LCD_sendnibble^0,f,c
  3971   001E12  EF0C  F00F         	goto	u1408
  3972   001E16                     u1390:
  3973   001E16  6A01               	clrf	??_LCD_sendnibble^0,c
  3974   001E18                     u1408:
  3975   001E18  4601               	rlncf	??_LCD_sendnibble^0,f,c
  3976   001E1A  4601               	rlncf	??_LCD_sendnibble^0,f,c
  3977   001E1C  4601               	rlncf	??_LCD_sendnibble^0,f,c
  3978   001E1E  507A               	movf	122,w,c	;volatile
  3979   001E20  1801               	xorwf	??_LCD_sendnibble^0,w,c
  3980   001E22  0BF7               	andlw	-9
  3981   001E24  1801               	xorwf	??_LCD_sendnibble^0,w,c
  3982   001E26  6E7A               	movwf	122,c	;volatile
  3983                           
  3984                           ;../LCD.c: 27:     LATBbits.LATB2 = (number & 0b00000010)? 1 : 0;
  3985   001E28  B202               	btfsc	LCD_sendnibble@number^0,1,c
  3986   001E2A  EF19  F00F         	goto	u1411
  3987   001E2E  EF1D  F00F         	goto	u1410
  3988   001E32                     u1411:
  3989   001E32  6A01               	clrf	??_LCD_sendnibble^0,c
  3990   001E34  2A01               	incf	??_LCD_sendnibble^0,f,c
  3991   001E36  EF1E  F00F         	goto	u1428
  3992   001E3A                     u1410:
  3993   001E3A  6A01               	clrf	??_LCD_sendnibble^0,c
  3994   001E3C                     u1428:
  3995   001E3C  4601               	rlncf	??_LCD_sendnibble^0,f,c
  3996   001E3E  4601               	rlncf	??_LCD_sendnibble^0,f,c
  3997   001E40  507A               	movf	122,w,c	;volatile
  3998   001E42  1801               	xorwf	??_LCD_sendnibble^0,w,c
  3999   001E44  0BFB               	andlw	-5
  4000   001E46  1801               	xorwf	??_LCD_sendnibble^0,w,c
  4001   001E48  6E7A               	movwf	122,c	;volatile
  4002                           
  4003                           ;../LCD.c: 28:     LATEbits.LATE3 = (number & 0b00000100)? 1 : 0;
  4004   001E4A  B402               	btfsc	LCD_sendnibble@number^0,2,c
  4005   001E4C  EF2A  F00F         	goto	u1431
  4006   001E50  EF2E  F00F         	goto	u1430
  4007   001E54                     u1431:
  4008   001E54  6A01               	clrf	??_LCD_sendnibble^0,c
  4009   001E56  2A01               	incf	??_LCD_sendnibble^0,f,c
  4010   001E58  EF2F  F00F         	goto	u1448
  4011   001E5C                     u1430:
  4012   001E5C  6A01               	clrf	??_LCD_sendnibble^0,c
  4013   001E5E                     u1448:
  4014   001E5E  4601               	rlncf	??_LCD_sendnibble^0,f,c
  4015   001E60  4601               	rlncf	??_LCD_sendnibble^0,f,c
  4016   001E62  4601               	rlncf	??_LCD_sendnibble^0,f,c
  4017   001E64  507D               	movf	125,w,c	;volatile
  4018   001E66  1801               	xorwf	??_LCD_sendnibble^0,w,c
  4019   001E68  0BF7               	andlw	-9
  4020   001E6A  1801               	xorwf	??_LCD_sendnibble^0,w,c
  4021   001E6C  6E7D               	movwf	125,c	;volatile
  4022                           
  4023                           ;../LCD.c: 29:     LATEbits.LATE1 = (number & 0b00001000)? 1 : 0;
  4024   001E6E  B602               	btfsc	LCD_sendnibble@number^0,3,c
  4025   001E70  EF3C  F00F         	goto	u1451
  4026   001E74  EF40  F00F         	goto	u1450
  4027   001E78                     u1451:
  4028   001E78  6A01               	clrf	??_LCD_sendnibble^0,c
  4029   001E7A  2A01               	incf	??_LCD_sendnibble^0,f,c
  4030   001E7C  EF41  F00F         	goto	u1468
  4031   001E80                     u1450:
  4032   001E80  6A01               	clrf	??_LCD_sendnibble^0,c
  4033   001E82                     u1468:
  4034   001E82  4601               	rlncf	??_LCD_sendnibble^0,f,c
  4035   001E84  507D               	movf	125,w,c	;volatile
  4036   001E86  1801               	xorwf	??_LCD_sendnibble^0,w,c
  4037   001E88  0BFD               	andlw	-3
  4038   001E8A  1801               	xorwf	??_LCD_sendnibble^0,w,c
  4039   001E8C  6E7D               	movwf	125,c	;volatile
  4040   001E8E                     
  4041                           ;../LCD.c: 30:     LCD_E_TOG();
  4042   001E8E  ECD3  F010         	call	_LCD_E_TOG	;wreg free
  4043   001E92                     
  4044                           ;../LCD.c: 31:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  4045   001E92  0E1A               	movlw	26
  4046   001E94                     u2207:
  4047   001E94  2EE8               	decfsz	wreg,f,c
  4048   001E96  D7FE               	bra	u2207
  4049   001E98  D000               	nop2	
  4050   001E9A  0012               	return		;funcret
  4051   001E9C                     __end_of_LCD_sendnibble:
  4052                           	callstack 0
  4053                           
  4054 ;; *************** function _LCD_E_TOG *****************
  4055 ;; Defined at:
  4056 ;;		line 8 in file "../LCD.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;Total ram usage:        0 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; Hardware stack levels required when called: 1
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_LCD_sendnibble
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text23
  4085   0021A6                     __ptext23:
  4086                           	callstack 0
  4087   0021A6                     _LCD_E_TOG:
  4088                           	callstack 26
  4089   0021A6                     
  4090                           ;../LCD.c: 11:     LATCbits.LATC2=1;
  4091   0021A6  847B               	bsf	123,2,c	;volatile
  4092   0021A8                     
  4093                           ;../LCD.c: 12:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  4094   0021A8  0E0A               	movlw	10
  4095   0021AA                     u2217:
  4096   0021AA  2EE8               	decfsz	wreg,f,c
  4097   0021AC  D7FE               	bra	u2217
  4098   0021AE  D000               	nop2	
  4099   0021B0                     
  4100                           ;../LCD.c: 14:     LATCbits.LATC2=0;
  4101   0021B0  947B               	bcf	123,2,c	;volatile
  4102                           
  4103                           ;../LCD.c: 15:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  4104   0021B2  0E0A               	movlw	10
  4105   0021B4                     u2227:
  4106   0021B4  2EE8               	decfsz	wreg,f,c
  4107   0021B6  D7FE               	bra	u2227
  4108   0021B8  D000               	nop2	
  4109   0021BA  0012               	return		;funcret
  4110   0021BC                     __end_of_LCD_E_TOG:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function _Interrupts_init *****************
  4114 ;; Defined at:
  4115 ;;		line 7 in file "../interrupts.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		None
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4133 ;;Total ram usage:        0 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 1
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_main
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text24
  4144   00218E                     __ptext24:
  4145                           	callstack 0
  4146   00218E                     _Interrupts_init:
  4147                           	callstack 29
  4148   00218E                     
  4149                           ;../interrupts.c: 10: PIE2bits.C1IE=1;
  4150   00218E  010E               	movlb	14	; () banked
  4151   002190  812B               	bsf	43,0,b	;volatile
  4152                           
  4153                           ;../interrupts.c: 11: PIE2bits.C2IE=1;
  4154   002192  832B               	bsf	43,1,b	;volatile
  4155                           
  4156                           ;../interrupts.c: 12: PIE0bits.TMR0IE = 1;
  4157   002194  8B29               	bsf	41,5,b	;volatile
  4158                           
  4159                           ;../interrupts.c: 15: INTCONbits.IPEN=1;
  4160   002196  8AF2               	bsf	242,5,c	;volatile
  4161                           
  4162                           ;../interrupts.c: 16: INTCONbits.GIEL=1;
  4163   002198  8CF2               	bsf	242,6,c	;volatile
  4164                           
  4165                           ;../interrupts.c: 18: IPR2bits.C1IP=1;
  4166   00219A  8121               	bsf	33,0,b	;volatile
  4167                           
  4168                           ;../interrupts.c: 19: IPR2bits.C2IP=1;
  4169   00219C  8321               	bsf	33,1,b	;volatile
  4170                           
  4171                           ;../interrupts.c: 20: IPR0bits.TMR0IP =1;
  4172   00219E  8B1F               	bsf	31,5,b	;volatile
  4173                           
  4174                           ;../interrupts.c: 22: INTCONbits.PEIE = 1;
  4175   0021A0  8CF2               	bsf	242,6,c	;volatile
  4176                           
  4177                           ;../interrupts.c: 23: INTCONbits.GIE=1;
  4178   0021A2  8EF2               	bsf	242,7,c	;volatile
  4179   0021A4                     
  4180                           ; BSR set to: 14
  4181   0021A4  0012               	return		;funcret
  4182   0021A6                     __end_of_Interrupts_init:
  4183                           	callstack 0
  4184                           
  4185 ;; *************** function _Comp2_init *****************
  4186 ;; Defined at:
  4187 ;;		line 31 in file "../comparator.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;		None
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;		None
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, cstack
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;Total ram usage:        0 bytes
  4206 ;; Hardware stack levels used: 1
  4207 ;; Hardware stack levels required when called: 2
  4208 ;; This function calls:
  4209 ;;		_DAC_init
  4210 ;; This function is called by:
  4211 ;;		_main
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text25
  4216   002104                     __ptext25:
  4217                           	callstack 0
  4218   002104                     _Comp2_init:
  4219                           	callstack 28
  4220   002104                     
  4221                           ;../comparator.c: 33:     TRISFbits.TRISF7=1;
  4222   002104  8E86               	bsf	134,7,c	;volatile
  4223   002106                     
  4224                           ;../comparator.c: 34:     CM2NCHbits.NCH=0b011;
  4225   002106  010E               	movlb	14	; () banked
  4226   002108  51CE               	movf	206,w,b	;volatile
  4227   00210A  0BF8               	andlw	-8
  4228   00210C  0903               	iorlw	3
  4229   00210E  6FCE               	movwf	206,b	;volatile
  4230                           
  4231                           ;../comparator.c: 35:     CM2PCHbits.PCH=0b101;
  4232   002110  51CF               	movf	207,w,b	;volatile
  4233   002112  0BF8               	andlw	-8
  4234   002114  0905               	iorlw	5
  4235   002116  6FCF               	movwf	207,b	;volatile
  4236   002118                     
  4237                           ; BSR set to: 14
  4238                           ;../comparator.c: 36:     CM2CON0bits.HYS=1;
  4239   002118  83CC               	bsf	204,1,b	;volatile
  4240   00211A                     
  4241                           ; BSR set to: 14
  4242                           ;../comparator.c: 37:     CM2CON0bits.POL=1;
  4243   00211A  89CC               	bsf	204,4,b	;volatile
  4244   00211C                     
  4245                           ; BSR set to: 14
  4246                           ;../comparator.c: 39:     CM2CON1bits.INTN=1;
  4247   00211C  81CD               	bsf	205,0,b	;volatile
  4248   00211E                     
  4249                           ; BSR set to: 14
  4250                           ;../comparator.c: 41:     DAC_init();
  4251   00211E  ECDE  F010         	call	_DAC_init	;wreg free
  4252   002122                     
  4253                           ;../comparator.c: 42:     CM2CON0bits.EN=1;
  4254   002122  010E               	movlb	14	; () banked
  4255   002124  8FCC               	bsf	204,7,b	;volatile
  4256   002126                     
  4257                           ; BSR set to: 14
  4258   002126  0012               	return		;funcret
  4259   002128                     __end_of_Comp2_init:
  4260                           	callstack 0
  4261                           
  4262 ;; *************** function _Comp1_init *****************
  4263 ;; Defined at:
  4264 ;;		line 15 in file "../comparator.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;		None
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;		None
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      void 
  4271 ;; Registers used:
  4272 ;;		wreg, status,2, cstack
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4282 ;;Total ram usage:        0 bytes
  4283 ;; Hardware stack levels used: 1
  4284 ;; Hardware stack levels required when called: 2
  4285 ;; This function calls:
  4286 ;;		_DAC_init
  4287 ;; This function is called by:
  4288 ;;		_main
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text26
  4293   002128                     __ptext26:
  4294                           	callstack 0
  4295   002128                     _Comp1_init:
  4296                           	callstack 28
  4297   002128                     
  4298                           ;../comparator.c: 17:     TRISFbits.TRISF7=1;
  4299   002128  8E86               	bsf	134,7,c	;volatile
  4300   00212A                     
  4301                           ;../comparator.c: 18:     CM1NCHbits.NCH=0b011;
  4302   00212A  010E               	movlb	14	; () banked
  4303   00212C  51D2               	movf	210,w,b	;volatile
  4304   00212E  0BF8               	andlw	-8
  4305   002130  0903               	iorlw	3
  4306   002132  6FD2               	movwf	210,b	;volatile
  4307                           
  4308                           ;../comparator.c: 19:     CM1PCHbits.PCH=0b101;
  4309   002134  51D3               	movf	211,w,b	;volatile
  4310   002136  0BF8               	andlw	-8
  4311   002138  0905               	iorlw	5
  4312   00213A  6FD3               	movwf	211,b	;volatile
  4313   00213C                     
  4314                           ; BSR set to: 14
  4315                           ;../comparator.c: 20:     CM1CON0bits.HYS=1;
  4316   00213C  83D0               	bsf	208,1,b	;volatile
  4317   00213E                     
  4318                           ; BSR set to: 14
  4319                           ;../comparator.c: 21:     CM1CON0bits.POL=1;
  4320   00213E  89D0               	bsf	208,4,b	;volatile
  4321   002140                     
  4322                           ; BSR set to: 14
  4323                           ;../comparator.c: 23:     CM1CON1bits.INTP=1;
  4324   002140  83D1               	bsf	209,1,b	;volatile
  4325   002142                     
  4326                           ; BSR set to: 14
  4327                           ;../comparator.c: 25:     DAC_init();
  4328   002142  ECDE  F010         	call	_DAC_init	;wreg free
  4329   002146                     
  4330                           ;../comparator.c: 26:     CM1CON0bits.EN=1;
  4331   002146  010E               	movlb	14	; () banked
  4332   002148  8FD0               	bsf	208,7,b	;volatile
  4333   00214A                     
  4334                           ; BSR set to: 14
  4335   00214A  0012               	return		;funcret
  4336   00214C                     __end_of_Comp1_init:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _DAC_init *****************
  4340 ;; Defined at:
  4341 ;;		line 5 in file "../comparator.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;Total ram usage:        0 bytes
  4360 ;; Hardware stack levels used: 1
  4361 ;; Hardware stack levels required when called: 1
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_Comp1_init
  4366 ;;		_Comp2_init
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text27
  4371   0021BC                     __ptext27:
  4372                           	callstack 0
  4373   0021BC                     _DAC_init:
  4374                           	callstack 28
  4375   0021BC                     
  4376                           ;../comparator.c: 7:     DAC1CON0bits.PSS=0b00;
  4377   0021BC  0EF3               	movlw	-13
  4378   0021BE  010E               	movlb	14	; () banked
  4379   0021C0  17C6               	andwf	198,f,b	;volatile
  4380   0021C2                     
  4381                           ; BSR set to: 14
  4382                           ;../comparator.c: 8:     DAC1CON0bits.NSS=0b0;
  4383   0021C2  91C6               	bcf	198,0,b	;volatile
  4384                           
  4385                           ;../comparator.c: 10:     DAC1CON1bits.DAC1R=0b10000;
  4386   0021C4  51C7               	movf	199,w,b	;volatile
  4387   0021C6  0BE0               	andlw	-32
  4388   0021C8  0910               	iorlw	16
  4389   0021CA  6FC7               	movwf	199,b	;volatile
  4390   0021CC                     
  4391                           ; BSR set to: 14
  4392                           ;../comparator.c: 11:     DAC1CON0bits.DAC1EN=1;
  4393   0021CC  8FC6               	bsf	198,7,b	;volatile
  4394   0021CE                     
  4395                           ; BSR set to: 14
  4396   0021CE  0012               	return		;funcret
  4397   0021D0                     __end_of_DAC_init:
  4398                           	callstack 0
  4399                           
  4400 ;; *************** function _HighISR *****************
  4401 ;; Defined at:
  4402 ;;		line 29 in file "../interrupts.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4420 ;;Total ram usage:        0 bytes
  4421 ;; Hardware stack levels used: 1
  4422 ;; This function calls:
  4423 ;;		Nothing
  4424 ;; This function is called by:
  4425 ;;		Interrupt level 2
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	intcode
  4430   000008                     __pintcode:
  4431                           	callstack 0
  4432   000008                     _HighISR:
  4433                           	callstack 22
  4434                           
  4435                           ; BSR set to: 14
  4436                           ;incstack = 0
  4437   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4438   00000A                     
  4439                           ;../interrupts.c: 31:     if(PIR2bits.C2IF){
  4440   00000A  010E               	movlb	14	; () banked
  4441   00000C  A335               	btfss	53,1,b	;volatile
  4442   00000E  EF0B  F000         	goto	i2u99_41
  4443   000012  EF0D  F000         	goto	i2u99_40
  4444   000016                     i2u99_41:
  4445   000016  EF10  F000         	goto	i2l174
  4446   00001A                     i2u99_40:
  4447   00001A                     
  4448                           ; BSR set to: 14
  4449                           ;../interrupts.c: 33:     sunDown = hour;
  4450   00001A  C05D  F05B         	movff	_hour,_sunDown
  4451                           
  4452                           ;../interrupts.c: 34:  PIR2bits.C2IF=0;
  4453   00001E  9335               	bcf	53,1,b	;volatile
  4454   000020                     i2l174:
  4455                           
  4456                           ; BSR set to: 14
  4457                           ;../interrupts.c: 38:     if(PIR2bits.C1IF){
  4458   000020  A135               	btfss	53,0,b	;volatile
  4459   000022  EF15  F000         	goto	i2u100_41
  4460   000026  EF17  F000         	goto	i2u100_40
  4461   00002A                     i2u100_41:
  4462   00002A  EF1A  F000         	goto	i2l175
  4463   00002E                     i2u100_40:
  4464   00002E                     
  4465                           ; BSR set to: 14
  4466                           ;../interrupts.c: 40:     sunUp = hour;
  4467   00002E  C05D  F05C         	movff	_hour,_sunUp
  4468                           
  4469                           ;../interrupts.c: 41:  PIR2bits.C1IF=0;
  4470   000032  9135               	bcf	53,0,b	;volatile
  4471   000034                     i2l175:
  4472                           
  4473                           ; BSR set to: 14
  4474                           ;../interrupts.c: 45:     if(PIR0bits.TMR0IF){
  4475   000034  AB33               	btfss	51,5,b	;volatile
  4476   000036  EF1F  F000         	goto	i2u101_41
  4477   00003A  EF21  F000         	goto	i2u101_40
  4478   00003E                     i2u101_41:
  4479   00003E  EF27  F000         	goto	i2l177
  4480   000042                     i2u101_40:
  4481   000042                     
  4482                           ; BSR set to: 14
  4483                           ;../interrupts.c: 47:     hour++;
  4484   000042  2A5D               	incf	_hour^0,f,c
  4485   000044                     
  4486                           ; BSR set to: 14
  4487                           ;../interrupts.c: 49:  PIR0bits.TMR0IF=0;
  4488   000044  9B33               	bcf	51,5,b	;volatile
  4489   000046                     
  4490                           ; BSR set to: 14
  4491                           ;../interrupts.c: 52:     TMR0H= 00001011;
  4492   000046  0E09               	movlw	9
  4493   000048  6ED4               	movwf	212,c	;volatile
  4494   00004A                     
  4495                           ; BSR set to: 14
  4496                           ;../interrupts.c: 53:     TMR0L= 11011011;
  4497   00004A  0EC3               	movlw	195
  4498   00004C  6ED3               	movwf	211,c	;volatile
  4499   00004E                     i2l177:
  4500                           
  4501                           ; BSR set to: 14
  4502   00004E  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4503   000050  0011               	retfie		f
  4504   000052                     __end_of_HighISR:
  4505                           	callstack 0
  4506                           
  4507                           	psect	rparam
  4508   000000                     
  4509                           	psect	temp
  4510   00005E                     btemp:
  4511                           	callstack 0
  4512   00005E                     	ds	1
  4513   000000                     int$flags	set	btemp
  4514   000000                     wtemp8	set	btemp+1
  4515   000000                     ttemp5	set	btemp+1
  4516   000000                     ttemp6	set	btemp+4
  4517   000000                     ttemp7	set	btemp+8
  4518                           
  4519                           	psect	idloc
  4520                           
  4521                           ;Config register IDLOC0 @ 0x200000
  4522                           ;	unspecified, using default values
  4523   200000                     	org	2097152
  4524   200000  0FFF               	dw	4095
  4525                           
  4526                           ;Config register IDLOC1 @ 0x200002
  4527                           ;	unspecified, using default values
  4528   200002                     	org	2097154
  4529   200002  0FFF               	dw	4095
  4530                           
  4531                           ;Config register IDLOC2 @ 0x200004
  4532                           ;	unspecified, using default values
  4533   200004                     	org	2097156
  4534   200004  0FFF               	dw	4095
  4535                           
  4536                           ;Config register IDLOC3 @ 0x200006
  4537                           ;	unspecified, using default values
  4538   200006                     	org	2097158
  4539   200006  0FFF               	dw	4095
  4540                           
  4541                           ;Config register IDLOC4 @ 0x200008
  4542                           ;	unspecified, using default values
  4543   200008                     	org	2097160
  4544   200008  0FFF               	dw	4095
  4545                           
  4546                           ;Config register IDLOC5 @ 0x20000A
  4547                           ;	unspecified, using default values
  4548   20000A                     	org	2097162
  4549   20000A  0FFF               	dw	4095
  4550                           
  4551                           ;Config register IDLOC6 @ 0x20000C
  4552                           ;	unspecified, using default values
  4553   20000C                     	org	2097164
  4554   20000C  0FFF               	dw	4095
  4555                           
  4556                           ;Config register IDLOC7 @ 0x20000E
  4557                           ;	unspecified, using default values
  4558   20000E                     	org	2097166
  4559   20000E  0FFF               	dw	4095
  4560                           
  4561                           	psect	config
  4562                           
  4563                           ;Config register CONFIG1L @ 0x300000
  4564                           ;	External Oscillator mode Selection bits
  4565                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4566                           ;	Power-up default value for COSC bits
  4567                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4568   300000                     	org	3145728
  4569   300000  AA                 	db	170
  4570                           
  4571                           ;Config register CONFIG1H @ 0x300001
  4572                           ;	unspecified, using default values
  4573                           ;	Clock Out Enable bit
  4574                           ;	CLKOUTEN = 0x1, unprogrammed default
  4575                           ;	Clock Switch Enable bit
  4576                           ;	CSWEN = 0x1, unprogrammed default
  4577                           ;	Fail-Safe Clock Monitor Enable bit
  4578                           ;	FCMEN = 0x1, unprogrammed default
  4579   300001                     	org	3145729
  4580   300001  FF                 	db	255
  4581                           
  4582                           ;Config register CONFIG2L @ 0x300002
  4583                           ;	unspecified, using default values
  4584                           ;	Master Clear Enable bit
  4585                           ;	MCLRE = 0x1, unprogrammed default
  4586                           ;	Power-up Timer Enable bit
  4587                           ;	PWRTE = 0x1, unprogrammed default
  4588                           ;	Low-power BOR enable bit
  4589                           ;	LPBOREN = 0x1, unprogrammed default
  4590                           ;	Brown-out Reset Enable bits
  4591                           ;	BOREN = 0x3, unprogrammed default
  4592   300002                     	org	3145730
  4593   300002  FF                 	db	255
  4594                           
  4595                           ;Config register CONFIG2H @ 0x300003
  4596                           ;	unspecified, using default values
  4597                           ;	Brown Out Reset Voltage selection bits
  4598                           ;	BORV = 0x3, unprogrammed default
  4599                           ;	ZCD Disable bit
  4600                           ;	ZCD = 0x1, unprogrammed default
  4601                           ;	PPSLOCK bit One-Way Set Enable bit
  4602                           ;	PPS1WAY = 0x1, unprogrammed default
  4603                           ;	Stack Full/Underflow Reset Enable bit
  4604                           ;	STVREN = 0x1, unprogrammed default
  4605                           ;	Debugger Enable bit
  4606                           ;	DEBUG = 0x1, unprogrammed default
  4607                           ;	Extended Instruction Set Enable bit
  4608                           ;	XINST = 0x1, unprogrammed default
  4609   300003                     	org	3145731
  4610   300003  FF                 	db	255
  4611                           
  4612                           ;Config register CONFIG3L @ 0x300004
  4613                           ;	WDT Period Select bits
  4614                           ;	WDTCPS = 0x1F, unprogrammed default
  4615                           ;	WDT operating mode
  4616                           ;	WDTE = OFF, WDT Disabled
  4617   300004                     	org	3145732
  4618   300004  9F                 	db	159
  4619                           
  4620                           ;Config register CONFIG3H @ 0x300005
  4621                           ;	unspecified, using default values
  4622                           ;	WDT Window Select bits
  4623                           ;	WDTCWS = 0x7, unprogrammed default
  4624                           ;	WDT input clock selector
  4625                           ;	WDTCCS = 0x7, unprogrammed default
  4626   300005                     	org	3145733
  4627   300005  FF                 	db	255
  4628                           
  4629                           ;Config register CONFIG4L @ 0x300006
  4630                           ;	unspecified, using default values
  4631                           ;	Write Protection Block 0
  4632                           ;	WRT0 = 0x1, unprogrammed default
  4633                           ;	Write Protection Block 1
  4634                           ;	WRT1 = 0x1, unprogrammed default
  4635                           ;	Write Protection Block 2
  4636                           ;	WRT2 = 0x1, unprogrammed default
  4637                           ;	Write Protection Block 3
  4638                           ;	WRT3 = 0x1, unprogrammed default
  4639                           ;	Write Protection Block 3
  4640                           ;	WRT4 = 0x1, unprogrammed default
  4641                           ;	Write Protection Block 3
  4642                           ;	WRT5 = 0x1, unprogrammed default
  4643                           ;	Write Protection Block 3
  4644                           ;	WRT6 = 0x1, unprogrammed default
  4645                           ;	Write Protection Block 3
  4646                           ;	WRT7 = 0x1, unprogrammed default
  4647   300006                     	org	3145734
  4648   300006  FF                 	db	255
  4649                           
  4650                           ;Config register CONFIG4H @ 0x300007
  4651                           ;	unspecified, using default values
  4652                           ;	Configuration Register Write Protection bit
  4653                           ;	WRTC = 0x1, unprogrammed default
  4654                           ;	Boot Block Write Protection bit
  4655                           ;	WRTB = 0x1, unprogrammed default
  4656                           ;	Data EEPROM Write Protection bit
  4657                           ;	WRTD = 0x1, unprogrammed default
  4658                           ;	Scanner Enable bit
  4659                           ;	SCANE = 0x1, unprogrammed default
  4660                           ;	Low Voltage Programming Enable bit
  4661                           ;	LVP = 0x1, unprogrammed default
  4662   300007                     	org	3145735
  4663   300007  FF                 	db	255
  4664                           
  4665                           ;Config register CONFIG5L @ 0x300008
  4666                           ;	unspecified, using default values
  4667                           ;	UserNVM Program Memory Code Protection bit
  4668                           ;	CP = 0x1, unprogrammed default
  4669                           ;	DataNVM Memory Code Protection bit
  4670                           ;	CPD = 0x1, unprogrammed default
  4671   300008                     	org	3145736
  4672   300008  FF                 	db	255
  4673                           
  4674                           ;Config register CONFIG5H @ 0x300009
  4675                           ;	unspecified, using default values
  4676   300009                     	org	3145737
  4677   300009  FF                 	db	255
  4678                           
  4679                           ;Config register CONFIG6L @ 0x30000A
  4680                           ;	unspecified, using default values
  4681                           ;	Table Read Protection Block 0
  4682                           ;	EBTR0 = 0x1, unprogrammed default
  4683                           ;	Table Read Protection Block 1
  4684                           ;	EBTR1 = 0x1, unprogrammed default
  4685                           ;	Table Read Protection Block 2
  4686                           ;	EBTR2 = 0x1, unprogrammed default
  4687                           ;	Table Read Protection Block 3
  4688                           ;	EBTR3 = 0x1, unprogrammed default
  4689                           ;	Table Read Protection Block 4
  4690                           ;	EBTR4 = 0x1, unprogrammed default
  4691                           ;	Table Read Protection Block 5
  4692                           ;	EBTR5 = 0x1, unprogrammed default
  4693                           ;	Table Read Protection Block 6
  4694                           ;	EBTR6 = 0x1, unprogrammed default
  4695                           ;	Table Read Protection Block 7
  4696                           ;	EBTR7 = 0x1, unprogrammed default
  4697   30000A                     	org	3145738
  4698   30000A  FF                 	db	255
  4699                           
  4700                           ;Config register CONFIG6H @ 0x30000B
  4701                           ;	unspecified, using default values
  4702                           ;	Boot Block Table Read Protection bit
  4703                           ;	EBTRB = 0x1, unprogrammed default
  4704   30000B                     	org	3145739
  4705   30000B  FF                 	db	255
  4706                           tosu	equ	0xFFF
  4707                           tosh	equ	0xFFE
  4708                           tosl	equ	0xFFD
  4709                           stkptr	equ	0xFFC
  4710                           pclatu	equ	0xFFB
  4711                           pclath	equ	0xFFA
  4712                           pcl	equ	0xFF9
  4713                           tblptru	equ	0xFF8
  4714                           tblptrh	equ	0xFF7
  4715                           tblptrl	equ	0xFF6
  4716                           tablat	equ	0xFF5
  4717                           prodh	equ	0xFF4
  4718                           prodl	equ	0xFF3
  4719                           indf0	equ	0xFEF
  4720                           postinc0	equ	0xFEE
  4721                           postdec0	equ	0xFED
  4722                           preinc0	equ	0xFEC
  4723                           plusw0	equ	0xFEB
  4724                           fsr0h	equ	0xFEA
  4725                           fsr0l	equ	0xFE9
  4726                           wreg	equ	0xFE8
  4727                           indf1	equ	0xFE7
  4728                           postinc1	equ	0xFE6
  4729                           postdec1	equ	0xFE5
  4730                           preinc1	equ	0xFE4
  4731                           plusw1	equ	0xFE3
  4732                           fsr1h	equ	0xFE2
  4733                           fsr1l	equ	0xFE1
  4734                           bsr	equ	0xFE0
  4735                           indf2	equ	0xFDF
  4736                           postinc2	equ	0xFDE
  4737                           postdec2	equ	0xFDD
  4738                           preinc2	equ	0xFDC
  4739                           plusw2	equ	0xFDB
  4740                           fsr2h	equ	0xFDA
  4741                           fsr2l	equ	0xFD9
  4742                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      93
    BANK0           160    110     147
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[17]), STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[17]), STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[17]), STR_1(CODE[20]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1833$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[17]), STR_1(CODE[20]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf2(BANK0[40]), main@buf1(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1780$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1780$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    dateIncrement@yearP	PTR unsigned int  size(2) Largest target is 2
		 -> main@year(BANK0[2]), 

    dateIncrement@monthP	PTR unsigned char  size(2) Largest target is 1
		 -> main@month(BANK0[1]), 

    dateIncrement@daylightSavingsP	PTR unsigned char  size(2) Largest target is 1
		 -> main@daylightSavings(BANK0[1]), 

    dateIncrement@dayOfMonthP	PTR unsigned char  size(2) Largest target is 1
		 -> main@dayOfMonth(BANK0[1]), 

    dateIncrement@dayOfWeekP	PTR unsigned char  size(2) Largest target is 1
		 -> main@dayOfWeek(BANK0[1]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf2(BANK0[40]), main@buf1(BANK0[40]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _dateIncrement->_syncro
    _syncro->___awdiv
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                88    88      0   11089
                                             88 COMRAM     1     1      0
                                             23 BANK0     87    87      0
                         _Comp1_init
                         _Comp2_init
                    _Interrupts_init
                           _LCD_Init
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                      _dateIncrement
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    5722
                                              0 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _dateIncrement                                       14     4     10    1981
                                             15 COMRAM    13     3     10
                             _syncro
 ---------------------------------------------------------------------------------
 (2) _syncro                                               8     8      0     564
                                              8 COMRAM     7     7      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     2      0     176
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     860
                                              5 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1035
                                              5 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     926
                                              5 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         3     2      1     838
                                              2 COMRAM     3     2      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       2     2      0      88
                                              0 COMRAM     2     2      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp2_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Comp2_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _dateIncrement
     _syncro
       ___awdiv
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      47        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRlhh        A5      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6E      93       5       91.9%
BITBIGSFRllhh       90      0       0      39        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5D       1       98.9%
BITBIGSFRhhhhhl     4A      0       0      34        0.0%
BITBIGSFRllllll     30      0       0      45        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllllh       7      0       0      43        0.0%
BITBIGSFRllhll       7      0       0      41        0.0%
BITBIGSFRlhllll      4      0       0      38        0.0%
BITBIGSFRllhlh       1      0       0      40        0.0%
BITBIGSFRlllllh      1      0       0      44        0.0%
BITBIGSFRlllh        1      0       0      42        0.0%
BITBIGSFRhhhl        1      0       0      35        0.0%
BITBIGSFRhl          1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F0      46        0.0%
DATA                 0      0      F0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 10 10:06:40 2022

                           l20 1E9A                             l23 203C                             l31 20DC  
                           l17 21BA                             l26 1E00                             l37 20B0  
                           l70 1D0A                             l62 216C                             l71 1D1E  
                           l72 1D20                             l73 1D34                             l65 1CDC  
                           l74 1D36                             l66 1CDE                             l75 1D4A  
                           l67 1CF2                             l76 1D4C                             l68 1CF4  
                           l77 1D60                             l69 1D08                             l79 1D62  
                 ___awdiv@sign 0006              ??_Interrupts_init 0001                            l110 2126  
                          l104 21CE                            l107 214A                            l221 17F6  
                          l142 11E2                            l246 1B10                            l247 1B18  
                          l169 21A4                            l258 218C                            l391 174A  
                          l378 15E6                            l495 1CA6                            l942 1F66  
                          l964 1EBE                            l973 1270                            l975 1278  
                          l968 1F14                            l976 12BE                            l994 19F4  
                          l987 145E                            _abs 203E                            _pad 1E9C  
        __end_of_dateIncrement 11E4                            wreg 000FE8                           l1000 1FB4  
                         l1004 2074                           l1030 21D0                           l1007 207C  
                         l2000 2142                           l2002 2146                           l2010 211A  
                         l1019 1BE2                           l1027 1FF8                           ?_abs 0013  
                         l2012 211C                           l2004 2104                           l2100 1146  
                         l2020 0E28                           l2014 211E                           l2006 2106  
                         l2110 1182                           l2102 1156                           l2022 0E38  
                         l2030 0E5E                           l2016 2122                           l2008 2118  
                         l2120 11D6                           l2112 119A                           l2104 1158  
                         l2040 0ECE                           l2032 0E76                           l2024 0E3C  
                         l2122 218E                           l2130 218A                           l2114 11B4  
                         l2106 1164                           l2050 0F30                           l2042 0EE8  
                         l2034 0E82                           l2026 0E46                           l2018 0E28  
                         l2124 216E                           l2116 11B8                           l2108 1168  
                         l2060 0FB0                           l2052 0F48                           l2044 0F02  
                         l2036 0E9A                           l2028 0E50                           l2140 1F54  
                         l2132 1F16                           l2126 2176                           l2118 11D4  
                         l2070 1012                           l2054 0F62                           l2062 0FCA  
                         l2046 0F0E                           l2038 0EB4                           l2134 1F28  
                         l2150 1750                           l2128 2180                           l2072 103C  
                         l2064 0FD6                           l2056 0F7C                           l2048 0F18  
                         l2136 1F30                           l2160 1764                           l2152 1754  
                         l2090 10D4                           l2074 1054                           l2058 0F96  
                         l2066 0FE0                           l2138 1F38                           l2170 177E  
                         l2162 1768                           l2154 1758                           l2092 10E2  
                         l2076 1060                           l2068 0FF8                           l2084 108A  
                         l1700 161E                           l2180 17AC                           l2172 1782  
                         l2164 176E                           l2156 175C                           l2148 174C  
                         l2094 10FC                           l2086 10A2                           l2078 106E  
                         l1710 1686                           l1702 162C                           l1630 1B3E  
                         l2190 182A                           l2182 17B2                           l2174 1782  
                         l2166 1772                           l2158 1760                           l2096 1114  
                         l2088 10BC                           l1712 1694                           l1720 16FA  
                         l1704 164C                           l1632 1B48                           l1640 1FB6  
                         l1800 143E                           l2192 1852                           l2184 17F0  
                         l2176 1792                           l2168 1776                           l1810 1BE4  
                         l2098 112E                           l1650 1464                           l1722 170A  
                         l1714 16C2                           l1706 166A                           l1634 1B66  
                         l1626 1B1A                           l1642 1FC2                           l1730 1EAA  
                         l2194 187C                           l2186 17F8                           l2178 17A2  
                         l1804 1E04                           l1820 1C10                           l1812 1BE8  
                         l1900 19F8                           l1660 14C4                           l1652 1472  
                         l1724 172A                           l1716 16E2                           l1708 1672  
                         l1636 1B9C                           l1628 1B2C                           l1644 1FD4  
                         l1740 1F00                           l1732 1EB6                           l2196 188E  
                         l2188 1824                           l1750 21B0                           l1806 1E8E  
                         l1830 1C3E                           l1822 1C18                           l1814 1BF6  
                         l1910 1A60                           l1902 19FC                           l1670 150E  
                         l1662 14C8                           l1654 1492                           l1718 16F4  
                         l1742 203E                           l1646 1FD8                           l1734 1ECA  
                         l2198 1894                           l1808 1E92                           l1840 1C78  
                         l1832 1C46                           l1824 1C1C                           l1816 1BFE  
                         l1920 1ACE                           l1912 1A7C                           l1904 1A0C  
                         l1680 157E                           l1672 151C                           l1664 14D4  
                         l1656 1496                           l1648 1460                           l1744 2058  
                         l1736 1EDE                           l1728 1E9C                           l1760 1248  
                         l1752 11E4                           l1746 21A6                           l1850 1C9E  
                         l1842 1C7A                           l1834 1C54                           l1826 1C24  
                         l1818 1C02                           l1922 1B02                           l1914 1A8E  
                         l1906 1A0C                           l1682 1590                           l1674 152E  
                         l1666 14F2                           l1658 14A4                           l1738 1EE2  
                         l1770 12A6                           l1762 1264                           l1754 1204  
                         l1930 1F90                           l1748 21A8                           l1940 1D94  
                         l1844 1C80                           l1836 1C5A                           l1828 1C36  
                         l1916 1AB4                           l1908 1A36                           l1924 1B0A  
                         l1676 155C                           l1668 14FA                           l1684 1596  
                         l1692 15E8                           l1780 12D4                           l1772 12B2  
                         l1764 1280                           l1756 1218                           l1860 18E8  
                         l1932 1FAC                           l1950 1DD0                           l1942 1D9A  
                         l1838 1C70                           l1846 1C86                           l1918 1ABE  
                         l1686 15A6                           l1678 157C                           l1694 15EC  
                         l1790 13E0                           l1782 1356                           l1774 12BA  
                         l1766 1290                           l1758 1228                           l1870 198A  
                         l1862 18EC                           l1854 18A8                           l1926 1F68  
                         l1952 1DE8                           l1944 1DAC                           l1936 1D64  
                         l1960 20D2                           l1848 1C96                           l1688 15C6  
                         l1696 15FA                           l1792 13FE                           l1784 135C  
                         l1776 12C6                           l1768 1296                           l1864 18FC  
                         l1856 18CC                           l1928 1F74                           l1890 2032  
                         l1954 1DF6                           l1946 1DB4                           l1938 1D7C  
                         l1962 207E                           l1970 214C                           l1698 161A  
                         l1794 1418                           l1786 1362                           l1778 12CE  
                         l1874 19BA                           l1866 1918                           l1858 18DA  
                         l1892 203A                           l1884 1FFC                           l1948 1DC6  
                         l1964 2082                           l1956 20B4                           l1980 1D02  
                         l1972 1CAA                           l1796 1428                           l1788 13C6  
                         l1868 1934                           l1894 21BC                           l1990 2128  
                         l1886 2022                           l1966 2094                           l1958 20C4  
                         l1982 1D18                           l1974 1CC8                           l1798 142E  
                         l1878 19CC                           ?_pad 0011                           l1896 21C2  
                         l1992 212A                           l1888 202A                           l1968 2098  
                         l1984 1D2E                           l1976 1CD6                           l1898 21CC  
                         l1994 213C                           l1986 1D44                           l1978 1CEC  
                         l1996 213E                           l1988 1D5A                           l1998 2140  
                         STR_1 0E01                           STR_2 0E15                           u1100 1B66  
                         u1101 1B62                           u1110 1B9C                           u1111 1B98  
                         u2000 1146                           u1200 15FA                           u1120 1FF8  
                         u2001 1142                           u1201 15F6                           u1121 1FF4  
                         u2010 1156                           u1130 1472                           u1210 162C  
                         u2011 1152                           u1131 146E                           u1211 1628  
                         u2020 1182                           u1140 14A4                           u1220 166A  
                         u1300 1216                           u2100 17DE                           u2021 117E  
                         u1141 14A0                           u1221 1666                           u2030 119A  
                         u1230 1694                           u1310 1228                           u2110 17F0  
                         u2031 1196                           u1151 14CE                           u1231 1690  
                         u1311 1224                           u2111 17EC                           u2040 11B4  
                         u1160 14F2                           u1240 16C2                           u1080 1B2C  
                         u1320 1264                           u2041 11B0                           u1161 14EE  
                         u1241 16BE                           u1081 1B28                           u1321 1260  
                         u1410 1E3A                           u2050 11D4                           u1170 151C  
                         u1250 170A                           u1090 1B3E                           u1330 1290  
                         u1411 1E32                           u2051 11D0                           u1171 1518  
                         u1251 1706                           u1091 1B3A                           u1331 128C  
                         u1500 1C54                           u1180 155C                           u1260 1EAA  
                         u1340 12A6                           u2060 1792                           u1501 1C50  
                         u1181 1558                           u1261 1EA6                           u1341 12A2  
                         u2061 178E                           u1430 1E5C                           u1510 1C70  
                         u1190 15A6                           u1270 1F00                           u1350 13E0  
                         u2070 17A2                           u2207 1E94                           u1431 1E54  
                         u1511 1C6C                           u2127 1AC4                           u1191 15A2  
                         u1271 1EFC                           u1351 13DC                           u2071 179E  
                         u1408 1E18                           u1520 1C96                           u1600 1A60  
                         u1280 2058                           u1360 13FE                           u2080 17C6  
                         u2217 21AA                           u2137 1D86                           u1521 1C92  
                         u1601 1A5C                           u1281 2054                           u1361 13FA  
                         u2081 17BE                           u1450 1E80                           u1610 1A8E  
                         u1370 1418                           u1290 1214                           u1530 18CC  
                         u2090 17DC                           u2227 21B4                           u1451 1E78  
                         u2147 1D9C                           u1611 1A8A                           u1371 1414  
                         u1291 120E                           u1531 18C8                           u2091 17D6  
                         u1428 1E3C                           u1700 1CEC                           u1620 1AB4  
                         u1380 1428                           u1540 1918                           u2157 1DAE  
                         u1701 1CE8                           u1621 1AB0                           u1381 1424  
                         u1541 1914                           u1390 1E16                           u1710 1D02  
                         u1470 1BF6                           u1630 1B02                           u1550 1934  
                         u1391 1E0E                           u2167 1DC0                           u1711 1CFE  
                         u1471 1BF2                           u1631 1AFE                           u1551 1930  
                         u1448 1E5E                           u1560 2010                           u1720 1D18  
                         u1480 1C10                           u1800 0ECE                           u1640 1FAC  
                         u2088 17C8                           u1561 2008                           u2177 1DD6  
                         u1721 1D14                           u1481 1C0C                           u1801 0ECA  
                         u1641 1FA8                           u1650 20C4                           u1730 1D2E  
                         u1490 1C36                           u1810 0EE8                           u2187 1DEE  
                         u1651 20C0                           u1731 1D2A                           u1491 1C32  
                         u1811 0EE4                           u1468 1E82                           u1660 20B0  
                         u1740 1D44                           u1580 1A0C                           u1900 0FF8  
                         u1820 0F02                           u2197 2034                           u1661 20AC  
                         u1741 1D40                           u1581 1A08                           u1901 0FF4  
                         u1821 0EFE                           u1750 1D5A                           u1670 1CBC  
                         u1590 1A36                           u1910 1012                           u1830 0F30  
                         u1751 1D56                           u1671 1CB4                           u1591 1A32  
                         u1911 100E                           u1831 0F2C                           u1920 103C  
                         u1840 0F48                           u1760 0E38                           u1921 1038  
                         u1841 0F44                           u1761 0E34                           u1578 2012  
                         u1690 1CD6                           u1930 1054                           u1850 0F62  
                         u1770 0E76                           u1691 1CD2                           u1931 1050  
                         u1851 0F5E                           u1771 0E72                           u1940 1086  
                         u1860 0F7C                           u1780 0E9A                           u1941 1082  
                         u1861 0F78                           u1781 0E96                           u1950 10A2  
                         u1870 0F96                           u1790 0EB4                           u1951 109E  
                         u1871 0F92                           u1791 0EB0                           u1688 1CBE  
                         u1960 10BC                           u1880 0FB0                           u1961 10B8  
                         u1881 0FAC                           u1970 10FC                           u1890 0FCA  
                         u1971 10F8                           u1891 0FC6                           u1980 1114  
                         u1981 1110                           u1990 112E                           u1991 112A  
                         abs@a 0013                           _dbuf 00D3                           _main 174C  
                         _dtoa 11E4                           _hour 005D                           _prec 00D0  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005E  
                 ?_LCD_setline 0001                           start 0052               __end_of_DAC_init 21D0  
              __end_of_HighISR 0052                   main@deadTime 00C7                   ___param_bank 000000  
                   _Comp1_init 2128                     _Comp2_init 2104                          ??_abs 0015  
                        ??_pad 0017               __end_of_LCD_Init 1E02          syncro@daylightSavings 000E  
              __end_of___aodiv 15E8                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 174C                __end_of___awdiv 1CA8                ___awdiv@divisor 0003  
                        i2l174 0020                          i2l175 0034                          i2l177 004E  
              ___awdiv@counter 0005                   vfpfcnvrt@fmt 0041                          _TMR0H 000FD4  
                        _TMR0L 000FD3                          _flags 005A                          _fputc 1B1A  
                        _fputs 1FB6                          pad@fp 0011                          _width 00CE  
                        _putch 21D0                          _sunUp 005C                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                  ?_LCD_sendbyte 0003  
                        tablat 000FF5                          ttemp5 005F                          ttemp6 0062  
                        ttemp7 0066                          status 000FD8                          wtemp8 005F  
              __end_of_sprintf 1F68                __initialization 20DE                  main@dayOfWeek 00CB  
                 __end_of_main 18A8                   __end_of_dtoa 1460              __end_of_LCD_E_TOG 21BC  
                       ??_main 0059                         ??_dtoa 0026                  __activetblptr 000001  
                       ?_fputc 0001                         ?_fputs 000A                 ??_LCD_sendbyte 0004  
             ___awdiv@dividend 0001                         ?_putch 0001                         i2l1560 0042  
                       i2l1562 0044                         i2l1554 000A                         i2l1564 0046  
                       i2l1556 001A                         i2l1566 004A                         i2l1558 002E  
                    ??_HighISR 0001              _LEDarray_disp_bin 1CA8             ?_LEDarray_disp_bin 0001  
                ??_Timer0_init 0001                   vfprintf@cfmt 0057                      ??___aodiv 0011  
                    ??___aomod 0011                    ?_Comp1_init 0001                      ??___awdiv 0005  
                  ?_Comp2_init 0001                         _midDay 00D2            ??_LEDarray_disp_bin 0001  
      dateIncrement@dayOfWeekP 0012                         clear_0 20E4               ___awdiv@quotient 0007  
                       isa$std 000001                         pad@buf 0013                         dtoa@fp 001C  
                       _syncro 19F6                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                       putch@c 0001                      ?_DAC_init 0001               __end_of_vfprintf 1FB6  
                    ??_sprintf 0059      __end_of_LEDarray_disp_bin 1D64                     __accesstop 0060  
      __end_of__initialization 20F2                      ?_LCD_Init 0001                  ___rparam_used 000001  
                _LEDarray_init 214C                _Interrupts_init 218E                 __pcstackCOMRAM 0001  
          dateIncrement@monthP 0016                 main@dayOfMonth 00CC                  __end_of_fputc 1BE4  
                __end_of_fputs 1FFA                  __end_of_putch 21D2            __end_of_Timer0_init 218E  
                   ??_DAC_init 0001                        ??_fputc 0005                        ??_fputs 000E  
                      ??_putch 0001                     __pbssBANK0 00CE                     ??_LCD_Init 0006  
               _LCD_sendnibble 1E02                 ?_LEDarray_init 0001                 _LCD_sendstring 207E  
         __end_of_LCD_sendbyte 203E                        ?_syncro 0001                        i2u99_40 001A  
                      i2u99_41 0016         __end_of_LCD_sendnibble 1E9C        __end_of_Interrupts_init 21A6  
                      _HighISR 0008         __end_of_LCD_sendstring 20B2                        __Hparam 0000  
                      __Lparam 0000                    _Timer0_init 216E                        ___aodiv 1460  
                      ___aomod 15E8                        ___awdiv 1BE4                      ?_vfprintf 0051  
                 __psmallconst 0E00                        __pcinit 20DE                        __ramtop 0E00  
                      __ptext0 174C                        __ptext1 1F16                        __ptext2 1F68  
                      __ptext3 18A8                        __ptext4 11E4                        __ptext5 1E9C  
                      __ptext6 1FB6                        __ptext7 1B1A                        __ptext8 21D0  
                      __ptext9 203E       dateIncrement@dayOfMonthP 0014                      _LCD_E_TOG 21A6  
              LCD_setline@line 0006                        _sunDown 005B                        _sprintf 1F16  
         end_of_initialization 20F2                ?_LCD_sendnibble 0001                        fputc@fp 0003  
              ??_LEDarray_init 0001                        fputs@fp 000C                ?_LCD_sendstring 0006  
            __end_of_vfpfcnvrt 19F6                        postdec2 000FDD                   ??_Comp1_init 0001  
                 ??_Comp2_init 0001                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 0047                     ??_vfprintf 0057  
                   ?_LCD_E_TOG 0001                      _TRISAbits 000F81                      _TRISBbits 000F82  
                    _TRISCbits 000F83                      _TRISEbits 000F85                      _TRISFbits 000F86  
                _dateIncrement 0E28                      _TRISGbits 000F87                      _TRISHbits 000F88  
           __end_of_Comp1_init 214C             __end_of_Comp2_init 2128                    _CM1CON0bits 000ED0  
                  _CM1CON1bits 000ED1               ?_Interrupts_init 0001                    _CM2CON0bits 000ECC  
                  _CM2CON1bits 000ECD                    vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F  
                  vfpfcnvrt@fp 003F           LCD_sendnibble@number 0002                 __end_of_syncro 1B1A  
          start_initialization 20DE                 ?_dateIncrement 0010                    __end_of_abs 207E  
                  __end_of_pad 1F16                   _LCD_sendbyte 1FFA                  ??_LCD_setline 0006  
                  vfprintf@fmt 0053           LCD_sendstring@string 0006                       ??_syncro 0009  
                  __pbssCOMRAM 005A                    ??_LCD_E_TOG 0001                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001             dateIncrement@yearP 0018                       ?_HighISR 0001  
                    _dtoa$1861 002E                   ?_Timer0_init 0001                      __pintcode 0008  
                     ?___aodiv 0001                       ?___aomod 0001                       ?___awdiv 0001  
             ___aodiv@quotient 0013            __end_of_LCD_setline 20DE                ??_dateIncrement 001A  
                  __smallconst 0E00               ??_LCD_sendnibble 0001                       _DAC_init 21BC  
             ??_LCD_sendstring 0008                       ?_sprintf 0060               LCD_sendbyte@Byte 0005  
                     _LCD_Init 1D64               LCD_sendbyte@type 0003                       _LATAbits 000F79  
                     _LATBbits 000F7A                       _LATCbits 000F7B                       _LATEbits 000F7D  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                     _IPR0bits 000E1F                       _PIE0bits 000E29                       _IPR2bits 000E21  
                     _PIE2bits 000E2B                       i2u100_40 002E                       i2u100_41 002A  
                     i2u101_40 0042                       i2u101_41 003E                       _PIR0bits 000E33  
                     _PIR2bits 000E35                      _vfpfcnvrt 18A8                      main@month 00CD  
                   _CM1NCHbits 000ED2                     _CM1PCHbits 000ED3                     _CM2NCHbits 000ECE  
                   _CM2PCHbits 000ECF          __end_of_LEDarray_init 216E                    _LCD_setline 20B2  
                     __Hrparam 0000                     vfprintf@ap 0055                       __Lrparam 0000  
                   vfprintf@fp 0051                   __Lsmallconst 0E00                     ?_vfpfcnvrt 003F  
              ___aodiv@divisor 0009                ___aodiv@counter 0011                     sprintf@fmt 0062  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                       __ptext10 15E8  
                     __ptext11 1460                       __ptext20 1D64                       __ptext12 0E28  
                     __ptext21 1FFA                       __ptext13 19F6                       __ptext22 1E02  
                     __ptext14 1BE4                       __ptext23 21A6                       __ptext15 216E  
                     __ptext24 218E                       __ptext16 214C                       __ptext25 2104  
                     __ptext17 1CA8                       __ptext26 2128                       __ptext18 20B2  
                     __ptext27 21BC                       __ptext19 207E        LEDarray_disp_bin@number 0002  
                     isa$xinst 000000                       int$flags 005E                       _vfprintf 1F68  
                     main@buf1 0077                       main@buf2 009F                       main@year 00C8  
             ___aomod@dividend 0001  dateIncrement@daylightSavingsP 0010                     _INTCONbits 000FF2  
                     intlevel2 0000                      sprintf@ap 006A                   _DAC1CON0bits 000EC6  
                 _DAC1CON1bits 000EC7                ___aomod@divisor 0009                    ??_vfpfcnvrt 0045  
              ___aomod@counter 0011                       sprintf@f 006C                       sprintf@s 0060  
                syncro@trueMid 000F                   ___aodiv@sign 0012            main@daylightSavings 00CA  
            _dateIncrement$882 001C                   ___aomod@sign 0012  
