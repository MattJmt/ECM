

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 10 09:41:54 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Version 2.35
    47                           ; Generated 05/05/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F67K40 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     _T0CON0bits	set	4053
    82   000000                     _T0CON1bits	set	4054
    83   000000                     _LATHbits	set	3968
    84   000000                     _CM2CON1bits	set	3789
    85   000000                     _CM2PCHbits	set	3791
    86   000000                     _CM1CON1bits	set	3793
    87   000000                     _IPR0bits	set	3615
    88   000000                     _IPR2bits	set	3617
    89   000000                     _PIE0bits	set	3625
    90   000000                     _PIE2bits	set	3627
    91   000000                     _DAC1CON0bits	set	3782
    92   000000                     _LATAbits	set	3961
    93   000000                     _LATGbits	set	3967
    94   000000                     _TRISAbits	set	3969
    95   000000                     _TRISGbits	set	3975
    96   000000                     _TRISHbits	set	3976
    97   000000                     _TMR0L	set	4051
    98   000000                     _TMR0H	set	4052
    99   000000                     _INTCONbits	set	4082
   100   000000                     _TRISEbits	set	3973
   101   000000                     _TRISCbits	set	3971
   102   000000                     _TRISBbits	set	3970
   103   000000                     _TRISFbits	set	3974
   104   000000                     _LATEbits	set	3965
   105   000000                     _LATCbits	set	3963
   106   000000                     _LATBbits	set	3962
   107   000000                     _LATFbits	set	3966
   108   000000                     _CM2CON0bits	set	3788
   109   000000                     _CM2NCHbits	set	3790
   110   000000                     _CM1CON0bits	set	3792
   111   000000                     _CM1NCHbits	set	3794
   112   000000                     _DAC1CON1bits	set	3783
   113   000000                     _CM1PCHbits	set	3795
   114   000000                     _PIR0bits	set	3635
   115   000000                     _PIR2bits	set	3637
   116                           
   117                           	psect	smallconst
   118   000E00                     __psmallconst:
   119                           	callstack 0
   120   000E00  00                 	db	0
   121   000E01                     STR_1:
   122                           
   123                           ; BSR set to: 14
   124   000E01  48                 	db	72	;'H'
   125   000E02  3A                 	db	58	;':'
   126   000E03  25                 	db	37
   127   000E04  64                 	db	100	;'d'
   128   000E05  20                 	db	32
   129   000E06  44                 	db	68	;'D'
   130   000E07  6F                 	db	111	;'o'
   131   000E08  57                 	db	87	;'W'
   132   000E09  3A                 	db	58	;':'
   133   000E0A  25                 	db	37
   134   000E0B  64                 	db	100	;'d'
   135   000E0C  20                 	db	32
   136   000E0D  4D                 	db	77	;'M'
   137   000E0E  44                 	db	68	;'D'
   138   000E0F  3A                 	db	58	;':'
   139   000E10  25                 	db	37
   140   000E11  64                 	db	100	;'d'
   141   000E12  20                 	db	32
   142   000E13  20                 	db	32
   143   000E14  00                 	db	0
   144   000E15                     STR_2:
   145                           
   146                           ; BSR set to: 14
   147   000E15  44                 	db	68	;'D'
   148   000E16  61                 	db	97	;'a'
   149   000E17  74                 	db	116	;'t'
   150   000E18  65                 	db	101	;'e'
   151   000E19  3A                 	db	58	;':'
   152   000E1A  20                 	db	32
   153   000E1B  25                 	db	37
   154   000E1C  64                 	db	100	;'d'
   155   000E1D  2F                 	db	47
   156   000E1E  25                 	db	37
   157   000E1F  64                 	db	100	;'d'
   158   000E20  2F                 	db	47
   159   000E21  25                 	db	37
   160   000E22  64                 	db	100	;'d'
   161   000E23  20                 	db	32
   162   000E24  20                 	db	32
   163   000E25  00                 	db	0
   164   000E26  00                 	db	0	; dummy byte at the end
   165   000000                     
   166                           ; #config settings
   167                           
   168                           	psect	cinit
   169   0020DC                     __pcinit:
   170                           	callstack 0
   171   0020DC                     start_initialization:
   172                           	callstack 0
   173   0020DC                     __initialization:
   174                           	callstack 0
   175                           
   176                           ; Clear objects allocated to BANK0 (36 bytes)
   177   0020DC  EE00  F0CE         	lfsr	0,__pbssBANK0
   178   0020E0  0E24               	movlw	36
   179   0020E2                     clear_0:
   180   0020E2  6AEE               	clrf	postinc0,c
   181   0020E4  06E8               	decf	wreg,f,c
   182   0020E6  E1FD               	bnz	clear_0
   183                           
   184                           ; Clear objects allocated to COMRAM (5 bytes)
   185   0020E8  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   186   0020EA  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   187   0020EC  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   188   0020EE  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   189   0020F0  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   190   0020F2                     end_of_initialization:
   191                           	callstack 0
   192   0020F2                     __end_of__initialization:
   193                           	callstack 0
   194   0020F2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   195   0020F4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   196   0020F6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   197   0020F8  6EF8               	movwf	tblptru,c
   198   0020FA  0E0E               	movlw	high __Lsmallconst
   199   0020FC  6EF7               	movwf	tblptrh,c
   200   0020FE  0100               	movlb	0
   201   002100  EFA5  F00B         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMRAM
   204   00005A                     __pbssCOMRAM:
   205                           	callstack 0
   206   00005A                     _prec:
   207                           	callstack 0
   208   00005A                     	ds	2
   209   00005C                     _flags:
   210                           	callstack 0
   211   00005C                     	ds	1
   212   00005D                     _sunDown:
   213                           	callstack 0
   214   00005D                     	ds	1
   215   00005E                     _sunUp:
   216                           	callstack 0
   217   00005E                     	ds	1
   218                           
   219                           	psect	bssBANK0
   220   0000CE                     __pbssBANK0:
   221                           	callstack 0
   222   0000CE                     _width:
   223                           	callstack 0
   224   0000CE                     	ds	2
   225   0000D0                     _midDay:
   226                           	callstack 0
   227   0000D0                     	ds	1
   228   0000D1                     _hour:
   229                           	callstack 0
   230   0000D1                     	ds	1
   231   0000D2                     _dbuf:
   232                           	callstack 0
   233   0000D2                     	ds	32
   234                           
   235                           	psect	cstackBANK0
   236   000060                     __pcstackBANK0:
   237                           	callstack 0
   238   000060                     ?_sprintf:
   239                           	callstack 0
   240   000060                     sprintf@s:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x0
   244   000060                     	ds	2
   245   000062                     sprintf@fmt:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x2
   249   000062                     	ds	8
   250   00006A                     sprintf@ap:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0xA
   254   00006A                     	ds	2
   255   00006C                     sprintf@f:
   256                           	callstack 0
   257                           
   258                           ; 11 bytes @ 0xC
   259   00006C                     	ds	11
   260   000077                     main@buf1:
   261                           	callstack 0
   262                           
   263                           ; 40 bytes @ 0x17
   264   000077                     	ds	40
   265   00009F                     main@buf2:
   266                           	callstack 0
   267                           
   268                           ; 40 bytes @ 0x3F
   269   00009F                     	ds	40
   270   0000C7                     main@deadTime:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x67
   274   0000C7                     	ds	1
   275   0000C8                     main@year:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x68
   279   0000C8                     	ds	2
   280   0000CA                     main@daylightSavings:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x6A
   284   0000CA                     	ds	1
   285   0000CB                     main@dayOfWeek:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x6B
   289   0000CB                     	ds	1
   290   0000CC                     main@dayOfMonth:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x6C
   294   0000CC                     	ds	1
   295   0000CD                     main@month:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x6D
   299   0000CD                     	ds	1
   300                           
   301                           	psect	cstackCOMRAM
   302   000001                     __pcstackCOMRAM:
   303                           	callstack 0
   304   000001                     ??_LEDarray_disp_bin:
   305   000001                     ??_LCD_sendnibble:
   306   000001                     ?___awdiv:
   307                           	callstack 0
   308   000001                     ?___aodiv:
   309                           	callstack 0
   310   000001                     ?___aomod:
   311                           	callstack 0
   312   000001                     ___awdiv@dividend:
   313                           	callstack 0
   314   000001                     fputc@c:
   315                           	callstack 0
   316   000001                     ___aodiv@dividend:
   317                           	callstack 0
   318   000001                     ___aomod@dividend:
   319                           	callstack 0
   320                           
   321                           ; 8 bytes @ 0x0
   322   000001                     	ds	1
   323   000002                     LEDarray_disp_bin@number:
   324                           	callstack 0
   325   000002                     LCD_sendnibble@number:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x1
   329   000002                     	ds	1
   330   000003                     LCD_sendbyte@type:
   331                           	callstack 0
   332   000003                     ___awdiv@divisor:
   333                           	callstack 0
   334   000003                     fputc@fp:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x2
   338   000003                     	ds	1
   339   000004                     ??_LCD_sendbyte:
   340                           
   341                           ; 1 bytes @ 0x3
   342   000004                     	ds	1
   343   000005                     ??_fputc:
   344   000005                     LCD_sendbyte@Byte:
   345                           	callstack 0
   346   000005                     ___awdiv@counter:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x4
   350   000005                     	ds	1
   351   000006                     ??_LCD_Init:
   352   000006                     LCD_setline@line:
   353                           	callstack 0
   354   000006                     ___awdiv@sign:
   355                           	callstack 0
   356   000006                     LCD_sendstring@string:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x5
   360   000006                     	ds	1
   361   000007                     ___awdiv@quotient:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x6
   365   000007                     	ds	1
   366   000008                     
   367                           ; 1 bytes @ 0x7
   368   000008                     	ds	1
   369   000009                     ??_syncro:
   370   000009                     ___aodiv@divisor:
   371                           	callstack 0
   372   000009                     ___aomod@divisor:
   373                           	callstack 0
   374                           
   375                           ; 8 bytes @ 0x8
   376   000009                     	ds	1
   377   00000A                     fputs@s:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x9
   381   00000A                     	ds	2
   382   00000C                     fputs@fp:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xB
   386   00000C                     	ds	2
   387   00000E                     syncro@daylightSavings:
   388                           	callstack 0
   389   00000E                     fputs@c:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0xD
   393   00000E                     	ds	1
   394   00000F                     syncro@trueMid:
   395                           	callstack 0
   396   00000F                     fputs@i:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0xE
   400   00000F                     	ds	1
   401   000010                     dateIncrement@daylightSavingsP:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0xF
   405   000010                     	ds	1
   406   000011                     ___aodiv@counter:
   407                           	callstack 0
   408   000011                     ___aomod@counter:
   409                           	callstack 0
   410   000011                     pad@fp:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x10
   414   000011                     	ds	1
   415   000012                     ___aodiv@sign:
   416                           	callstack 0
   417   000012                     ___aomod@sign:
   418                           	callstack 0
   419   000012                     dateIncrement@dayOfWeekP:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x11
   423   000012                     	ds	1
   424   000013                     ?_abs:
   425                           	callstack 0
   426   000013                     pad@buf:
   427                           	callstack 0
   428   000013                     abs@a:
   429                           	callstack 0
   430   000013                     ___aodiv@quotient:
   431                           	callstack 0
   432                           
   433                           ; 8 bytes @ 0x12
   434   000013                     	ds	1
   435   000014                     dateIncrement@dayOfMonthP:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x13
   439   000014                     	ds	1
   440   000015                     ??_abs:
   441   000015                     pad@p:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x14
   445   000015                     	ds	1
   446   000016                     dateIncrement@monthP:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x15
   450   000016                     	ds	1
   451   000017                     ??_pad:
   452                           
   453                           ; 1 bytes @ 0x16
   454   000017                     	ds	1
   455   000018                     dateIncrement@yearP:
   456                           	callstack 0
   457   000018                     pad@i:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x17
   461   000018                     	ds	2
   462   00001A                     ??_dateIncrement:
   463   00001A                     pad@w:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x19
   467   00001A                     	ds	2
   468   00001C                     _dateIncrement$1346:
   469                           	callstack 0
   470   00001C                     dtoa@fp:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x1B
   474   00001C                     	ds	2
   475   00001E                     dtoa@d:
   476                           	callstack 0
   477                           
   478                           ; 8 bytes @ 0x1D
   479   00001E                     	ds	8
   480   000026                     ??_dtoa:
   481                           
   482                           ; 1 bytes @ 0x25
   483   000026                     	ds	8
   484   00002E                     _dtoa$1865:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x2D
   488   00002E                     	ds	2
   489   000030                     dtoa@p:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x2F
   493   000030                     	ds	2
   494   000032                     dtoa@w:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x31
   498   000032                     	ds	2
   499   000034                     dtoa@n:
   500                           	callstack 0
   501                           
   502                           ; 8 bytes @ 0x33
   503   000034                     	ds	8
   504   00003C                     dtoa@i:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x3B
   508   00003C                     	ds	2
   509   00003E                     dtoa@s:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x3D
   513   00003E                     	ds	1
   514   00003F                     vfpfcnvrt@fp:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x3E
   518   00003F                     	ds	2
   519   000041                     vfpfcnvrt@fmt:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x40
   523   000041                     	ds	2
   524   000043                     vfpfcnvrt@ap:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x42
   528   000043                     	ds	2
   529   000045                     ??_vfpfcnvrt:
   530                           
   531                           ; 1 bytes @ 0x44
   532   000045                     	ds	2
   533   000047                     vfpfcnvrt@convarg:
   534                           	callstack 0
   535                           
   536                           ; 8 bytes @ 0x46
   537   000047                     	ds	8
   538   00004F                     vfpfcnvrt@cp:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x4E
   542   00004F                     	ds	2
   543   000051                     ?_vfprintf:
   544                           	callstack 0
   545   000051                     vfprintf@fp:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x50
   549   000051                     	ds	2
   550   000053                     vfprintf@fmt:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x52
   554   000053                     	ds	2
   555   000055                     vfprintf@ap:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x54
   559   000055                     	ds	2
   560   000057                     vfprintf@cfmt:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x56
   564   000057                     	ds	2
   565   000059                     ??_main:
   566                           
   567                           ; 1 bytes @ 0x58
   568   000059                     	ds	1
   569                           
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   572 ;;
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 21 in file "main.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  buf2           40   63[BANK0 ] unsigned char [40]
   580 ;;  buf1           40   23[BANK0 ] unsigned char [40]
   581 ;;  year            2  104[BANK0 ] unsigned int 
   582 ;;  month           1  109[BANK0 ] unsigned char 
   583 ;;  dayOfMonth      1  108[BANK0 ] unsigned char 
   584 ;;  dayOfWeek       1  107[BANK0 ] unsigned char 
   585 ;;  daylightSavi    1  106[BANK0 ] unsigned char 
   586 ;;  deadTime        1  103[BANK0 ] unsigned char 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   597 ;;      Locals:         0      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   599 ;;      Totals:         1      87       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   600 ;;Total ram usage:       88 bytes
   601 ;; Hardware stack levels required when called: 9
   602 ;; This function calls:
   603 ;;		_Comp1_init
   604 ;;		_Comp2_init
   605 ;;		_Interrupts_init
   606 ;;		_LCD_Init
   607 ;;		_LCD_sendstring
   608 ;;		_LCD_setline
   609 ;;		_LEDarray_disp_bin
   610 ;;		_LEDarray_init
   611 ;;		_Timer0_init
   612 ;;		_dateIncrement
   613 ;;		_sprintf
   614 ;; This function is called by:
   615 ;;		Startup code after reset
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text0
   620   00174A                     __ptext0:
   621                           	callstack 0
   622   00174A                     _main:
   623                           	callstack 22
   624   00174A                     
   625                           ;main.c: 24:     LATHbits.LATH3=0;
   626   00174A  9680               	bcf	128,3,c	;volatile
   627                           
   628                           ;main.c: 25:     TRISHbits.TRISH3=0;
   629   00174C  9688               	bcf	136,3,c	;volatile
   630   00174E                     
   631                           ;main.c: 29:     Interrupts_init();
   632   00174E  ECC7  F010         	call	_Interrupts_init	;wreg free
   633   001752                     
   634                           ;main.c: 30:     Comp1_init();
   635   001752  EC94  F010         	call	_Comp1_init	;wreg free
   636   001756                     
   637                           ;main.c: 31:     Comp2_init();
   638   001756  EC82  F010         	call	_Comp2_init	;wreg free
   639   00175A                     
   640                           ;main.c: 32:     Timer0_init();
   641   00175A  ECB7  F010         	call	_Timer0_init	;wreg free
   642   00175E                     
   643                           ;main.c: 33:     LEDarray_init();
   644   00175E  ECA6  F010         	call	_LEDarray_init	;wreg free
   645   001762                     
   646                           ;main.c: 34:     LCD_Init();
   647   001762  ECB1  F00E         	call	_LCD_Init	;wreg free
   648   001766                     
   649                           ;main.c: 38:     char dayOfWeek = 1;
   650   001766  0E01               	movlw	1
   651   001768  0100               	movlb	0	; () banked
   652   00176A  6FCB               	movwf	main@dayOfWeek& (0+255),b
   653   00176C                     
   654                           ; BSR set to: 0
   655                           ;main.c: 39:     char dayOfMonth = 25;
   656   00176C  0E19               	movlw	25
   657   00176E  6FCC               	movwf	main@dayOfMonth& (0+255),b
   658   001770                     
   659                           ; BSR set to: 0
   660                           ;main.c: 40:     char month = 3;
   661   001770  0E03               	movlw	3
   662   001772  6FCD               	movwf	main@month& (0+255),b
   663   001774                     
   664                           ; BSR set to: 0
   665                           ;main.c: 41:     unsigned int year = 2022;
   666   001774  0E07               	movlw	7
   667   001776  6FC9               	movwf	(main@year+1)& (0+255),b
   668   001778  0EE6               	movlw	230
   669   00177A  6FC8               	movwf	main@year& (0+255),b
   670   00177C                     
   671                           ; BSR set to: 0
   672                           ;main.c: 42:     char daylightSavings = 0;
   673   00177C  0E00               	movlw	0
   674   00177E  6FCA               	movwf	main@daylightSavings& (0+255),b
   675   001780                     l2165:
   676                           
   677                           ;main.c: 47:     if (hour >= 1 && hour <=5){
   678   001780  0100               	movlb	0	; () banked
   679   001782  51D1               	movf	_hour& (0+255),w,b
   680   001784  B4D8               	btfsc	status,2,c
   681   001786  EFC7  F00B         	goto	u2091
   682   00178A  EFC9  F00B         	goto	u2090
   683   00178E                     u2091:
   684   00178E  EFD5  F00B         	goto	l2171
   685   001792                     u2090:
   686   001792                     
   687                           ; BSR set to: 0
   688   001792  0E06               	movlw	6
   689   001794  61D1               	cpfslt	_hour& (0+255),b
   690   001796  EFCF  F00B         	goto	u2101
   691   00179A  EFD1  F00B         	goto	u2100
   692   00179E                     u2101:
   693   00179E  EFD5  F00B         	goto	l2171
   694   0017A2                     u2100:
   695   0017A2                     
   696                           ; BSR set to: 0
   697                           ;main.c: 48:         deadTime = 1;
   698   0017A2  0E01               	movlw	1
   699   0017A4  6FC7               	movwf	main@deadTime& (0+255),b
   700                           
   701                           ;main.c: 49:     }
   702   0017A6  EFD7  F00B         	goto	l2173
   703   0017AA                     l2171:
   704                           
   705                           ; BSR set to: 0
   706   0017AA  0E00               	movlw	0
   707   0017AC  6FC7               	movwf	main@deadTime& (0+255),b
   708   0017AE                     l2173:
   709                           
   710                           ; BSR set to: 0
   711                           ;main.c: 53:     if (CM1CON0bits.OUT & !deadTime){LATHbits.LATH3=1;}
   712   0017AE  010E               	movlb	14	; () banked
   713   0017B0  BDD0               	btfsc	208,6,b	;volatile
   714   0017B2  EFDD  F00B         	goto	u2111
   715   0017B6  EFE1  F00B         	goto	u2110
   716   0017BA                     u2111:
   717   0017BA  6A59               	clrf	??_main^0,c
   718   0017BC  2A59               	incf	??_main^0,f,c
   719   0017BE  EFE2  F00B         	goto	u2118
   720   0017C2                     u2110:
   721   0017C2  6A59               	clrf	??_main^0,c
   722   0017C4                     u2118:
   723   0017C4  0100               	movlb	0	; () banked
   724   0017C6  51C7               	movf	main@deadTime& (0+255),w,b
   725   0017C8  B4D8               	btfsc	status,2,c
   726   0017CA  EFE9  F00B         	goto	u2121
   727   0017CE  EFEC  F00B         	goto	u2120
   728   0017D2                     u2121:
   729   0017D2  0E01               	movlw	1
   730   0017D4  EFED  F00B         	goto	u2130
   731   0017D8                     u2120:
   732   0017D8  0E00               	movlw	0
   733   0017DA                     u2130:
   734   0017DA  1459               	andwf	??_main^0,w,c
   735   0017DC  0900               	iorlw	0
   736   0017DE  B4D8               	btfsc	status,2,c
   737   0017E0  EFF4  F00B         	goto	u2141
   738   0017E4  EFF6  F00B         	goto	u2140
   739   0017E8                     u2141:
   740   0017E8  EFF9  F00B         	goto	l146
   741   0017EC                     u2140:
   742   0017EC                     
   743                           ; BSR set to: 0
   744   0017EC  8680               	bsf	128,3,c	;volatile
   745   0017EE  EFFA  F00B         	goto	l2177
   746   0017F2                     l146:
   747                           
   748                           ; BSR set to: 0
   749   0017F2  9680               	bcf	128,3,c	;volatile
   750   0017F4                     l2177:
   751                           
   752                           ; BSR set to: 0
   753                           ;main.c: 56:     dateIncrement(&daylightSavings, &dayOfWeek, &dayOfMonth, &month, &year)
      +                          ;
   754   0017F4  0ECA               	movlw	low main@daylightSavings
   755   0017F6  6E10               	movwf	dateIncrement@daylightSavingsP^0,c
   756   0017F8  0E00               	movlw	high main@daylightSavings
   757   0017FA  6E11               	movwf	(dateIncrement@daylightSavingsP+1)^0,c
   758   0017FC  0ECB               	movlw	low main@dayOfWeek
   759   0017FE  6E12               	movwf	dateIncrement@dayOfWeekP^0,c
   760   001800  0E00               	movlw	high main@dayOfWeek
   761   001802  6E13               	movwf	(dateIncrement@dayOfWeekP+1)^0,c
   762   001804  0ECC               	movlw	low main@dayOfMonth
   763   001806  6E14               	movwf	dateIncrement@dayOfMonthP^0,c
   764   001808  0E00               	movlw	high main@dayOfMonth
   765   00180A  6E15               	movwf	(dateIncrement@dayOfMonthP+1)^0,c
   766   00180C  0ECD               	movlw	low main@month
   767   00180E  6E16               	movwf	dateIncrement@monthP^0,c
   768   001810  0E00               	movlw	high main@month
   769   001812  6E17               	movwf	(dateIncrement@monthP+1)^0,c
   770   001814  0EC8               	movlw	low main@year
   771   001816  6E18               	movwf	dateIncrement@yearP^0,c
   772   001818  0E00               	movlw	high main@year
   773   00181A  6E19               	movwf	(dateIncrement@yearP+1)^0,c
   774   00181C  EC14  F007         	call	_dateIncrement	;wreg free
   775   001820                     
   776                           ;main.c: 59:     LEDarray_disp_bin(hour);
   777   001820  0100               	movlb	0	; () banked
   778   001822  51D1               	movf	_hour& (0+255),w,b
   779   001824  EC53  F00E         	call	_LEDarray_disp_bin
   780   001828                     
   781                           ;main.c: 62:     char buf1[40];;main.c: 63:     char buf2[40];;main.c: 64:     sprintf(b
      +                          uf1, "H:%d DoW:%d MD:%d  ",hour,dayOfWeek,midDay);
   782   001828  0E77               	movlw	low main@buf1
   783   00182A  0100               	movlb	0	; () banked
   784   00182C  6F60               	movwf	sprintf@s& (0+255),b
   785   00182E  0E00               	movlw	high main@buf1
   786   001830  6F61               	movwf	(sprintf@s+1)& (0+255),b
   787   001832  0E01               	movlw	low STR_1
   788   001834  6F62               	movwf	sprintf@fmt& (0+255),b
   789   001836  0E0E               	movlw	high STR_1
   790   001838  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   791   00183A  C0D1  F064         	movff	_hour,?_sprintf+4
   792   00183E  6B65               	clrf	(?_sprintf+5)& (0+255),b
   793   001840  C0CB  F066         	movff	main@dayOfWeek,?_sprintf+6
   794   001844  6B67               	clrf	(?_sprintf+7)& (0+255),b
   795   001846  C0D0  F068         	movff	_midDay,?_sprintf+8
   796   00184A  6B69               	clrf	(?_sprintf+9)& (0+255),b
   797   00184C  EC8A  F00F         	call	_sprintf	;wreg free
   798   001850                     
   799                           ;main.c: 65:     sprintf(buf2,"Date: %d/%d/%d  ",dayOfMonth,month,year);
   800   001850  0E9F               	movlw	low main@buf2
   801   001852  0100               	movlb	0	; () banked
   802   001854  6F60               	movwf	sprintf@s& (0+255),b
   803   001856  0E00               	movlw	high main@buf2
   804   001858  6F61               	movwf	(sprintf@s+1)& (0+255),b
   805   00185A  0E15               	movlw	low STR_2
   806   00185C  6F62               	movwf	sprintf@fmt& (0+255),b
   807   00185E  0E0E               	movlw	high STR_2
   808   001860  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
   809   001862  C0CC  F064         	movff	main@dayOfMonth,?_sprintf+4
   810   001866  6B65               	clrf	(?_sprintf+5)& (0+255),b
   811   001868  C0CD  F066         	movff	main@month,?_sprintf+6
   812   00186C  6B67               	clrf	(?_sprintf+7)& (0+255),b
   813   00186E  C0C8  F068         	movff	main@year,?_sprintf+8
   814   001872  C0C9  F069         	movff	main@year+1,?_sprintf+9
   815   001876  EC8A  F00F         	call	_sprintf	;wreg free
   816   00187A                     
   817                           ;main.c: 66:     LCD_setline(1);
   818   00187A  0E01               	movlw	1
   819   00187C  EC58  F010         	call	_LCD_setline
   820                           
   821                           ;main.c: 67:     LCD_sendstring(buf1);
   822   001880  0E77               	movlw	low main@buf1
   823   001882  6E06               	movwf	LCD_sendstring@string^0,c
   824   001884  0E00               	movlw	high main@buf1
   825   001886  6E07               	movwf	(LCD_sendstring@string+1)^0,c
   826   001888  EC3E  F010         	call	_LCD_sendstring	;wreg free
   827   00188C                     
   828                           ;main.c: 68:     LCD_setline(0);
   829   00188C  0E00               	movlw	0
   830   00188E  EC58  F010         	call	_LCD_setline
   831   001892                     
   832                           ;main.c: 69:     LCD_sendstring(buf2);
   833   001892  0E9F               	movlw	low main@buf2
   834   001894  6E06               	movwf	LCD_sendstring@string^0,c
   835   001896  0E00               	movlw	high main@buf2
   836   001898  6E07               	movwf	(LCD_sendstring@string+1)^0,c
   837   00189A  EC3E  F010         	call	_LCD_sendstring	;wreg free
   838   00189E  EFC0  F00B         	goto	l2165
   839   0018A2  EF2B  F000         	goto	start
   840   0018A6                     __end_of_main:
   841                           	callstack 0
   842                           
   843 ;; *************** function _sprintf *****************
   844 ;; Defined at:
   845 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  s               2    0[BANK0 ] PTR unsigned char 
   848 ;;		 -> main@buf2(40), main@buf1(40), 
   849 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   850 ;;		 -> STR_2(17), STR_1(20), 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  f              11   12[BANK0 ] struct _IO_FILE
   853 ;;  ap              2   10[BANK0 ] PTR void [1]
   854 ;;		 -> ?_sprintf(2), 
   855 ;;  ret             2    0        int 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  2    0[BANK0 ] int 
   858 ;; Registers used:
   859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   865 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   866 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   868 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   869 ;;Total ram usage:       23 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; Hardware stack levels required when called: 8
   872 ;; This function calls:
   873 ;;		_vfprintf
   874 ;; This function is called by:
   875 ;;		_main
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text1
   880   001F14                     __ptext1:
   881                           	callstack 0
   882   001F14                     _sprintf:
   883                           	callstack 22
   884   001F14  0E64               	movlw	low (?_sprintf+4)
   885   001F16  0100               	movlb	0	; () banked
   886   001F18  6F6A               	movwf	sprintf@ap& (0+255),b
   887   001F1A  0E00               	movlw	high (?_sprintf+4)
   888   001F1C  6F6B               	movwf	(sprintf@ap+1)& (0+255),b
   889   001F1E  C060  F06C         	movff	sprintf@s,sprintf@f
   890   001F22  C061  F06D         	movff	sprintf@s+1,sprintf@f+1
   891   001F26                     
   892                           ; BSR set to: 0
   893   001F26  0E00               	movlw	0
   894   001F28  6F70               	movwf	(sprintf@f+4)& (0+255),b
   895   001F2A  0E00               	movlw	0
   896   001F2C  6F6F               	movwf	(sprintf@f+3)& (0+255),b
   897   001F2E                     
   898                           ; BSR set to: 0
   899   001F2E  0E00               	movlw	0
   900   001F30  6F76               	movwf	(sprintf@f+10)& (0+255),b
   901   001F32  0E00               	movlw	0
   902   001F34  6F75               	movwf	(sprintf@f+9)& (0+255),b
   903   001F36                     
   904                           ; BSR set to: 0
   905   001F36  0E6C               	movlw	low sprintf@f
   906   001F38  6E51               	movwf	vfprintf@fp^0,c
   907   001F3A  0E00               	movlw	high sprintf@f
   908   001F3C  6E52               	movwf	(vfprintf@fp+1)^0,c
   909   001F3E  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
   910   001F42  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
   911   001F46  0E6A               	movlw	low sprintf@ap
   912   001F48  6E55               	movwf	vfprintf@ap^0,c
   913   001F4A  0E00               	movlw	high sprintf@ap
   914   001F4C  6E56               	movwf	(vfprintf@ap+1)^0,c
   915   001F4E  ECB3  F00F         	call	_vfprintf	;wreg free
   916   001F52  0100               	movlb	0	; () banked
   917   001F54  516F               	movf	(sprintf@f+3)& (0+255),w,b
   918   001F56  2560               	addwf	sprintf@s& (0+255),w,b
   919   001F58  6ED9               	movwf	fsr2l,c
   920   001F5A  5170               	movf	(sprintf@f+4)& (0+255),w,b
   921   001F5C  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
   922   001F5E  6EDA               	movwf	fsr2h,c
   923   001F60  0E00               	movlw	0
   924   001F62  6EDF               	movwf	indf2,c
   925   001F64                     
   926                           ; BSR set to: 0
   927   001F64  0012               	return		;funcret
   928   001F66                     __end_of_sprintf:
   929                           	callstack 0
   930                           
   931 ;; *************** function _vfprintf *****************
   932 ;; Defined at:
   933 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
   936 ;;		 -> sprintf@f(11), 
   937 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
   938 ;;		 -> STR_2(17), STR_1(20), 
   939 ;;  ap              2   84[COMRAM] PTR PTR void 
   940 ;;		 -> sprintf@ap(2), 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
   943 ;;		 -> STR_2(17), STR_1(20), 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  2   80[COMRAM] int 
   946 ;; Registers used:
   947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   953 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   956 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   957 ;;Total ram usage:        8 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 7
   960 ;; This function calls:
   961 ;;		_vfpfcnvrt
   962 ;; This function is called by:
   963 ;;		_sprintf
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text2
   968   001F66                     __ptext2:
   969                           	callstack 0
   970   001F66                     _vfprintf:
   971                           	callstack 22
   972   001F66                     
   973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   974   001F66  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
   975   001F6A  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   976                           
   977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   978   001F6E  EFC7  F00F         	goto	l1911
   979   001F72                     l1909:
   980                           
   981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   982   001F72  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
   983   001F76  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   984   001F7A  0E57               	movlw	low vfprintf@cfmt
   985   001F7C  6E41               	movwf	vfpfcnvrt@fmt^0,c
   986   001F7E  0E00               	movlw	high vfprintf@cfmt
   987   001F80  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
   988   001F82  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
   989   001F86  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   990   001F8A  EC53  F00C         	call	_vfpfcnvrt	;wreg free
   991   001F8E                     l1911:
   992                           
   993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   994   001F8E  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
   995   001F92  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   996   001F96                     	if	0	;tblptru may be non-zero
   997   001F96                     	endif
   998   001F96                     	if	0	;tblptru may be non-zero
   999   001F96                     	endif
  1000   001F96  0008               	tblrd		*
  1001   001F98  50F5               	movf	tablat,w,c
  1002   001F9A  0900               	iorlw	0
  1003   001F9C  A4D8               	btfss	status,2,c
  1004   001F9E  EFD3  F00F         	goto	u1641
  1005   001FA2  EFD5  F00F         	goto	u1640
  1006   001FA6                     u1641:
  1007   001FA6  EFB9  F00F         	goto	l1909
  1008   001FAA                     u1640:
  1009   001FAA                     
  1010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1011   001FAA  0E00               	movlw	0
  1012   001FAC  6E52               	movwf	(?_vfprintf+1)^0,c
  1013   001FAE  0E00               	movlw	0
  1014   001FB0  6E51               	movwf	?_vfprintf^0,c
  1015   001FB2  0012               	return		;funcret
  1016   001FB4                     __end_of_vfprintf:
  1017                           	callstack 0
  1018                           
  1019 ;; *************** function _vfpfcnvrt *****************
  1020 ;; Defined at:
  1021 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1024 ;;		 -> sprintf@f(11), 
  1025 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1026 ;;		 -> vfprintf@cfmt(2), 
  1027 ;;  ap              2   66[COMRAM] PTR PTR void 
  1028 ;;		 -> sprintf@ap(2), 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  convarg         8   70[COMRAM] struct .
  1031 ;;  cp              2   78[COMRAM] PTR unsigned char 
  1032 ;;		 -> STR_2(17), STR_1(20), 
  1033 ;;  i               2    0        int 
  1034 ;;  done            2    0        int 
  1035 ;;  c               1    0        unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1045 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1046 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1047 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1048 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1049 ;;Total ram usage:       18 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 6
  1052 ;; This function calls:
  1053 ;;		_dtoa
  1054 ;;		_fputc
  1055 ;; This function is called by:
  1056 ;;		_vfprintf
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text3
  1061   0018A6                     __ptext3:
  1062                           	callstack 0
  1063   0018A6                     _vfpfcnvrt:
  1064                           	callstack 22
  1065   0018A6                     
  1066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1067   0018A6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1068   0018AA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1069   0018AE  CFDE FFF6          	movff	postinc2,tblptrl
  1070   0018B2  CFDD FFF7          	movff	postdec2,tblptrh
  1071   0018B6                     	if	0	;tblptru may be non-zero
  1072   0018B6                     	endif
  1073   0018B6                     	if	0	;tblptru may be non-zero
  1074   0018B6                     	endif
  1075   0018B6  0008               	tblrd		*
  1076   0018B8  50F5               	movf	tablat,w,c
  1077   0018BA  0A25               	xorlw	37
  1078   0018BC  A4D8               	btfss	status,2,c
  1079   0018BE  EF63  F00C         	goto	u1531
  1080   0018C2  EF65  F00C         	goto	u1530
  1081   0018C6                     u1531:
  1082   0018C6  EFE5  F00C         	goto	l1859
  1083   0018CA                     u1530:
  1084   0018CA                     
  1085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1086   0018CA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1087   0018CE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1088   0018D2  2ADE               	incf	postinc2,f,c
  1089   0018D4  0E00               	movlw	0
  1090   0018D6  22DD               	addwfc	postdec2,f,c
  1091   0018D8                     
  1092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1093   0018D8  0E00               	movlw	0
  1094   0018DA  0100               	movlb	0	; () banked
  1095   0018DC  6FCF               	movwf	(_width+1)& (0+255),b
  1096   0018DE  0E00               	movlw	0
  1097   0018E0  6FCE               	movwf	_width& (0+255),b
  1098   0018E2  C0CE  F05C         	movff	_width,_flags
  1099   0018E6                     
  1100                           ; BSR set to: 0
  1101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1102   0018E6  685A               	setf	_prec^0,c
  1103   0018E8  685B               	setf	(_prec+1)^0,c
  1104   0018EA                     
  1105                           ; BSR set to: 0
  1106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1107   0018EA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1108   0018EE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1109   0018F2  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  1110   0018F6  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  1111   0018FA                     
  1112                           ; BSR set to: 0
  1113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1114   0018FA  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1115   0018FE  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1116   001902                     	if	0	;tblptru may be non-zero
  1117   001902                     	endif
  1118   001902                     	if	0	;tblptru may be non-zero
  1119   001902                     	endif
  1120   001902  0008               	tblrd		*
  1121   001904  50F5               	movf	tablat,w,c
  1122   001906  0A64               	xorlw	100
  1123   001908  B4D8               	btfsc	status,2,c
  1124   00190A  EF89  F00C         	goto	u1541
  1125   00190E  EF8B  F00C         	goto	u1540
  1126   001912                     u1541:
  1127   001912  EF99  F00C         	goto	l1849
  1128   001916                     u1540:
  1129   001916                     
  1130                           ; BSR set to: 0
  1131   001916  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1132   00191A  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1133   00191E                     	if	0	;tblptru may be non-zero
  1134   00191E                     	endif
  1135   00191E                     	if	0	;tblptru may be non-zero
  1136   00191E                     	endif
  1137   00191E  0008               	tblrd		*
  1138   001920  50F5               	movf	tablat,w,c
  1139   001922  0A69               	xorlw	105
  1140   001924  A4D8               	btfss	status,2,c
  1141   001926  EF97  F00C         	goto	u1551
  1142   00192A  EF99  F00C         	goto	u1550
  1143   00192E                     u1551:
  1144   00192E  EFDC  F00C         	goto	l1855
  1145   001932                     u1550:
  1146   001932                     l1849:
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1150   001932  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1151   001936  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1152   00193A  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1153   00193E  0E02               	movlw	2
  1154   001940  26DE               	addwf	postinc2,f,c
  1155   001942  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1156   001946  0E00               	movlw	0
  1157   001948  22DD               	addwfc	postdec2,f,c
  1158   00194A  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1159   00194E  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1160   001952  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  1161   001956  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  1162   00195A  0E00               	movlw	0
  1163   00195C  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1164   00195E  0EFF               	movlw	-1
  1165   001960  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1166   001962  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1167   001964  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1168   001966  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1169   001968  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1170   00196A  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1171                           
  1172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1173   00196C  0E01               	movlw	1
  1174   00196E  244F               	addwf	vfpfcnvrt@cp^0,w,c
  1175   001970  6E45               	movwf	??_vfpfcnvrt^0,c
  1176   001972  0E00               	movlw	0
  1177   001974  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1178   001976  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  1179   001978  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1180   00197C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1181   001980  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  1182   001984  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1183   001988                     
  1184                           ; BSR set to: 0
  1185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1186   001988  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1187   00198C  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1188   001990  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  1189   001994  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1190   001998  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1191   00199C  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1192   0019A0  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1193   0019A4  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1194   0019A8  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1195   0019AC  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1196   0019B0  ECF1  F008         	call	_dtoa	;wreg free
  1197   0019B4  EFF9  F00C         	goto	l985
  1198   0019B8                     l1855:
  1199                           
  1200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1201   0019B8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1202   0019BC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1203   0019C0  2ADE               	incf	postinc2,f,c
  1204   0019C2  0E00               	movlw	0
  1205   0019C4  22DD               	addwfc	postdec2,f,c
  1206   0019C6  EFF9  F00C         	goto	l985
  1207   0019CA                     l1859:
  1208                           
  1209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1210   0019CA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1211   0019CE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1212   0019D2  CFDE FFF6          	movff	postinc2,tblptrl
  1213   0019D6  CFDD FFF7          	movff	postdec2,tblptrh
  1214   0019DA                     	if	0	;tblptru may be non-zero
  1215   0019DA                     	endif
  1216   0019DA                     	if	0	;tblptru may be non-zero
  1217   0019DA                     	endif
  1218   0019DA  0008               	tblrd		*
  1219   0019DC  50F5               	movf	tablat,w,c
  1220   0019DE  6E01               	movwf	fputc@c^0,c
  1221   0019E0  6A02               	clrf	(fputc@c+1)^0,c
  1222   0019E2  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1223   0019E6  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1224   0019EA  EC8C  F00D         	call	_fputc	;wreg free
  1225   0019EE  EFDC  F00C         	goto	l1855
  1226   0019F2                     l985:
  1227   0019F2  0012               	return		;funcret
  1228   0019F4                     __end_of_vfpfcnvrt:
  1229                           	callstack 0
  1230                           
  1231 ;; *************** function _dtoa *****************
  1232 ;; Defined at:
  1233 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1236 ;;		 -> sprintf@f(11), 
  1237 ;;  d               8   29[COMRAM] long long 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  n               8   51[COMRAM] long long 
  1240 ;;  i               2   59[COMRAM] int 
  1241 ;;  w               2   49[COMRAM] int 
  1242 ;;  p               2   47[COMRAM] int 
  1243 ;;  s               1   61[COMRAM] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1253 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1254 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1255 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1256 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1257 ;;Total ram usage:       35 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 5
  1260 ;; This function calls:
  1261 ;;		___aodiv
  1262 ;;		___aomod
  1263 ;;		_abs
  1264 ;;		_pad
  1265 ;; This function is called by:
  1266 ;;		_vfpfcnvrt
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text4
  1271   0011E2                     __ptext4:
  1272                           	callstack 0
  1273   0011E2                     _dtoa:
  1274                           	callstack 22
  1275   0011E2                     
  1276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1277   0011E2  C01E  F034         	movff	dtoa@d,dtoa@n
  1278   0011E6  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  1279   0011EA  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  1280   0011EE  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  1281   0011F2  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  1282   0011F6  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  1283   0011FA  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  1284   0011FE  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  1285   001202                     
  1286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1287   001202  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  1288   001204  EF06  F009         	goto	u1291
  1289   001208  EF09  F009         	goto	u1290
  1290   00120C                     u1291:
  1291   00120C  0E01               	movlw	1
  1292   00120E  EF0A  F009         	goto	u1300
  1293   001212                     u1290:
  1294   001212  0E00               	movlw	0
  1295   001214                     u1300:
  1296   001214  6E3E               	movwf	dtoa@s^0,c
  1297   001216                     
  1298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1299   001216  503E               	movf	dtoa@s^0,w,c
  1300   001218  B4D8               	btfsc	status,2,c
  1301   00121A  EF11  F009         	goto	u1311
  1302   00121E  EF13  F009         	goto	u1310
  1303   001222                     u1311:
  1304   001222  EF23  F009         	goto	l1741
  1305   001226                     u1310:
  1306   001226                     
  1307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1308   001226  1E3B               	comf	(dtoa@n+7)^0,f,c
  1309   001228  1E3A               	comf	(dtoa@n+6)^0,f,c
  1310   00122A  1E39               	comf	(dtoa@n+5)^0,f,c
  1311   00122C  1E38               	comf	(dtoa@n+4)^0,f,c
  1312   00122E  1E37               	comf	(dtoa@n+3)^0,f,c
  1313   001230  1E36               	comf	(dtoa@n+2)^0,f,c
  1314   001232  1E35               	comf	(dtoa@n+1)^0,f,c
  1315   001234  6C34               	negf	dtoa@n^0,c
  1316   001236  0E00               	movlw	0
  1317   001238  2235               	addwfc	(dtoa@n+1)^0,f,c
  1318   00123A  2236               	addwfc	(dtoa@n+2)^0,f,c
  1319   00123C  2237               	addwfc	(dtoa@n+3)^0,f,c
  1320   00123E  2238               	addwfc	(dtoa@n+4)^0,f,c
  1321   001240  2239               	addwfc	(dtoa@n+5)^0,f,c
  1322   001242  223A               	addwfc	(dtoa@n+6)^0,f,c
  1323   001244  223B               	addwfc	(dtoa@n+7)^0,f,c
  1324   001246                     l1741:
  1325                           
  1326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1327   001246  BE5B               	btfsc	(_prec+1)^0,7,c
  1328   001248  EF30  F009         	goto	u1320
  1329   00124C  505B               	movf	(_prec+1)^0,w,c
  1330   00124E  E106               	bnz	u1321
  1331   001250  045A               	decf	_prec^0,w,c
  1332   001252  B0D8               	btfsc	status,0,c
  1333   001254  EF2E  F009         	goto	u1321
  1334   001258  EF30  F009         	goto	u1320
  1335   00125C                     u1321:
  1336   00125C  EF36  F009         	goto	l964
  1337   001260                     u1320:
  1338   001260  0E00               	movlw	0
  1339   001262  6E31               	movwf	(dtoa@p+1)^0,c
  1340   001264  0E01               	movlw	1
  1341   001266  6E30               	movwf	dtoa@p^0,c
  1342   001268  EF3A  F009         	goto	l966
  1343   00126C                     l964:
  1344   00126C  C05A  F030         	movff	_prec,dtoa@p
  1345   001270  C05B  F031         	movff	_prec+1,dtoa@p+1
  1346   001274                     l966:
  1347                           
  1348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1349   001274  C0CE  F032         	movff	_width,dtoa@w
  1350   001278  C0CF  F033         	movff	_width+1,dtoa@w+1
  1351   00127C                     
  1352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1353   00127C  503E               	movf	dtoa@s^0,w,c
  1354   00127E  B4D8               	btfsc	status,2,c
  1355   001280  EF44  F009         	goto	u1331
  1356   001284  EF46  F009         	goto	u1330
  1357   001288                     u1331:
  1358   001288  EF5D  F009         	goto	l967
  1359   00128C                     u1330:
  1360   00128C                     
  1361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1362   00128C  0632               	decf	dtoa@w^0,f,c
  1363   00128E  A0D8               	btfss	status,0,c
  1364   001290  0633               	decf	(dtoa@w+1)^0,f,c
  1365   001292                     
  1366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1367   001292  503E               	movf	dtoa@s^0,w,c
  1368   001294  A4D8               	btfss	status,2,c
  1369   001296  EF4F  F009         	goto	u1341
  1370   00129A  EF51  F009         	goto	u1340
  1371   00129E                     u1341:
  1372   00129E  EF57  F009         	goto	l1753
  1373   0012A2                     u1340:
  1374   0012A2  0E00               	movlw	0
  1375   0012A4  6E2F               	movwf	(_dtoa$1865+1)^0,c
  1376   0012A6  0E2B               	movlw	43
  1377   0012A8  6E2E               	movwf	_dtoa$1865^0,c
  1378   0012AA  EF5B  F009         	goto	l1755
  1379   0012AE                     l1753:
  1380   0012AE  0E00               	movlw	0
  1381   0012B0  6E2F               	movwf	(_dtoa$1865+1)^0,c
  1382   0012B2  0E2D               	movlw	45
  1383   0012B4  6E2E               	movwf	_dtoa$1865^0,c
  1384   0012B6                     l1755:
  1385   0012B6  C02E  F03E         	movff	_dtoa$1865,dtoa@s
  1386   0012BA                     l967:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1389   0012BA  0E00               	movlw	0
  1390   0012BC  6E3D               	movwf	(dtoa@i+1)^0,c
  1391   0012BE  0E1F               	movlw	31
  1392   0012C0  6E3C               	movwf	dtoa@i^0,c
  1393   0012C2                     
  1394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1395   0012C2  0E00               	movlw	0
  1396   0012C4  0100               	movlb	0	; () banked
  1397   0012C6  6FF1               	movwf	(_dbuf+31)& (0+255),b
  1398                           
  1399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1400   0012C8  EFE2  F009         	goto	l1769
  1401   0012CC                     l1759:
  1402                           
  1403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1404   0012CC  063C               	decf	dtoa@i^0,f,c
  1405   0012CE  A0D8               	btfss	status,0,c
  1406   0012D0  063D               	decf	(dtoa@i+1)^0,f,c
  1407   0012D2                     
  1408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1409   0012D2  0ED2               	movlw	low _dbuf
  1410   0012D4  243C               	addwf	dtoa@i^0,w,c
  1411   0012D6  6ED9               	movwf	fsr2l,c
  1412   0012D8  0E00               	movlw	high _dbuf
  1413   0012DA  203D               	addwfc	(dtoa@i+1)^0,w,c
  1414   0012DC  6EDA               	movwf	fsr2h,c
  1415   0012DE  C034  F001         	movff	dtoa@n,___aomod@dividend
  1416   0012E2  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1417   0012E6  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1418   0012EA  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1419   0012EE  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1420   0012F2  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1421   0012F6  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1422   0012FA  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1423   0012FE  0E0A               	movlw	10
  1424   001300  6E09               	movwf	___aomod@divisor^0,c
  1425   001302  0E00               	movlw	0
  1426   001304  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1427   001306  0E00               	movlw	0
  1428   001308  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1429   00130A  0E00               	movlw	0
  1430   00130C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1431   00130E  0E00               	movlw	0
  1432   001310  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1433   001312  0E00               	movlw	0
  1434   001314  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1435   001316  0E00               	movlw	0
  1436   001318  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1437   00131A  0E00               	movlw	0
  1438   00131C  6E10               	movwf	(___aomod@divisor+7)^0,c
  1439   00131E  ECF3  F00A         	call	___aomod	;wreg free
  1440   001322  C001  F026         	movff	?___aomod,??_dtoa
  1441   001326  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1442   00132A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1443   00132E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1444   001332  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1445   001336  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1446   00133A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1447   00133E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1448   001342  C026  F013         	movff	??_dtoa,abs@a
  1449   001346  C027  F014         	movff	??_dtoa+1,abs@a+1
  1450   00134A  EC1E  F010         	call	_abs	;wreg free
  1451   00134E  5013               	movf	?_abs^0,w,c
  1452   001350  0F30               	addlw	48
  1453   001352  6EDF               	movwf	indf2,c
  1454   001354                     
  1455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1456   001354  0630               	decf	dtoa@p^0,f,c
  1457   001356  A0D8               	btfss	status,0,c
  1458   001358  0631               	decf	(dtoa@p+1)^0,f,c
  1459   00135A                     
  1460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1461   00135A  0632               	decf	dtoa@w^0,f,c
  1462   00135C  A0D8               	btfss	status,0,c
  1463   00135E  0633               	decf	(dtoa@w+1)^0,f,c
  1464   001360                     
  1465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1466   001360  C034  F001         	movff	dtoa@n,___aodiv@dividend
  1467   001364  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1468   001368  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1469   00136C  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1470   001370  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1471   001374  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1472   001378  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1473   00137C  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1474   001380  0E0A               	movlw	10
  1475   001382  6E09               	movwf	___aodiv@divisor^0,c
  1476   001384  0E00               	movlw	0
  1477   001386  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1478   001388  0E00               	movlw	0
  1479   00138A  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1480   00138C  0E00               	movlw	0
  1481   00138E  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1482   001390  0E00               	movlw	0
  1483   001392  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1484   001394  0E00               	movlw	0
  1485   001396  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1486   001398  0E00               	movlw	0
  1487   00139A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1488   00139C  0E00               	movlw	0
  1489   00139E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1490   0013A0  EC2F  F00A         	call	___aodiv	;wreg free
  1491   0013A4  C001  F034         	movff	?___aodiv,dtoa@n
  1492   0013A8  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  1493   0013AC  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  1494   0013B0  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  1495   0013B4  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  1496   0013B8  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  1497   0013BC  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  1498   0013C0  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  1499   0013C4                     l1769:
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1502   0013C4  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  1503   0013C6  EFED  F009         	goto	u1351
  1504   0013CA  503D               	movf	(dtoa@i+1)^0,w,c
  1505   0013CC  E108               	bnz	u1350
  1506   0013CE  043C               	decf	dtoa@i^0,w,c
  1507   0013D0  A0D8               	btfss	status,0,c
  1508   0013D2  EFED  F009         	goto	u1351
  1509   0013D6  EFEF  F009         	goto	u1350
  1510   0013DA                     u1351:
  1511   0013DA  EF0B  F00A         	goto	l1775
  1512   0013DE                     u1350:
  1513   0013DE  5034               	movf	dtoa@n^0,w,c
  1514   0013E0  1035               	iorwf	(dtoa@n+1)^0,w,c
  1515   0013E2  1036               	iorwf	(dtoa@n+2)^0,w,c
  1516   0013E4  1037               	iorwf	(dtoa@n+3)^0,w,c
  1517   0013E6  1038               	iorwf	(dtoa@n+4)^0,w,c
  1518   0013E8  1039               	iorwf	(dtoa@n+5)^0,w,c
  1519   0013EA  103A               	iorwf	(dtoa@n+6)^0,w,c
  1520   0013EC  103B               	iorwf	(dtoa@n+7)^0,w,c
  1521   0013EE  A4D8               	btfss	status,2,c
  1522   0013F0  EFFC  F009         	goto	u1361
  1523   0013F4  EFFE  F009         	goto	u1360
  1524   0013F8                     u1361:
  1525   0013F8  EF66  F009         	goto	l1759
  1526   0013FC                     u1360:
  1527   0013FC  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1528   0013FE  EF0B  F00A         	goto	u1370
  1529   001402  5031               	movf	(dtoa@p+1)^0,w,c
  1530   001404  E106               	bnz	u1371
  1531   001406  0430               	decf	dtoa@p^0,w,c
  1532   001408  B0D8               	btfsc	status,0,c
  1533   00140A  EF09  F00A         	goto	u1371
  1534   00140E  EF0B  F00A         	goto	u1370
  1535   001412                     u1371:
  1536   001412  EF66  F009         	goto	l1759
  1537   001416                     u1370:
  1538   001416                     l1775:
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1541   001416  503E               	movf	dtoa@s^0,w,c
  1542   001418  B4D8               	btfsc	status,2,c
  1543   00141A  EF11  F00A         	goto	u1381
  1544   00141E  EF13  F00A         	goto	u1380
  1545   001422                     u1381:
  1546   001422  EF1E  F00A         	goto	l1781
  1547   001426                     u1380:
  1548   001426                     
  1549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1550   001426  063C               	decf	dtoa@i^0,f,c
  1551   001428  A0D8               	btfss	status,0,c
  1552   00142A  063D               	decf	(dtoa@i+1)^0,f,c
  1553   00142C                     
  1554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1555   00142C  0ED2               	movlw	low _dbuf
  1556   00142E  243C               	addwf	dtoa@i^0,w,c
  1557   001430  6ED9               	movwf	fsr2l,c
  1558   001432  0E00               	movlw	high _dbuf
  1559   001434  203D               	addwfc	(dtoa@i+1)^0,w,c
  1560   001436  6EDA               	movwf	fsr2h,c
  1561   001438  C03E  FFDF         	movff	dtoa@s,indf2
  1562   00143C                     l1781:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1565   00143C  C01C  F011         	movff	dtoa@fp,pad@fp
  1566   001440  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1567   001444  0ED2               	movlw	low _dbuf
  1568   001446  243C               	addwf	dtoa@i^0,w,c
  1569   001448  6E13               	movwf	pad@buf^0,c
  1570   00144A  0E00               	movlw	high _dbuf
  1571   00144C  203D               	addwfc	(dtoa@i+1)^0,w,c
  1572   00144E  6E14               	movwf	(pad@buf+1)^0,c
  1573   001450  C032  F015         	movff	dtoa@w,pad@p
  1574   001454  C033  F016         	movff	dtoa@w+1,pad@p+1
  1575   001458  EC4D  F00F         	call	_pad	;wreg free
  1576   00145C  0012               	return		;funcret
  1577   00145E                     __end_of_dtoa:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _pad *****************
  1581 ;; Defined at:
  1582 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1585 ;;		 -> sprintf@f(11), 
  1586 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1587 ;;		 -> dbuf(32), 
  1588 ;;  p               2   20[COMRAM] int 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  w               2   25[COMRAM] int 
  1591 ;;  i               2   23[COMRAM] int 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1601 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1602 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;Total ram usage:       11 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 4
  1608 ;; This function calls:
  1609 ;;		_fputc
  1610 ;;		_fputs
  1611 ;; This function is called by:
  1612 ;;		_dtoa
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text5
  1617   001E9A                     __ptext5:
  1618                           	callstack 0
  1619   001E9A                     _pad:
  1620                           	callstack 22
  1621   001E9A                     
  1622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1623   001E9A  BE16               	btfsc	(pad@p+1)^0,7,c
  1624   001E9C  EF52  F00F         	goto	u1261
  1625   001EA0  EF54  F00F         	goto	u1260
  1626   001EA4                     u1261:
  1627   001EA4  EF5A  F00F         	goto	l1713
  1628   001EA8                     u1260:
  1629   001EA8  C015  F01A         	movff	pad@p,pad@w
  1630   001EAC  C016  F01B         	movff	pad@p+1,pad@w+1
  1631   001EB0  EF5E  F00F         	goto	l955
  1632   001EB4                     l1713:
  1633   001EB4  0E00               	movlw	0
  1634   001EB6  6E1B               	movwf	(pad@w+1)^0,c
  1635   001EB8  0E00               	movlw	0
  1636   001EBA  6E1A               	movwf	pad@w^0,c
  1637   001EBC                     l955:
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1640   001EBC  0E00               	movlw	0
  1641   001EBE  6E19               	movwf	(pad@i+1)^0,c
  1642   001EC0  0E00               	movlw	0
  1643   001EC2  6E18               	movwf	pad@i^0,c
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1646   001EC4  EF70  F00F         	goto	l1719
  1647   001EC8                     l1715:
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1650   001EC8  0E00               	movlw	0
  1651   001ECA  6E02               	movwf	(fputc@c+1)^0,c
  1652   001ECC  0E20               	movlw	32
  1653   001ECE  6E01               	movwf	fputc@c^0,c
  1654   001ED0  C011  F003         	movff	pad@fp,fputc@fp
  1655   001ED4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1656   001ED8  EC8C  F00D         	call	_fputc	;wreg free
  1657   001EDC                     
  1658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1659   001EDC  4A18               	infsnz	pad@i^0,f,c
  1660   001EDE  2A19               	incf	(pad@i+1)^0,f,c
  1661   001EE0                     l1719:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1664   001EE0  501A               	movf	pad@w^0,w,c
  1665   001EE2  5C18               	subwf	pad@i^0,w,c
  1666   001EE4  5019               	movf	(pad@i+1)^0,w,c
  1667   001EE6  0A80               	xorlw	128
  1668   001EE8  6E17               	movwf	??_pad^0,c
  1669   001EEA  501B               	movf	(pad@w+1)^0,w,c
  1670   001EEC  0A80               	xorlw	128
  1671   001EEE  5817               	subwfb	??_pad^0,w,c
  1672   001EF0  A0D8               	btfss	status,0,c
  1673   001EF2  EF7D  F00F         	goto	u1271
  1674   001EF6  EF7F  F00F         	goto	u1270
  1675   001EFA                     u1271:
  1676   001EFA  EF64  F00F         	goto	l1715
  1677   001EFE                     u1270:
  1678   001EFE                     
  1679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1680   001EFE  C013  F00A         	movff	pad@buf,fputs@s
  1681   001F02  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1682   001F06  C011  F00C         	movff	pad@fp,fputs@fp
  1683   001F0A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1684   001F0E  ECDA  F00F         	call	_fputs	;wreg free
  1685   001F12  0012               	return		;funcret
  1686   001F14                     __end_of_pad:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _fputs *****************
  1690 ;; Defined at:
  1691 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1694 ;;		 -> dbuf(32), 
  1695 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1696 ;;		 -> sprintf@f(11), 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  i               2   14[COMRAM] int 
  1699 ;;  c               1   13[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  2    9[COMRAM] int 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1709 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1710 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;Total ram usage:        7 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 3
  1716 ;; This function calls:
  1717 ;;		_fputc
  1718 ;; This function is called by:
  1719 ;;		_pad
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text6
  1724   001FB4                     __ptext6:
  1725                           	callstack 0
  1726   001FB4                     _fputs:
  1727                           	callstack 22
  1728   001FB4  0E00               	movlw	0
  1729   001FB6  6E10               	movwf	(fputs@i+1)^0,c
  1730   001FB8  0E00               	movlw	0
  1731   001FBA  6E0F               	movwf	fputs@i^0,c
  1732   001FBC  EFEB  F00F         	goto	l1627
  1733   001FC0                     l1623:
  1734   001FC0  C00E  F001         	movff	fputs@c,fputc@c
  1735   001FC4  6A02               	clrf	(fputc@c+1)^0,c
  1736   001FC6  C00C  F003         	movff	fputs@fp,fputc@fp
  1737   001FCA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1738   001FCE  EC8C  F00D         	call	_fputc	;wreg free
  1739   001FD2  4A0F               	infsnz	fputs@i^0,f,c
  1740   001FD4  2A10               	incf	(fputs@i+1)^0,f,c
  1741   001FD6                     l1627:
  1742   001FD6  500F               	movf	fputs@i^0,w,c
  1743   001FD8  240A               	addwf	fputs@s^0,w,c
  1744   001FDA  6ED9               	movwf	fsr2l,c
  1745   001FDC  5010               	movf	(fputs@i+1)^0,w,c
  1746   001FDE  200B               	addwfc	(fputs@s+1)^0,w,c
  1747   001FE0  6EDA               	movwf	fsr2h,c
  1748   001FE2  50DF               	movf	indf2,w,c
  1749   001FE4  6E0E               	movwf	fputs@c^0,c
  1750   001FE6  500E               	movf	fputs@c^0,w,c
  1751   001FE8  A4D8               	btfss	status,2,c
  1752   001FEA  EFF9  F00F         	goto	u1121
  1753   001FEE  EFFB  F00F         	goto	u1120
  1754   001FF2                     u1121:
  1755   001FF2  EFE0  F00F         	goto	l1623
  1756   001FF6                     u1120:
  1757   001FF6  0012               	return		;funcret
  1758   001FF8                     __end_of_fputs:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _fputc *****************
  1762 ;; Defined at:
  1763 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  c               2    0[COMRAM] int 
  1766 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1767 ;;		 -> sprintf@f(11), 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  2    0[COMRAM] int 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;Total ram usage:        9 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 2
  1786 ;; This function calls:
  1787 ;;		_putch
  1788 ;; This function is called by:
  1789 ;;		_pad
  1790 ;;		_vfpfcnvrt
  1791 ;;		_fputs
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text7
  1796   001B18                     __ptext7:
  1797                           	callstack 0
  1798   001B18                     _fputc:
  1799                           	callstack 25
  1800   001B18  5003               	movf	fputc@fp^0,w,c
  1801   001B1A  1004               	iorwf	(fputc@fp+1)^0,w,c
  1802   001B1C  B4D8               	btfsc	status,2,c
  1803   001B1E  EF93  F00D         	goto	u1081
  1804   001B22  EF95  F00D         	goto	u1080
  1805   001B26                     u1081:
  1806   001B26  EF9E  F00D         	goto	l1611
  1807   001B2A                     u1080:
  1808   001B2A  5003               	movf	fputc@fp^0,w,c
  1809   001B2C  1004               	iorwf	(fputc@fp+1)^0,w,c
  1810   001B2E  A4D8               	btfss	status,2,c
  1811   001B30  EF9C  F00D         	goto	u1091
  1812   001B34  EF9E  F00D         	goto	u1090
  1813   001B38                     u1091:
  1814   001B38  EFA3  F00D         	goto	l1613
  1815   001B3C                     u1090:
  1816   001B3C                     l1611:
  1817   001B3C  5001               	movf	fputc@c^0,w,c
  1818   001B3E  ECE8  F010         	call	_putch
  1819   001B42  EFF0  F00D         	goto	l1010
  1820   001B46                     l1613:
  1821   001B46  EE20 F009          	lfsr	2,9
  1822   001B4A  5003               	movf	fputc@fp^0,w,c
  1823   001B4C  26D9               	addwf	fsr2l,f,c
  1824   001B4E  5004               	movf	(fputc@fp+1)^0,w,c
  1825   001B50  22DA               	addwfc	fsr2h,f,c
  1826   001B52  50DE               	movf	postinc2,w,c
  1827   001B54  10DE               	iorwf	postinc2,w,c
  1828   001B56  B4D8               	btfsc	status,2,c
  1829   001B58  EFB0  F00D         	goto	u1101
  1830   001B5C  EFB2  F00D         	goto	u1100
  1831   001B60                     u1101:
  1832   001B60  EFCD  F00D         	goto	l1617
  1833   001B64                     u1100:
  1834   001B64  EE20 F009          	lfsr	2,9
  1835   001B68  5003               	movf	fputc@fp^0,w,c
  1836   001B6A  26D9               	addwf	fsr2l,f,c
  1837   001B6C  5004               	movf	(fputc@fp+1)^0,w,c
  1838   001B6E  22DA               	addwfc	fsr2h,f,c
  1839   001B70  EE10 F003          	lfsr	1,3
  1840   001B74  5003               	movf	fputc@fp^0,w,c
  1841   001B76  26E1               	addwf	fsr1l,f,c
  1842   001B78  5004               	movf	(fputc@fp+1)^0,w,c
  1843   001B7A  22E2               	addwfc	fsr1h,f,c
  1844   001B7C  50DE               	movf	postinc2,w,c
  1845   001B7E  5CE6               	subwf	postinc1,w,c
  1846   001B80  50E6               	movf	postinc1,w,c
  1847   001B82  0A80               	xorlw	128
  1848   001B84  6E09               	movwf	(??_fputc+4)^0,c
  1849   001B86  50DE               	movf	postinc2,w,c
  1850   001B88  0A80               	xorlw	128
  1851   001B8A  5809               	subwfb	(??_fputc+4)^0,w,c
  1852   001B8C  B0D8               	btfsc	status,0,c
  1853   001B8E  EFCB  F00D         	goto	u1111
  1854   001B92  EFCD  F00D         	goto	u1110
  1855   001B96                     u1111:
  1856   001B96  EFF0  F00D         	goto	l1010
  1857   001B9A                     u1110:
  1858   001B9A                     l1617:
  1859   001B9A  EE20 F003          	lfsr	2,3
  1860   001B9E  5003               	movf	fputc@fp^0,w,c
  1861   001BA0  26D9               	addwf	fsr2l,f,c
  1862   001BA2  5004               	movf	(fputc@fp+1)^0,w,c
  1863   001BA4  22DA               	addwfc	fsr2h,f,c
  1864   001BA6  CFDE F005          	movff	postinc2,??_fputc
  1865   001BAA  CFDD F006          	movff	postdec2,??_fputc+1
  1866   001BAE  C003  FFD9         	movff	fputc@fp,fsr2l
  1867   001BB2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1868   001BB6  CFDE F007          	movff	postinc2,??_fputc+2
  1869   001BBA  CFDD F008          	movff	postdec2,??_fputc+3
  1870   001BBE  5005               	movf	??_fputc^0,w,c
  1871   001BC0  2407               	addwf	(??_fputc+2)^0,w,c
  1872   001BC2  6ED9               	movwf	fsr2l,c
  1873   001BC4  5006               	movf	(??_fputc+1)^0,w,c
  1874   001BC6  2008               	addwfc	(??_fputc+3)^0,w,c
  1875   001BC8  6EDA               	movwf	fsr2h,c
  1876   001BCA  C001  FFDF         	movff	fputc@c,indf2
  1877   001BCE  EE20 F003          	lfsr	2,3
  1878   001BD2  5003               	movf	fputc@fp^0,w,c
  1879   001BD4  26D9               	addwf	fsr2l,f,c
  1880   001BD6  5004               	movf	(fputc@fp+1)^0,w,c
  1881   001BD8  22DA               	addwfc	fsr2h,f,c
  1882   001BDA  2ADE               	incf	postinc2,f,c
  1883   001BDC  0E00               	movlw	0
  1884   001BDE  22DD               	addwfc	postdec2,f,c
  1885   001BE0                     l1010:
  1886   001BE0  0012               	return		;funcret
  1887   001BE2                     __end_of_fputc:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _putch *****************
  1891 ;; Defined at:
  1892 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  c               1    wreg     unsigned char 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  c               1    0[COMRAM] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_fputc
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text8
  1921   0021D0                     __ptext8:
  1922                           	callstack 0
  1923   0021D0                     _putch:
  1924                           	callstack 25
  1925   0021D0  0012               	return		;funcret
  1926   0021D2                     __end_of_putch:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _abs *****************
  1930 ;; Defined at:
  1931 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  a               2   18[COMRAM] int 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  2   18[COMRAM] int 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;Total ram usage:        4 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_dtoa
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text9
  1960   00203C                     __ptext9:
  1961                           	callstack 0
  1962   00203C                     _abs:
  1963                           	callstack 25
  1964   00203C  BE14               	btfsc	(abs@a+1)^0,7,c
  1965   00203E  EF2B  F010         	goto	u1280
  1966   002042  5014               	movf	(abs@a+1)^0,w,c
  1967   002044  E106               	bnz	u1281
  1968   002046  0413               	decf	abs@a^0,w,c
  1969   002048  B0D8               	btfsc	status,0,c
  1970   00204A  EF29  F010         	goto	u1281
  1971   00204E  EF2B  F010         	goto	u1280
  1972   002052                     u1281:
  1973   002052  EF39  F010         	goto	l995
  1974   002056                     u1280:
  1975   002056  C013  F015         	movff	abs@a,??_abs
  1976   00205A  C014  F016         	movff	abs@a+1,??_abs+1
  1977   00205E  1E15               	comf	??_abs^0,f,c
  1978   002060  1E16               	comf	(??_abs+1)^0,f,c
  1979   002062  4A15               	infsnz	??_abs^0,f,c
  1980   002064  2A16               	incf	(??_abs+1)^0,f,c
  1981   002066  C015  F013         	movff	??_abs,?_abs
  1982   00206A  C016  F014         	movff	??_abs+1,?_abs+1
  1983   00206E  EF3D  F010         	goto	l998
  1984   002072                     l995:
  1985   002072  C013  F013         	movff	abs@a,?_abs
  1986   002076  C014  F014         	movff	abs@a+1,?_abs+1
  1987   00207A                     l998:
  1988   00207A  0012               	return		;funcret
  1989   00207C                     __end_of_abs:
  1990                           	callstack 0
  1991                           
  1992 ;; *************** function ___aomod *****************
  1993 ;; Defined at:
  1994 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  dividend        8    0[COMRAM] long long 
  1997 ;;  divisor         8    8[COMRAM] long long 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  sign            1   17[COMRAM] unsigned char 
  2000 ;;  counter         1   16[COMRAM] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  8    0[COMRAM] long long 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2010 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;Total ram usage:       18 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; Hardware stack levels required when called: 1
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_dtoa
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text10
  2025   0015E6                     __ptext10:
  2026                           	callstack 0
  2027   0015E6                     ___aomod:
  2028                           	callstack 25
  2029   0015E6  0E00               	movlw	0
  2030   0015E8  6E12               	movwf	___aomod@sign^0,c
  2031   0015EA  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2032   0015EC  EFFC  F00A         	goto	u1200
  2033   0015F0  EFFA  F00A         	goto	u1201
  2034   0015F4                     u1201:
  2035   0015F4  EF0E  F00B         	goto	l1681
  2036   0015F8                     u1200:
  2037   0015F8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2038   0015FA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2039   0015FC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2040   0015FE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2041   001600  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2042   001602  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2043   001604  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2044   001606  6C01               	negf	___aomod@dividend^0,c
  2045   001608  0E00               	movlw	0
  2046   00160A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2047   00160C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2048   00160E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2049   001610  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2050   001612  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2051   001614  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2052   001616  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2053   001618  0E01               	movlw	1
  2054   00161A  6E12               	movwf	___aomod@sign^0,c
  2055   00161C                     l1681:
  2056   00161C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2057   00161E  EF15  F00B         	goto	u1210
  2058   001622  EF13  F00B         	goto	u1211
  2059   001626                     u1211:
  2060   001626  EF25  F00B         	goto	l1685
  2061   00162A                     u1210:
  2062   00162A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2063   00162C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2064   00162E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2065   001630  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2066   001632  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2067   001634  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2068   001636  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2069   001638  6C09               	negf	___aomod@divisor^0,c
  2070   00163A  0E00               	movlw	0
  2071   00163C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2072   00163E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2073   001640  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2074   001642  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2075   001644  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2076   001646  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2077   001648  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2078   00164A                     l1685:
  2079   00164A  5009               	movf	___aomod@divisor^0,w,c
  2080   00164C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2081   00164E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2082   001650  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2083   001652  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2084   001654  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2085   001656  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2086   001658  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2087   00165A  B4D8               	btfsc	status,2,c
  2088   00165C  EF32  F00B         	goto	u1221
  2089   001660  EF34  F00B         	goto	u1220
  2090   001664                     u1221:
  2091   001664  EF7C  F00B         	goto	l1701
  2092   001668                     u1220:
  2093   001668  0E01               	movlw	1
  2094   00166A  6E11               	movwf	___aomod@counter^0,c
  2095   00166C  EF42  F00B         	goto	l1691
  2096   001670                     l1689:
  2097   001670  90D8               	bcf	status,0,c
  2098   001672  3609               	rlcf	___aomod@divisor^0,f,c
  2099   001674  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2100   001676  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2101   001678  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2102   00167A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2103   00167C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2104   00167E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2105   001680  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2106   001682  2A11               	incf	___aomod@counter^0,f,c
  2107   001684                     l1691:
  2108   001684  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2109   001686  EF47  F00B         	goto	u1231
  2110   00168A  EF49  F00B         	goto	u1230
  2111   00168E                     u1231:
  2112   00168E  EF38  F00B         	goto	l1689
  2113   001692                     u1230:
  2114   001692                     l1693:
  2115   001692  5009               	movf	___aomod@divisor^0,w,c
  2116   001694  5C01               	subwf	___aomod@dividend^0,w,c
  2117   001696  500A               	movf	(___aomod@divisor+1)^0,w,c
  2118   001698  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2119   00169A  500B               	movf	(___aomod@divisor+2)^0,w,c
  2120   00169C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2121   00169E  500C               	movf	(___aomod@divisor+3)^0,w,c
  2122   0016A0  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2123   0016A2  500D               	movf	(___aomod@divisor+4)^0,w,c
  2124   0016A4  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2125   0016A6  500E               	movf	(___aomod@divisor+5)^0,w,c
  2126   0016A8  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2127   0016AA  500F               	movf	(___aomod@divisor+6)^0,w,c
  2128   0016AC  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2129   0016AE  5010               	movf	(___aomod@divisor+7)^0,w,c
  2130   0016B0  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2131   0016B2  A0D8               	btfss	status,0,c
  2132   0016B4  EF5E  F00B         	goto	u1241
  2133   0016B8  EF60  F00B         	goto	u1240
  2134   0016BC                     u1241:
  2135   0016BC  EF70  F00B         	goto	l1697
  2136   0016C0                     u1240:
  2137   0016C0  5009               	movf	___aomod@divisor^0,w,c
  2138   0016C2  5E01               	subwf	___aomod@dividend^0,f,c
  2139   0016C4  500A               	movf	(___aomod@divisor+1)^0,w,c
  2140   0016C6  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2141   0016C8  500B               	movf	(___aomod@divisor+2)^0,w,c
  2142   0016CA  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2143   0016CC  500C               	movf	(___aomod@divisor+3)^0,w,c
  2144   0016CE  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2145   0016D0  500D               	movf	(___aomod@divisor+4)^0,w,c
  2146   0016D2  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2147   0016D4  500E               	movf	(___aomod@divisor+5)^0,w,c
  2148   0016D6  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2149   0016D8  500F               	movf	(___aomod@divisor+6)^0,w,c
  2150   0016DA  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2151   0016DC  5010               	movf	(___aomod@divisor+7)^0,w,c
  2152   0016DE  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2153   0016E0                     l1697:
  2154   0016E0  90D8               	bcf	status,0,c
  2155   0016E2  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2156   0016E4  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2157   0016E6  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2158   0016E8  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2159   0016EA  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2160   0016EC  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2161   0016EE  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2162   0016F0  3209               	rrcf	___aomod@divisor^0,f,c
  2163   0016F2  2E11               	decfsz	___aomod@counter^0,f,c
  2164   0016F4  EF49  F00B         	goto	l1693
  2165   0016F8                     l1701:
  2166   0016F8  5012               	movf	___aomod@sign^0,w,c
  2167   0016FA  B4D8               	btfsc	status,2,c
  2168   0016FC  EF82  F00B         	goto	u1251
  2169   001700  EF84  F00B         	goto	u1250
  2170   001704                     u1251:
  2171   001704  EF94  F00B         	goto	l1705
  2172   001708                     u1250:
  2173   001708  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2174   00170A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2175   00170C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2176   00170E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2177   001710  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2178   001712  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2179   001714  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2180   001716  6C01               	negf	___aomod@dividend^0,c
  2181   001718  0E00               	movlw	0
  2182   00171A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2183   00171C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2184   00171E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2185   001720  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2186   001722  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2187   001724  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2188   001726  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2189   001728                     l1705:
  2190   001728  C001  F001         	movff	___aomod@dividend,?___aomod
  2191   00172C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2192   001730  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2193   001734  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2194   001738  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2195   00173C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2196   001740  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2197   001744  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2198   001748  0012               	return		;funcret
  2199   00174A                     __end_of___aomod:
  2200                           	callstack 0
  2201                           
  2202 ;; *************** function ___aodiv *****************
  2203 ;; Defined at:
  2204 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  dividend        8    0[COMRAM] long long 
  2207 ;;  divisor         8    8[COMRAM] long long 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  quotient        8   18[COMRAM] long long 
  2210 ;;  sign            1   17[COMRAM] unsigned char 
  2211 ;;  counter         1   16[COMRAM] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  8    0[COMRAM] long long 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2221 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2224 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2225 ;;Total ram usage:       26 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_dtoa
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text11
  2236   00145E                     __ptext11:
  2237                           	callstack 0
  2238   00145E                     ___aodiv:
  2239                           	callstack 25
  2240   00145E  0E00               	movlw	0
  2241   001460  6E12               	movwf	___aodiv@sign^0,c
  2242   001462  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2243   001464  EF38  F00A         	goto	u1130
  2244   001468  EF36  F00A         	goto	u1131
  2245   00146C                     u1131:
  2246   00146C  EF4A  F00A         	goto	l1637
  2247   001470                     u1130:
  2248   001470  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2249   001472  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2250   001474  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2251   001476  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2252   001478  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2253   00147A  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2254   00147C  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2255   00147E  6C09               	negf	___aodiv@divisor^0,c
  2256   001480  0E00               	movlw	0
  2257   001482  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2258   001484  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2259   001486  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2260   001488  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2261   00148A  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2262   00148C  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2263   00148E  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2264   001490  0E01               	movlw	1
  2265   001492  6E12               	movwf	___aodiv@sign^0,c
  2266   001494                     l1637:
  2267   001494  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2268   001496  EF51  F00A         	goto	u1140
  2269   00149A  EF4F  F00A         	goto	u1141
  2270   00149E                     u1141:
  2271   00149E  EF63  F00A         	goto	l1643
  2272   0014A2                     u1140:
  2273   0014A2  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2274   0014A4  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2275   0014A6  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2276   0014A8  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2277   0014AA  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2278   0014AC  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2279   0014AE  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2280   0014B0  6C01               	negf	___aodiv@dividend^0,c
  2281   0014B2  0E00               	movlw	0
  2282   0014B4  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2283   0014B6  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2284   0014B8  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2285   0014BA  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2286   0014BC  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2287   0014BE  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2288   0014C0  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2289   0014C2  0E01               	movlw	1
  2290   0014C4  1A12               	xorwf	___aodiv@sign^0,f,c
  2291   0014C6                     l1643:
  2292   0014C6  EE20  F013         	lfsr	2,___aodiv@quotient
  2293   0014CA  0E07               	movlw	7
  2294   0014CC                     u1151:
  2295   0014CC  6ADE               	clrf	postinc2,c
  2296   0014CE  06E8               	decf	wreg,f,c
  2297   0014D0  E2FD               	bc	u1151
  2298   0014D2  5009               	movf	___aodiv@divisor^0,w,c
  2299   0014D4  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2300   0014D6  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2301   0014D8  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2302   0014DA  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2303   0014DC  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2304   0014DE  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2305   0014E0  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2306   0014E2  B4D8               	btfsc	status,2,c
  2307   0014E4  EF76  F00A         	goto	u1161
  2308   0014E8  EF78  F00A         	goto	u1160
  2309   0014EC                     u1161:
  2310   0014EC  EFCA  F00A         	goto	l1665
  2311   0014F0                     u1160:
  2312   0014F0  0E01               	movlw	1
  2313   0014F2  6E11               	movwf	___aodiv@counter^0,c
  2314   0014F4  EF86  F00A         	goto	l1651
  2315   0014F8                     l1649:
  2316   0014F8  90D8               	bcf	status,0,c
  2317   0014FA  3609               	rlcf	___aodiv@divisor^0,f,c
  2318   0014FC  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2319   0014FE  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2320   001500  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2321   001502  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2322   001504  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2323   001506  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2324   001508  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2325   00150A  2A11               	incf	___aodiv@counter^0,f,c
  2326   00150C                     l1651:
  2327   00150C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2328   00150E  EF8B  F00A         	goto	u1171
  2329   001512  EF8D  F00A         	goto	u1170
  2330   001516                     u1171:
  2331   001516  EF7C  F00A         	goto	l1649
  2332   00151A                     u1170:
  2333   00151A                     l1653:
  2334   00151A  90D8               	bcf	status,0,c
  2335   00151C  3613               	rlcf	___aodiv@quotient^0,f,c
  2336   00151E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2337   001520  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2338   001522  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2339   001524  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2340   001526  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2341   001528  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2342   00152A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2343   00152C  5009               	movf	___aodiv@divisor^0,w,c
  2344   00152E  5C01               	subwf	___aodiv@dividend^0,w,c
  2345   001530  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2346   001532  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2347   001534  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2348   001536  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2349   001538  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2350   00153A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2351   00153C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2352   00153E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2353   001540  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2354   001542  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2355   001544  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2356   001546  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2357   001548  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2358   00154A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2359   00154C  A0D8               	btfss	status,0,c
  2360   00154E  EFAB  F00A         	goto	u1181
  2361   001552  EFAD  F00A         	goto	u1180
  2362   001556                     u1181:
  2363   001556  EFBE  F00A         	goto	l1661
  2364   00155A                     u1180:
  2365   00155A  5009               	movf	___aodiv@divisor^0,w,c
  2366   00155C  5E01               	subwf	___aodiv@dividend^0,f,c
  2367   00155E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2368   001560  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2369   001562  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2370   001564  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2371   001566  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2372   001568  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2373   00156A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2374   00156C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2375   00156E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2376   001570  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2377   001572  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2378   001574  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2379   001576  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2380   001578  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2381   00157A  8013               	bsf	___aodiv@quotient^0,0,c
  2382   00157C                     l1661:
  2383   00157C  90D8               	bcf	status,0,c
  2384   00157E  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2385   001580  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2386   001582  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2387   001584  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2388   001586  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2389   001588  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2390   00158A  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2391   00158C  3209               	rrcf	___aodiv@divisor^0,f,c
  2392   00158E  2E11               	decfsz	___aodiv@counter^0,f,c
  2393   001590  EF8D  F00A         	goto	l1653
  2394   001594                     l1665:
  2395   001594  5012               	movf	___aodiv@sign^0,w,c
  2396   001596  B4D8               	btfsc	status,2,c
  2397   001598  EFD0  F00A         	goto	u1191
  2398   00159C  EFD2  F00A         	goto	u1190
  2399   0015A0                     u1191:
  2400   0015A0  EFE2  F00A         	goto	l1669
  2401   0015A4                     u1190:
  2402   0015A4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2403   0015A6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2404   0015A8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2405   0015AA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2406   0015AC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2407   0015AE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2408   0015B0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2409   0015B2  6C13               	negf	___aodiv@quotient^0,c
  2410   0015B4  0E00               	movlw	0
  2411   0015B6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2412   0015B8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2413   0015BA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2414   0015BC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2415   0015BE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2416   0015C0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2417   0015C2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2418   0015C4                     l1669:
  2419   0015C4  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2420   0015C8  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2421   0015CC  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2422   0015D0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2423   0015D4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2424   0015D8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2425   0015DC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2426   0015E0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2427   0015E4  0012               	return		;funcret
  2428   0015E6                     __end_of___aodiv:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function _dateIncrement *****************
  2432 ;; Defined at:
  2433 ;;		line 3 in file "dateIncrement.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  daylightSavi    2   15[COMRAM] PTR unsigned char 
  2436 ;;		 -> main@daylightSavings(1), 
  2437 ;;  dayOfWeekP      2   17[COMRAM] PTR unsigned char 
  2438 ;;		 -> main@dayOfWeek(1), 
  2439 ;;  dayOfMonthP     2   19[COMRAM] PTR unsigned char 
  2440 ;;		 -> main@dayOfMonth(1), 
  2441 ;;  monthP          2   21[COMRAM] PTR unsigned char 
  2442 ;;		 -> main@month(1), 
  2443 ;;  yearP           2   23[COMRAM] PTR unsigned int 
  2444 ;;		 -> main@year(2), 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  runSyncro       1    0        unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2456 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2457 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2459 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2460 ;;Total ram usage:       13 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 3
  2463 ;; This function calls:
  2464 ;;		_syncro
  2465 ;; This function is called by:
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text12
  2471   000E28                     __ptext12:
  2472                           	callstack 0
  2473   000E28                     _dateIncrement:
  2474                           	callstack 27
  2475   000E28                     
  2476                           ;dateIncrement.c: 10:     if (hour >= 24){
  2477   000E28  0E17               	movlw	23
  2478   000E2A  0100               	movlb	0	; () banked
  2479   000E2C  65D1               	cpfsgt	_hour& (0+255),b
  2480   000E2E  EF1B  F007         	goto	u1741
  2481   000E32  EF1D  F007         	goto	u1740
  2482   000E36                     u1741:
  2483   000E36  EF2C  F007         	goto	l2007
  2484   000E3A                     u1740:
  2485   000E3A                     
  2486                           ; BSR set to: 0
  2487                           ;dateIncrement.c: 11:         hour = 0;
  2488   000E3A  0E00               	movlw	0
  2489   000E3C  6FD1               	movwf	_hour& (0+255),b
  2490   000E3E                     
  2491                           ; BSR set to: 0
  2492                           ;dateIncrement.c: 12:         *dayOfWeekP +=1;
  2493   000E3E  C012  FFD9         	movff	dateIncrement@dayOfWeekP,fsr2l
  2494   000E42  C013  FFDA         	movff	dateIncrement@dayOfWeekP+1,fsr2h
  2495   000E46  2ADF               	incf	indf2,f,c
  2496   000E48                     
  2497                           ; BSR set to: 0
  2498                           ;dateIncrement.c: 13:         *dayOfMonthP += 1;
  2499   000E48  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2500   000E4C  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2501   000E50  2ADF               	incf	indf2,f,c
  2502   000E52                     
  2503                           ; BSR set to: 0
  2504   000E52  5010               	movf	dateIncrement@daylightSavingsP^0,w,c
  2505   000E54  ECFA  F00C         	call	_syncro
  2506   000E58                     l2007:
  2507                           
  2508                           ;dateIncrement.c: 17:     if (*dayOfWeekP > 7){*dayOfWeekP = 1; }
  2509   000E58  C012  FFD9         	movff	dateIncrement@dayOfWeekP,fsr2l
  2510   000E5C  C013  FFDA         	movff	dateIncrement@dayOfWeekP+1,fsr2h
  2511   000E60  0E07               	movlw	7
  2512   000E62  64DF               	cpfsgt	indf2,c
  2513   000E64  EF36  F007         	goto	u1751
  2514   000E68  EF38  F007         	goto	u1750
  2515   000E6C                     u1751:
  2516   000E6C  EF3E  F007         	goto	l2011
  2517   000E70                     u1750:
  2518   000E70  C012  FFD9         	movff	dateIncrement@dayOfWeekP,fsr2l
  2519   000E74  C013  FFDA         	movff	dateIncrement@dayOfWeekP+1,fsr2h
  2520   000E78  0E01               	movlw	1
  2521   000E7A  6EDF               	movwf	indf2,c
  2522   000E7C                     l2011:
  2523                           
  2524                           ;dateIncrement.c: 20:     if (*dayOfMonthP > 30 & (*monthP == 4 | *monthP == 6 | *monthP
      +                           == 9 | *monthP == 11)){*dayOfMonthP = 1; *monthP +=1;}
  2525   000E7C  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2526   000E80  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2527   000E84  0E1E               	movlw	30
  2528   000E86  64DF               	cpfsgt	indf2,c
  2529   000E88  EF48  F007         	goto	u1761
  2530   000E8C  EF4A  F007         	goto	u1760
  2531   000E90                     u1761:
  2532   000E90  EF89  F007         	goto	l2025
  2533   000E94                     u1760:
  2534   000E94  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2535   000E98  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2536   000E9C  0E04               	movlw	4
  2537   000E9E  18DE               	xorwf	postinc2,w,c
  2538   000EA0  B4D8               	btfsc	status,2,c
  2539   000EA2  EF55  F007         	goto	u1771
  2540   000EA6  EF57  F007         	goto	u1770
  2541   000EAA                     u1771:
  2542   000EAA  EF7E  F007         	goto	l2021
  2543   000EAE                     u1770:
  2544   000EAE  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2545   000EB2  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2546   000EB6  0E06               	movlw	6
  2547   000EB8  18DE               	xorwf	postinc2,w,c
  2548   000EBA  B4D8               	btfsc	status,2,c
  2549   000EBC  EF62  F007         	goto	u1781
  2550   000EC0  EF64  F007         	goto	u1780
  2551   000EC4                     u1781:
  2552   000EC4  EF7E  F007         	goto	l2021
  2553   000EC8                     u1780:
  2554   000EC8  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2555   000ECC  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2556   000ED0  0E09               	movlw	9
  2557   000ED2  18DE               	xorwf	postinc2,w,c
  2558   000ED4  B4D8               	btfsc	status,2,c
  2559   000ED6  EF6F  F007         	goto	u1791
  2560   000EDA  EF71  F007         	goto	u1790
  2561   000EDE                     u1791:
  2562   000EDE  EF7E  F007         	goto	l2021
  2563   000EE2                     u1790:
  2564   000EE2  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2565   000EE6  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2566   000EEA  0E0B               	movlw	11
  2567   000EEC  18DE               	xorwf	postinc2,w,c
  2568   000EEE  A4D8               	btfss	status,2,c
  2569   000EF0  EF7C  F007         	goto	u1801
  2570   000EF4  EF7E  F007         	goto	u1800
  2571   000EF8                     u1801:
  2572   000EF8  EF89  F007         	goto	l2025
  2573   000EFC                     u1800:
  2574   000EFC                     l2021:
  2575   000EFC  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2576   000F00  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2577   000F04  0E01               	movlw	1
  2578   000F06  6EDF               	movwf	indf2,c
  2579   000F08  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2580   000F0C  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2581   000F10  2ADF               	incf	indf2,f,c
  2582   000F12                     l2025:
  2583                           
  2584                           ;dateIncrement.c: 21:     if (*dayOfMonthP > 31 & (*monthP == 1 | *monthP == 3 | *monthP
      +                           == 5 | *monthP == 7 | *monthP == 8 | *monthP == 10)){*dayOfMonthP = 1; *monthP +=1;}
  2585   000F12  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2586   000F16  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2587   000F1A  0E1F               	movlw	31
  2588   000F1C  64DF               	cpfsgt	indf2,c
  2589   000F1E  EF93  F007         	goto	u1811
  2590   000F22  EF95  F007         	goto	u1810
  2591   000F26                     u1811:
  2592   000F26  EFED  F007         	goto	l2043
  2593   000F2A                     u1810:
  2594   000F2A  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2595   000F2E  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2596   000F32  04DE               	decf	postinc2,w,c
  2597   000F34  B4D8               	btfsc	status,2,c
  2598   000F36  EF9F  F007         	goto	u1821
  2599   000F3A  EFA1  F007         	goto	u1820
  2600   000F3E                     u1821:
  2601   000F3E  EFE2  F007         	goto	l2039
  2602   000F42                     u1820:
  2603   000F42  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2604   000F46  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2605   000F4A  0E03               	movlw	3
  2606   000F4C  18DE               	xorwf	postinc2,w,c
  2607   000F4E  B4D8               	btfsc	status,2,c
  2608   000F50  EFAC  F007         	goto	u1831
  2609   000F54  EFAE  F007         	goto	u1830
  2610   000F58                     u1831:
  2611   000F58  EFE2  F007         	goto	l2039
  2612   000F5C                     u1830:
  2613   000F5C  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2614   000F60  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2615   000F64  0E05               	movlw	5
  2616   000F66  18DE               	xorwf	postinc2,w,c
  2617   000F68  B4D8               	btfsc	status,2,c
  2618   000F6A  EFB9  F007         	goto	u1841
  2619   000F6E  EFBB  F007         	goto	u1840
  2620   000F72                     u1841:
  2621   000F72  EFE2  F007         	goto	l2039
  2622   000F76                     u1840:
  2623   000F76  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2624   000F7A  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2625   000F7E  0E07               	movlw	7
  2626   000F80  18DE               	xorwf	postinc2,w,c
  2627   000F82  B4D8               	btfsc	status,2,c
  2628   000F84  EFC6  F007         	goto	u1851
  2629   000F88  EFC8  F007         	goto	u1850
  2630   000F8C                     u1851:
  2631   000F8C  EFE2  F007         	goto	l2039
  2632   000F90                     u1850:
  2633   000F90  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2634   000F94  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2635   000F98  0E08               	movlw	8
  2636   000F9A  18DE               	xorwf	postinc2,w,c
  2637   000F9C  B4D8               	btfsc	status,2,c
  2638   000F9E  EFD3  F007         	goto	u1861
  2639   000FA2  EFD5  F007         	goto	u1860
  2640   000FA6                     u1861:
  2641   000FA6  EFE2  F007         	goto	l2039
  2642   000FAA                     u1860:
  2643   000FAA  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2644   000FAE  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2645   000FB2  0E0A               	movlw	10
  2646   000FB4  18DE               	xorwf	postinc2,w,c
  2647   000FB6  A4D8               	btfss	status,2,c
  2648   000FB8  EFE0  F007         	goto	u1871
  2649   000FBC  EFE2  F007         	goto	u1870
  2650   000FC0                     u1871:
  2651   000FC0  EFED  F007         	goto	l2043
  2652   000FC4                     u1870:
  2653   000FC4                     l2039:
  2654   000FC4  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2655   000FC8  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2656   000FCC  0E01               	movlw	1
  2657   000FCE  6EDF               	movwf	indf2,c
  2658   000FD0  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2659   000FD4  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2660   000FD8  2ADF               	incf	indf2,f,c
  2661   000FDA                     l2043:
  2662                           
  2663                           ;dateIncrement.c: 22:     if (*dayOfMonthP > 27 & *monthP == 2){
  2664   000FDA  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2665   000FDE  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2666   000FE2  0E1B               	movlw	27
  2667   000FE4  64DF               	cpfsgt	indf2,c
  2668   000FE6  EFF7  F007         	goto	u1881
  2669   000FEA  EFF9  F007         	goto	u1880
  2670   000FEE                     u1881:
  2671   000FEE  EF42  F008         	goto	l2061
  2672   000FF2                     u1880:
  2673   000FF2  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2674   000FF6  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2675   000FFA  0E02               	movlw	2
  2676   000FFC  18DE               	xorwf	postinc2,w,c
  2677   000FFE  A4D8               	btfss	status,2,c
  2678   001000  EF04  F008         	goto	u1891
  2679   001004  EF06  F008         	goto	u1890
  2680   001008                     u1891:
  2681   001008  EF42  F008         	goto	l2061
  2682   00100C                     u1890:
  2683   00100C                     
  2684                           ;dateIncrement.c: 23:         if (*yearP%4 == 0){
  2685   00100C  C018  FFD9         	movff	dateIncrement@yearP,fsr2l
  2686   001010  C019  FFDA         	movff	dateIncrement@yearP+1,fsr2h
  2687   001014  CFDE F01A          	movff	postinc2,??_dateIncrement
  2688   001018  CFDD F01B          	movff	postdec2,??_dateIncrement+1
  2689   00101C  0E03               	movlw	3
  2690   00101E  161A               	andwf	??_dateIncrement^0,f,c
  2691   001020  0E00               	movlw	0
  2692   001022  161B               	andwf	(??_dateIncrement+1)^0,f,c
  2693   001024  501A               	movf	??_dateIncrement^0,w,c
  2694   001026  101B               	iorwf	(??_dateIncrement+1)^0,w,c
  2695   001028  A4D8               	btfss	status,2,c
  2696   00102A  EF19  F008         	goto	u1901
  2697   00102E  EF1B  F008         	goto	u1900
  2698   001032                     u1901:
  2699   001032  EF34  F008         	goto	l2055
  2700   001036                     u1900:
  2701   001036                     
  2702                           ;dateIncrement.c: 24:             if (*dayOfMonthP > 29){*dayOfMonthP = 1; *monthP +=1;}
  2703   001036  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2704   00103A  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2705   00103E  0E1D               	movlw	29
  2706   001040  64DF               	cpfsgt	indf2,c
  2707   001042  EF25  F008         	goto	u1911
  2708   001046  EF27  F008         	goto	u1910
  2709   00104A                     u1911:
  2710   00104A  EF42  F008         	goto	l2061
  2711   00104E                     u1910:
  2712   00104E                     l2051:
  2713   00104E  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2714   001052  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2715   001056  0E01               	movlw	1
  2716   001058  6EDF               	movwf	indf2,c
  2717   00105A  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2718   00105E  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2719   001062  2ADF               	incf	indf2,f,c
  2720   001064  EF42  F008         	goto	l2061
  2721   001068                     l2055:
  2722                           
  2723                           ;dateIncrement.c: 27:             if (*dayOfMonthP > 28){*dayOfMonthP = 1; *monthP +=1;}
  2724   001068  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2725   00106C  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2726   001070  0E1C               	movlw	28
  2727   001072  64DF               	cpfsgt	indf2,c
  2728   001074  EF3E  F008         	goto	u1921
  2729   001078  EF40  F008         	goto	u1920
  2730   00107C                     u1921:
  2731   00107C  EF42  F008         	goto	l2061
  2732   001080                     u1920:
  2733   001080  EF27  F008         	goto	l2051
  2734   001084                     l2061:
  2735                           
  2736                           ;dateIncrement.c: 31:     if (*dayOfMonthP > 31 & *monthP == 12){*dayOfMonthP = 1; *mont
      +                          hP = 1; *yearP+=1;}
  2737   001084  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2738   001088  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2739   00108C  0E1F               	movlw	31
  2740   00108E  64DF               	cpfsgt	indf2,c
  2741   001090  EF4C  F008         	goto	u1931
  2742   001094  EF4E  F008         	goto	u1930
  2743   001098                     u1931:
  2744   001098  EF6E  F008         	goto	l2069
  2745   00109C                     u1930:
  2746   00109C  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2747   0010A0  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2748   0010A4  0E0C               	movlw	12
  2749   0010A6  18DE               	xorwf	postinc2,w,c
  2750   0010A8  A4D8               	btfss	status,2,c
  2751   0010AA  EF59  F008         	goto	u1941
  2752   0010AE  EF5B  F008         	goto	u1940
  2753   0010B2                     u1941:
  2754   0010B2  EF6E  F008         	goto	l2069
  2755   0010B6                     u1940:
  2756   0010B6  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2757   0010BA  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2758   0010BE  0E01               	movlw	1
  2759   0010C0  6EDF               	movwf	indf2,c
  2760   0010C2  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2761   0010C6  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2762   0010CA  0E01               	movlw	1
  2763   0010CC  6EDF               	movwf	indf2,c
  2764   0010CE  C018  FFD9         	movff	dateIncrement@yearP,fsr2l
  2765   0010D2  C019  FFDA         	movff	dateIncrement@yearP+1,fsr2h
  2766   0010D6  2ADE               	incf	postinc2,f,c
  2767   0010D8  0E00               	movlw	0
  2768   0010DA  22DD               	addwfc	postdec2,f,c
  2769   0010DC                     l2069:
  2770                           
  2771                           ;dateIncrement.c: 34:     if (*monthP == 3 & *dayOfMonthP > 24 & *dayOfWeekP == 7 & !*da
      +                          ylightSavingsP & hour == 1){hour -= 1; *daylightSavingsP = 1;}
  2772   0010DC  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2773   0010E0  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2774   0010E4  0E03               	movlw	3
  2775   0010E6  18DE               	xorwf	postinc2,w,c
  2776   0010E8  A4D8               	btfss	status,2,c
  2777   0010EA  EF79  F008         	goto	u1951
  2778   0010EE  EF7B  F008         	goto	u1950
  2779   0010F2                     u1951:
  2780   0010F2  EFB0  F008         	goto	l2083
  2781   0010F6                     u1950:
  2782   0010F6  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2783   0010FA  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2784   0010FE  0E18               	movlw	24
  2785   001100  64DF               	cpfsgt	indf2,c
  2786   001102  EF85  F008         	goto	u1961
  2787   001106  EF87  F008         	goto	u1960
  2788   00110A                     u1961:
  2789   00110A  EFB0  F008         	goto	l2083
  2790   00110E                     u1960:
  2791   00110E  C012  FFD9         	movff	dateIncrement@dayOfWeekP,fsr2l
  2792   001112  C013  FFDA         	movff	dateIncrement@dayOfWeekP+1,fsr2h
  2793   001116  0E07               	movlw	7
  2794   001118  18DE               	xorwf	postinc2,w,c
  2795   00111A  A4D8               	btfss	status,2,c
  2796   00111C  EF92  F008         	goto	u1971
  2797   001120  EF94  F008         	goto	u1970
  2798   001124                     u1971:
  2799   001124  EFB0  F008         	goto	l2083
  2800   001128                     u1970:
  2801   001128  C010  FFD9         	movff	dateIncrement@daylightSavingsP,fsr2l
  2802   00112C  C011  FFDA         	movff	dateIncrement@daylightSavingsP+1,fsr2h
  2803   001130  50DF               	movf	indf2,w,c
  2804   001132  A4D8               	btfss	status,2,c
  2805   001134  EF9E  F008         	goto	u1981
  2806   001138  EFA0  F008         	goto	u1980
  2807   00113C                     u1981:
  2808   00113C  EFB0  F008         	goto	l2083
  2809   001140                     u1980:
  2810   001140  0100               	movlb	0	; () banked
  2811   001142  05D1               	decf	_hour& (0+255),w,b
  2812   001144  A4D8               	btfss	status,2,c
  2813   001146  EFA7  F008         	goto	u1991
  2814   00114A  EFA9  F008         	goto	u1990
  2815   00114E                     u1991:
  2816   00114E  EFB0  F008         	goto	l2083
  2817   001152                     u1990:
  2818   001152                     
  2819                           ; BSR set to: 0
  2820   001152  07D1               	decf	_hour& (0+255),f,b
  2821   001154                     
  2822                           ; BSR set to: 0
  2823   001154  C010  FFD9         	movff	dateIncrement@daylightSavingsP,fsr2l
  2824   001158  C011  FFDA         	movff	dateIncrement@daylightSavingsP+1,fsr2h
  2825   00115C  0E01               	movlw	1
  2826   00115E  6EDF               	movwf	indf2,c
  2827   001160                     l2083:
  2828                           
  2829                           ;dateIncrement.c: 35:     if (*monthP ==8 & *dayOfMonthP > 24 & *dayOfWeekP == 7 & *dayl
      +                          ightSavingsP) {hour += 1; *daylightSavingsP = 0;}
  2830   001160  0E00               	movlw	0
  2831   001162  6E1C               	movwf	_dateIncrement$1346^0,c
  2832   001164  C016  FFD9         	movff	dateIncrement@monthP,fsr2l
  2833   001168  C017  FFDA         	movff	dateIncrement@monthP+1,fsr2h
  2834   00116C  0E08               	movlw	8
  2835   00116E  18DE               	xorwf	postinc2,w,c
  2836   001170  A4D8               	btfss	status,2,c
  2837   001172  EFBD  F008         	goto	u2001
  2838   001176  EFBF  F008         	goto	u2000
  2839   00117A                     u2001:
  2840   00117A  EFDA  F008         	goto	l2093
  2841   00117E                     u2000:
  2842   00117E  C014  FFD9         	movff	dateIncrement@dayOfMonthP,fsr2l
  2843   001182  C015  FFDA         	movff	dateIncrement@dayOfMonthP+1,fsr2h
  2844   001186  0E18               	movlw	24
  2845   001188  64DF               	cpfsgt	indf2,c
  2846   00118A  EFC9  F008         	goto	u2011
  2847   00118E  EFCB  F008         	goto	u2010
  2848   001192                     u2011:
  2849   001192  EFDA  F008         	goto	l2093
  2850   001196                     u2010:
  2851   001196  C012  FFD9         	movff	dateIncrement@dayOfWeekP,fsr2l
  2852   00119A  C013  FFDA         	movff	dateIncrement@dayOfWeekP+1,fsr2h
  2853   00119E  0E07               	movlw	7
  2854   0011A0  18DE               	xorwf	postinc2,w,c
  2855   0011A2  A4D8               	btfss	status,2,c
  2856   0011A4  EFD6  F008         	goto	u2021
  2857   0011A8  EFD8  F008         	goto	u2020
  2858   0011AC                     u2021:
  2859   0011AC  EFDA  F008         	goto	l2093
  2860   0011B0                     u2020:
  2861   0011B0  0E01               	movlw	1
  2862   0011B2  6E1C               	movwf	_dateIncrement$1346^0,c
  2863   0011B4                     l2093:
  2864   0011B4  C010  FFD9         	movff	dateIncrement@daylightSavingsP,fsr2l
  2865   0011B8  C011  FFDA         	movff	dateIncrement@daylightSavingsP+1,fsr2h
  2866   0011BC  50DF               	movf	indf2,w,c
  2867   0011BE  141C               	andwf	_dateIncrement$1346^0,w,c
  2868   0011C0  0900               	iorlw	0
  2869   0011C2  B4D8               	btfsc	status,2,c
  2870   0011C4  EFE6  F008         	goto	u2031
  2871   0011C8  EFE8  F008         	goto	u2030
  2872   0011CC                     u2031:
  2873   0011CC  EFF0  F008         	goto	l252
  2874   0011D0                     u2030:
  2875   0011D0  0100               	movlb	0	; () banked
  2876   0011D2  2BD1               	incf	_hour& (0+255),f,b
  2877   0011D4                     
  2878                           ; BSR set to: 0
  2879   0011D4  C010  FFD9         	movff	dateIncrement@daylightSavingsP,fsr2l
  2880   0011D8  C011  FFDA         	movff	dateIncrement@daylightSavingsP+1,fsr2h
  2881   0011DC  0E00               	movlw	0
  2882   0011DE  6EDF               	movwf	indf2,c
  2883   0011E0                     l252:
  2884   0011E0  0012               	return		;funcret
  2885   0011E2                     __end_of_dateIncrement:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function _syncro *****************
  2889 ;; Defined at:
  2890 ;;		line 3 in file "syncro.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  daylightSavi    1    wreg     unsigned char 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  daylightSavi    1   13[COMRAM] unsigned char 
  2895 ;;  trueMid         1    0        unsigned char 
  2896 ;;  trueMid         1   14[COMRAM] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;Total ram usage:        7 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 2
  2913 ;; This function calls:
  2914 ;;		___awdiv
  2915 ;; This function is called by:
  2916 ;;		_dateIncrement
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text13
  2921   0019F4                     __ptext13:
  2922                           	callstack 0
  2923   0019F4                     _syncro:
  2924                           	callstack 27
  2925                           
  2926                           ;incstack = 0
  2927                           ;syncro@daylightSavings stored from wreg
  2928   0019F4  6E0E               	movwf	syncro@daylightSavings^0,c
  2929   0019F6                     
  2930                           ;syncro.c: 4:     char trueMid = 12;
  2931   0019F6  0E0C               	movlw	12
  2932   0019F8  6E0F               	movwf	syncro@trueMid^0,c
  2933   0019FA                     
  2934                           ;syncro.c: 5:     if (daylightSavings){char trueMid = 13;}
  2935   0019FA  500E               	movf	syncro@daylightSavings^0,w,c
  2936   0019FC  B4D8               	btfsc	status,2,c
  2937   0019FE  EF03  F00D         	goto	u1581
  2938   001A02  EF05  F00D         	goto	u1580
  2939   001A06                     u1581:
  2940   001A06  EF05  F00D         	goto	l1887
  2941   001A0A                     u1580:
  2942   001A0A                     l1887:
  2943                           
  2944                           ;syncro.c: 6:     if ( ((sunUp - sunDown) > 7) & (sunUp - sunDown < 16) ){
  2945   001A0A  505D               	movf	_sunDown^0,w,c
  2946   001A0C  C05E  F009         	movff	_sunUp,??_syncro
  2947   001A10  6A0A               	clrf	(??_syncro+1)^0,c
  2948   001A12  5E09               	subwf	??_syncro^0,f,c
  2949   001A14  0E00               	movlw	0
  2950   001A16  5A0A               	subwfb	(??_syncro+1)^0,f,c
  2951   001A18  BE0A               	btfsc	(??_syncro+1)^0,7,c
  2952   001A1A  EF18  F00D         	goto	u1591
  2953   001A1E  500A               	movf	(??_syncro+1)^0,w,c
  2954   001A20  E109               	bnz	u1590
  2955   001A22  0E08               	movlw	8
  2956   001A24  5C09               	subwf	??_syncro^0,w,c
  2957   001A26  A0D8               	btfss	status,0,c
  2958   001A28  EF18  F00D         	goto	u1591
  2959   001A2C  EF1A  F00D         	goto	u1590
  2960   001A30                     u1591:
  2961   001A30  EF84  F00D         	goto	l1905
  2962   001A34                     u1590:
  2963   001A34  505D               	movf	_sunDown^0,w,c
  2964   001A36  C05E  F009         	movff	_sunUp,??_syncro
  2965   001A3A  6A0A               	clrf	(??_syncro+1)^0,c
  2966   001A3C  5E09               	subwf	??_syncro^0,f,c
  2967   001A3E  0E00               	movlw	0
  2968   001A40  5A0A               	subwfb	(??_syncro+1)^0,f,c
  2969   001A42  BE0A               	btfsc	(??_syncro+1)^0,7,c
  2970   001A44  EF2F  F00D         	goto	u1600
  2971   001A48  500A               	movf	(??_syncro+1)^0,w,c
  2972   001A4A  E107               	bnz	u1601
  2973   001A4C  0E10               	movlw	16
  2974   001A4E  5C09               	subwf	??_syncro^0,w,c
  2975   001A50  B0D8               	btfsc	status,0,c
  2976   001A52  EF2D  F00D         	goto	u1601
  2977   001A56  EF2F  F00D         	goto	u1600
  2978   001A5A                     u1601:
  2979   001A5A  EF84  F00D         	goto	l1905
  2980   001A5E                     u1600:
  2981   001A5E                     
  2982                           ;syncro.c: 7:     midDay = ((sunUp + sunDown)/2);
  2983   001A5E  505E               	movf	_sunUp^0,w,c
  2984   001A60  245D               	addwf	_sunDown^0,w,c
  2985   001A62  6E01               	movwf	___awdiv@dividend^0,c
  2986   001A64  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2987   001A66  3602               	rlcf	(___awdiv@dividend+1)^0,f,c
  2988   001A68  0E00               	movlw	0
  2989   001A6A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2990   001A6C  0E02               	movlw	2
  2991   001A6E  6E03               	movwf	___awdiv@divisor^0,c
  2992   001A70  ECF1  F00D         	call	___awdiv	;wreg free
  2993   001A74  5001               	movf	?___awdiv^0,w,c
  2994   001A76  0100               	movlb	0	; () banked
  2995   001A78  6FD0               	movwf	_midDay& (0+255),b
  2996   001A7A                     
  2997                           ; BSR set to: 0
  2998                           ;syncro.c: 8:         if (midDay != trueMid){
  2999   001A7A  0E0C               	movlw	12
  3000   001A7C  19D0               	xorwf	_midDay& (0+255),w,b
  3001   001A7E  B4D8               	btfsc	status,2,c
  3002   001A80  EF44  F00D         	goto	u1611
  3003   001A84  EF46  F00D         	goto	u1610
  3004   001A88                     u1611:
  3005   001A88  EF87  F00D         	goto	l219
  3006   001A8C                     u1610:
  3007   001A8C                     
  3008                           ; BSR set to: 0
  3009                           ;syncro.c: 10:             if ((midDay - trueMid) > 0){hour += (midDay - trueMid);}
  3010   001A8C  0EF4               	movlw	244
  3011   001A8E  25D0               	addwf	_midDay& (0+255),w,b
  3012   001A90  6E09               	movwf	??_syncro^0,c
  3013   001A92  6A0A               	clrf	(??_syncro+1)^0,c
  3014   001A94  0EFF               	movlw	255
  3015   001A96  220A               	addwfc	(??_syncro+1)^0,f,c
  3016   001A98  BE0A               	btfsc	(??_syncro+1)^0,7,c
  3017   001A9A  EF57  F00D         	goto	u1621
  3018   001A9E  500A               	movf	(??_syncro+1)^0,w,c
  3019   001AA0  E108               	bnz	u1620
  3020   001AA2  0409               	decf	??_syncro^0,w,c
  3021   001AA4  A0D8               	btfss	status,0,c
  3022   001AA6  EF57  F00D         	goto	u1621
  3023   001AAA  EF59  F00D         	goto	u1620
  3024   001AAE                     u1621:
  3025   001AAE  EF66  F00D         	goto	l1901
  3026   001AB2                     u1620:
  3027   001AB2                     
  3028                           ; BSR set to: 0
  3029   001AB2  51D0               	movf	_midDay& (0+255),w,b
  3030   001AB4  0FF4               	addlw	244
  3031   001AB6  27D1               	addwf	_hour& (0+255),f,b
  3032   001AB8  EF87  F00D         	goto	l219
  3033   001ABC                     l1899:
  3034                           
  3035                           ; BSR set to: 0
  3036   001ABC  0E15               	movlw	21
  3037   001ABE  6E09               	movwf	??_syncro^0,c
  3038   001AC0  0EC6               	movlw	198
  3039   001AC2                     u2157:
  3040   001AC2  2EE8               	decfsz	wreg,f,c
  3041   001AC4  D7FE               	bra	u2157
  3042   001AC6  2E09               	decfsz	??_syncro^0,f,c
  3043   001AC8  D7FC               	bra	u2157
  3044   001ACA  D000               	nop2	
  3045   001ACC                     l1901:
  3046   001ACC  0100               	movlb	0	; () banked
  3047   001ACE  51D0               	movf	_midDay& (0+255),w,b
  3048   001AD0  C00F  F009         	movff	syncro@trueMid,??_syncro
  3049   001AD4  6A0A               	clrf	(??_syncro+1)^0,c
  3050   001AD6  5E09               	subwf	??_syncro^0,f,c
  3051   001AD8  0E00               	movlw	0
  3052   001ADA  5A0A               	subwfb	(??_syncro+1)^0,f,c
  3053   001ADC  51D1               	movf	_hour& (0+255),w,b
  3054   001ADE  6E0B               	movwf	(??_syncro+2)^0,c
  3055   001AE0  6A0C               	clrf	(??_syncro+3)^0,c
  3056   001AE2  5009               	movf	??_syncro^0,w,c
  3057   001AE4  5C0B               	subwf	(??_syncro+2)^0,w,c
  3058   001AE6  500C               	movf	(??_syncro+3)^0,w,c
  3059   001AE8  0A80               	xorlw	128
  3060   001AEA  6E0D               	movwf	(??_syncro+4)^0,c
  3061   001AEC  500A               	movf	(??_syncro+1)^0,w,c
  3062   001AEE  0A80               	xorlw	128
  3063   001AF0  580D               	subwfb	(??_syncro+4)^0,w,c
  3064   001AF2  A0D8               	btfss	status,0,c
  3065   001AF4  EF7E  F00D         	goto	u1631
  3066   001AF8  EF80  F00D         	goto	u1630
  3067   001AFC                     u1631:
  3068   001AFC  EF5E  F00D         	goto	l1899
  3069   001B00                     u1630:
  3070   001B00                     
  3071                           ; BSR set to: 0
  3072                           ;syncro.c: 14:                 hour = 0;
  3073   001B00  0E00               	movlw	0
  3074   001B02  6FD1               	movwf	_hour& (0+255),b
  3075   001B04  EF87  F00D         	goto	l219
  3076   001B08                     l1905:
  3077   001B08  0E00               	movlw	0
  3078   001B0A  0100               	movlb	0	; () banked
  3079   001B0C  6FD0               	movwf	_midDay& (0+255),b
  3080   001B0E                     l219:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;syncro.c: 20:     sunUp = sunDown = 0;
  3084   001B0E  0E00               	movlw	0
  3085   001B10  6E5D               	movwf	_sunDown^0,c
  3086   001B12  C05D  F05E         	movff	_sunDown,_sunUp
  3087   001B16                     
  3088                           ; BSR set to: 0
  3089   001B16  0012               	return		;funcret
  3090   001B18                     __end_of_syncro:
  3091                           	callstack 0
  3092                           
  3093 ;; *************** function ___awdiv *****************
  3094 ;; Defined at:
  3095 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  dividend        2    0[COMRAM] int 
  3098 ;;  divisor         2    2[COMRAM] int 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  quotient        2    6[COMRAM] int 
  3101 ;;  sign            1    5[COMRAM] unsigned char 
  3102 ;;  counter         1    4[COMRAM] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  2    0[COMRAM] int 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3112 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3113 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3115 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3116 ;;Total ram usage:        8 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 1
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_syncro
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text14
  3127   001BE2                     __ptext14:
  3128                           	callstack 0
  3129   001BE2                     ___awdiv:
  3130                           	callstack 27
  3131   001BE2  0E00               	movlw	0
  3132   001BE4  6E06               	movwf	___awdiv@sign^0,c
  3133   001BE6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3134   001BE8  EFFA  F00D         	goto	u1470
  3135   001BEC  EFF8  F00D         	goto	u1471
  3136   001BF0                     u1471:
  3137   001BF0  EF00  F00E         	goto	l1799
  3138   001BF4                     u1470:
  3139   001BF4  6C03               	negf	___awdiv@divisor^0,c
  3140   001BF6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3141   001BF8  B0D8               	btfsc	status,0,c
  3142   001BFA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3143   001BFC  0E01               	movlw	1
  3144   001BFE  6E06               	movwf	___awdiv@sign^0,c
  3145   001C00                     l1799:
  3146   001C00  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3147   001C02  EF07  F00E         	goto	u1480
  3148   001C06  EF05  F00E         	goto	u1481
  3149   001C0A                     u1481:
  3150   001C0A  EF0D  F00E         	goto	l1805
  3151   001C0E                     u1480:
  3152   001C0E  6C01               	negf	___awdiv@dividend^0,c
  3153   001C10  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3154   001C12  B0D8               	btfsc	status,0,c
  3155   001C14  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3156   001C16  0E01               	movlw	1
  3157   001C18  1A06               	xorwf	___awdiv@sign^0,f,c
  3158   001C1A                     l1805:
  3159   001C1A  0E00               	movlw	0
  3160   001C1C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3161   001C1E  0E00               	movlw	0
  3162   001C20  6E07               	movwf	___awdiv@quotient^0,c
  3163   001C22  5003               	movf	___awdiv@divisor^0,w,c
  3164   001C24  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3165   001C26  B4D8               	btfsc	status,2,c
  3166   001C28  EF18  F00E         	goto	u1491
  3167   001C2C  EF1A  F00E         	goto	u1490
  3168   001C30                     u1491:
  3169   001C30  EF42  F00E         	goto	l1827
  3170   001C34                     u1490:
  3171   001C34  0E01               	movlw	1
  3172   001C36  6E05               	movwf	___awdiv@counter^0,c
  3173   001C38  EF22  F00E         	goto	l1813
  3174   001C3C                     l1811:
  3175   001C3C  90D8               	bcf	status,0,c
  3176   001C3E  3603               	rlcf	___awdiv@divisor^0,f,c
  3177   001C40  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3178   001C42  2A05               	incf	___awdiv@counter^0,f,c
  3179   001C44                     l1813:
  3180   001C44  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3181   001C46  EF27  F00E         	goto	u1501
  3182   001C4A  EF29  F00E         	goto	u1500
  3183   001C4E                     u1501:
  3184   001C4E  EF1E  F00E         	goto	l1811
  3185   001C52                     u1500:
  3186   001C52                     l1815:
  3187   001C52  90D8               	bcf	status,0,c
  3188   001C54  3607               	rlcf	___awdiv@quotient^0,f,c
  3189   001C56  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3190   001C58  5003               	movf	___awdiv@divisor^0,w,c
  3191   001C5A  5C01               	subwf	___awdiv@dividend^0,w,c
  3192   001C5C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3193   001C5E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3194   001C60  A0D8               	btfss	status,0,c
  3195   001C62  EF35  F00E         	goto	u1511
  3196   001C66  EF37  F00E         	goto	u1510
  3197   001C6A                     u1511:
  3198   001C6A  EF3C  F00E         	goto	l1823
  3199   001C6E                     u1510:
  3200   001C6E  5003               	movf	___awdiv@divisor^0,w,c
  3201   001C70  5E01               	subwf	___awdiv@dividend^0,f,c
  3202   001C72  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3203   001C74  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3204   001C76  8007               	bsf	___awdiv@quotient^0,0,c
  3205   001C78                     l1823:
  3206   001C78  90D8               	bcf	status,0,c
  3207   001C7A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3208   001C7C  3203               	rrcf	___awdiv@divisor^0,f,c
  3209   001C7E  2E05               	decfsz	___awdiv@counter^0,f,c
  3210   001C80  EF29  F00E         	goto	l1815
  3211   001C84                     l1827:
  3212   001C84  5006               	movf	___awdiv@sign^0,w,c
  3213   001C86  B4D8               	btfsc	status,2,c
  3214   001C88  EF48  F00E         	goto	u1521
  3215   001C8C  EF4A  F00E         	goto	u1520
  3216   001C90                     u1521:
  3217   001C90  EF4E  F00E         	goto	l1831
  3218   001C94                     u1520:
  3219   001C94  6C07               	negf	___awdiv@quotient^0,c
  3220   001C96  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3221   001C98  B0D8               	btfsc	status,0,c
  3222   001C9A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3223   001C9C                     l1831:
  3224   001C9C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3225   001CA0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3226   001CA4  0012               	return		;funcret
  3227   001CA6                     __end_of___awdiv:
  3228                           	callstack 0
  3229                           
  3230 ;; *************** function _Timer0_init *****************
  3231 ;; Defined at:
  3232 ;;		line 5 in file "timers.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;		None
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;Total ram usage:        0 bytes
  3251 ;; Hardware stack levels used: 1
  3252 ;; Hardware stack levels required when called: 1
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		_main
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text15
  3261   00216E                     __ptext15:
  3262                           	callstack 0
  3263   00216E                     _Timer0_init:
  3264                           	callstack 29
  3265   00216E                     
  3266                           ;timers.c: 7:     T0CON1bits.T0CS=0b010;
  3267   00216E  50D6               	movf	214,w,c	;volatile
  3268   002170  0B1F               	andlw	-225
  3269   002172  0940               	iorlw	64
  3270   002174  6ED6               	movwf	214,c	;volatile
  3271   002176                     
  3272                           ;timers.c: 8:     T0CON1bits.T0ASYNC=1;
  3273   002176  88D6               	bsf	214,4,c	;volatile
  3274                           
  3275                           ;timers.c: 9:     T0CON1bits.T0CKPS=0b0110;
  3276   002178  50D6               	movf	214,w,c	;volatile
  3277   00217A  0BF0               	andlw	-16
  3278   00217C  0906               	iorlw	6
  3279   00217E  6ED6               	movwf	214,c	;volatile
  3280   002180                     
  3281                           ;timers.c: 10:     T0CON0bits.T016BIT=1;
  3282   002180  88D5               	bsf	213,4,c	;volatile
  3283                           
  3284                           ;timers.c: 13:     TMR0H=0;
  3285   002182  0E00               	movlw	0
  3286   002184  6ED4               	movwf	212,c	;volatile
  3287                           
  3288                           ;timers.c: 14:     TMR0L=0;
  3289   002186  0E00               	movlw	0
  3290   002188  6ED3               	movwf	211,c	;volatile
  3291   00218A                     
  3292                           ;timers.c: 15:     T0CON0bits.T0EN=1;
  3293   00218A  8ED5               	bsf	213,7,c	;volatile
  3294   00218C  0012               	return		;funcret
  3295   00218E                     __end_of_Timer0_init:
  3296                           	callstack 0
  3297                           
  3298 ;; *************** function _LEDarray_init *****************
  3299 ;; Defined at:
  3300 ;;		line 7 in file "LEDarray.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;		None
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		None
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;Total ram usage:        0 bytes
  3319 ;; Hardware stack levels used: 1
  3320 ;; Hardware stack levels required when called: 1
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_main
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text16
  3329   00214C                     __ptext16:
  3330                           	callstack 0
  3331   00214C                     _LEDarray_init:
  3332                           	callstack 29
  3333   00214C                     
  3334                           ;LEDarray.c: 10:     TRISGbits.TRISG0=0;
  3335   00214C  9087               	bcf	135,0,c	;volatile
  3336                           
  3337                           ;LEDarray.c: 11:     TRISGbits.TRISG1=0;
  3338   00214E  9287               	bcf	135,1,c	;volatile
  3339                           
  3340                           ;LEDarray.c: 12:     TRISAbits.TRISA2=0;
  3341   002150  9481               	bcf	129,2,c	;volatile
  3342                           
  3343                           ;LEDarray.c: 13:     TRISFbits.TRISF6=0;
  3344   002152  9C86               	bcf	134,6,c	;volatile
  3345                           
  3346                           ;LEDarray.c: 14:     TRISAbits.TRISA4=0;
  3347   002154  9881               	bcf	129,4,c	;volatile
  3348                           
  3349                           ;LEDarray.c: 15:     TRISAbits.TRISA5=0;
  3350   002156  9A81               	bcf	129,5,c	;volatile
  3351                           
  3352                           ;LEDarray.c: 16:     TRISFbits.TRISF0=0;
  3353   002158  9086               	bcf	134,0,c	;volatile
  3354                           
  3355                           ;LEDarray.c: 17:     TRISBbits.TRISB0=0;
  3356   00215A  9082               	bcf	130,0,c	;volatile
  3357                           
  3358                           ;LEDarray.c: 21:     LATGbits.LATG0=0;
  3359   00215C  907F               	bcf	127,0,c	;volatile
  3360                           
  3361                           ;LEDarray.c: 22:     LATGbits.LATG1=0;
  3362   00215E  927F               	bcf	127,1,c	;volatile
  3363                           
  3364                           ;LEDarray.c: 23:     LATAbits.LATA2=0;
  3365   002160  9479               	bcf	121,2,c	;volatile
  3366                           
  3367                           ;LEDarray.c: 24:     LATFbits.LATF6=0;
  3368   002162  9C7E               	bcf	126,6,c	;volatile
  3369                           
  3370                           ;LEDarray.c: 25:     LATAbits.LATA4=0;
  3371   002164  9879               	bcf	121,4,c	;volatile
  3372                           
  3373                           ;LEDarray.c: 26:     LATAbits.LATA5=0;
  3374   002166  9A79               	bcf	121,5,c	;volatile
  3375                           
  3376                           ;LEDarray.c: 27:     LATFbits.LATF0=0;
  3377   002168  907E               	bcf	126,0,c	;volatile
  3378                           
  3379                           ;LEDarray.c: 28:     LATBbits.LATB0=0;
  3380   00216A  907A               	bcf	122,0,c	;volatile
  3381   00216C  0012               	return		;funcret
  3382   00216E                     __end_of_LEDarray_init:
  3383                           	callstack 0
  3384                           
  3385 ;; *************** function _LEDarray_disp_bin *****************
  3386 ;; Defined at:
  3387 ;;		line 38 in file "LEDarray.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  number          1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  number          1    1[COMRAM] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3403 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3405 ;;Total ram usage:        2 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text17
  3416   001CA6                     __ptext17:
  3417                           	callstack 0
  3418   001CA6                     _LEDarray_disp_bin:
  3419                           	callstack 29
  3420                           
  3421                           ;incstack = 0
  3422                           ;LEDarray_disp_bin@number stored from wreg
  3423   001CA6  6E02               	movwf	LEDarray_disp_bin@number^0,c
  3424   001CA8                     
  3425                           ;LEDarray.c: 38: void LEDarray_disp_bin(char number);LEDarray.c: 39: {;LEDarray.c: 44:  
      +                             LATGbits.LATG0 = (number & 0b00000001)? 1 : 0;
  3426   001CA8  B002               	btfsc	LEDarray_disp_bin@number^0,0,c
  3427   001CAA  EF59  F00E         	goto	u1651
  3428   001CAE  EF5D  F00E         	goto	u1650
  3429   001CB2                     u1651:
  3430   001CB2  6A01               	clrf	??_LEDarray_disp_bin^0,c
  3431   001CB4  2A01               	incf	??_LEDarray_disp_bin^0,f,c
  3432   001CB6  EF5E  F00E         	goto	u1668
  3433   001CBA                     u1650:
  3434   001CBA  6A01               	clrf	??_LEDarray_disp_bin^0,c
  3435   001CBC                     u1668:
  3436   001CBC  507F               	movf	127,w,c	;volatile
  3437   001CBE  1801               	xorwf	??_LEDarray_disp_bin^0,w,c
  3438   001CC0  0BFE               	andlw	-2
  3439   001CC2  1801               	xorwf	??_LEDarray_disp_bin^0,w,c
  3440   001CC4  6E7F               	movwf	127,c	;volatile
  3441   001CC6                     
  3442                           ;LEDarray.c: 46:     if (number & 0b00000010) {LATGbits.LATG1=1;} else {LATGbits.LATG1=0
      +                          ;}
  3443   001CC6  A202               	btfss	LEDarray_disp_bin@number^0,1,c
  3444   001CC8  EF68  F00E         	goto	u1671
  3445   001CCC  EF6A  F00E         	goto	u1670
  3446   001CD0                     u1671:
  3447   001CD0  EF6D  F00E         	goto	l22
  3448   001CD4                     u1670:
  3449   001CD4  827F               	bsf	127,1,c	;volatile
  3450   001CD6  EF6E  F00E         	goto	l23
  3451   001CDA                     l22:
  3452   001CDA  927F               	bcf	127,1,c	;volatile
  3453   001CDC                     l23:
  3454                           
  3455                           ;LEDarray.c: 47:     if (number & 0b00000100) {LATAbits.LATA2=1;} else {LATAbits.LATA2=0
      +                          ;}
  3456   001CDC  A402               	btfss	LEDarray_disp_bin@number^0,2,c
  3457   001CDE  EF73  F00E         	goto	u1681
  3458   001CE2  EF75  F00E         	goto	u1680
  3459   001CE6                     u1681:
  3460   001CE6  EF78  F00E         	goto	l24
  3461   001CEA                     u1680:
  3462   001CEA  8479               	bsf	121,2,c	;volatile
  3463   001CEC  EF79  F00E         	goto	l25
  3464   001CF0                     l24:
  3465   001CF0  9479               	bcf	121,2,c	;volatile
  3466   001CF2                     l25:
  3467                           
  3468                           ;LEDarray.c: 48:     if (number & 0b00001000) {LATFbits.LATF6=1;} else {LATFbits.LATF6=0
      +                          ;}
  3469   001CF2  A602               	btfss	LEDarray_disp_bin@number^0,3,c
  3470   001CF4  EF7E  F00E         	goto	u1691
  3471   001CF8  EF80  F00E         	goto	u1690
  3472   001CFC                     u1691:
  3473   001CFC  EF83  F00E         	goto	l26
  3474   001D00                     u1690:
  3475   001D00  8C7E               	bsf	126,6,c	;volatile
  3476   001D02  EF84  F00E         	goto	l27
  3477   001D06                     l26:
  3478   001D06  9C7E               	bcf	126,6,c	;volatile
  3479   001D08                     l27:
  3480                           
  3481                           ;LEDarray.c: 49:     if (number & 0b00010000) {LATAbits.LATA4=1;} else {LATAbits.LATA4=0
      +                          ;}
  3482   001D08  A802               	btfss	LEDarray_disp_bin@number^0,4,c
  3483   001D0A  EF89  F00E         	goto	u1701
  3484   001D0E  EF8B  F00E         	goto	u1700
  3485   001D12                     u1701:
  3486   001D12  EF8E  F00E         	goto	l28
  3487   001D16                     u1700:
  3488   001D16  8879               	bsf	121,4,c	;volatile
  3489   001D18  EF8F  F00E         	goto	l29
  3490   001D1C                     l28:
  3491   001D1C  9879               	bcf	121,4,c	;volatile
  3492   001D1E                     l29:
  3493                           
  3494                           ;LEDarray.c: 50:     if (number & 0b00100000) {LATAbits.LATA5=1;} else {LATAbits.LATA5=0
      +                          ;}
  3495   001D1E  AA02               	btfss	LEDarray_disp_bin@number^0,5,c
  3496   001D20  EF94  F00E         	goto	u1711
  3497   001D24  EF96  F00E         	goto	u1710
  3498   001D28                     u1711:
  3499   001D28  EF99  F00E         	goto	l30
  3500   001D2C                     u1710:
  3501   001D2C  8A79               	bsf	121,5,c	;volatile
  3502   001D2E  EF9A  F00E         	goto	l31
  3503   001D32                     l30:
  3504   001D32  9A79               	bcf	121,5,c	;volatile
  3505   001D34                     l31:
  3506                           
  3507                           ;LEDarray.c: 51:     if (number & 0b01000000) {LATFbits.LATF0=1;} else {LATFbits.LATF0=0
      +                          ;}
  3508   001D34  AC02               	btfss	LEDarray_disp_bin@number^0,6,c
  3509   001D36  EF9F  F00E         	goto	u1721
  3510   001D3A  EFA1  F00E         	goto	u1720
  3511   001D3E                     u1721:
  3512   001D3E  EFA4  F00E         	goto	l32
  3513   001D42                     u1720:
  3514   001D42  807E               	bsf	126,0,c	;volatile
  3515   001D44  EFA5  F00E         	goto	l33
  3516   001D48                     l32:
  3517   001D48  907E               	bcf	126,0,c	;volatile
  3518   001D4A                     l33:
  3519                           
  3520                           ;LEDarray.c: 52:     if (number & 0b10000000) {LATBbits.LATB0=1;} else {LATBbits.LATB0=0
      +                          ;}
  3521   001D4A  AE02               	btfss	LEDarray_disp_bin@number^0,7,c
  3522   001D4C  EFAA  F00E         	goto	u1731
  3523   001D50  EFAC  F00E         	goto	u1730
  3524   001D54                     u1731:
  3525   001D54  EFAF  F00E         	goto	l34
  3526   001D58                     u1730:
  3527   001D58  807A               	bsf	122,0,c	;volatile
  3528   001D5A  EFB0  F00E         	goto	l36
  3529   001D5E                     l34:
  3530   001D5E  907A               	bcf	122,0,c	;volatile
  3531   001D60                     l36:
  3532   001D60  0012               	return		;funcret
  3533   001D62                     __end_of_LEDarray_disp_bin:
  3534                           	callstack 0
  3535                           
  3536 ;; *************** function _LCD_setline *****************
  3537 ;; Defined at:
  3538 ;;		line 114 in file "LCD.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  line            1    wreg     unsigned char 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  line            1    5[COMRAM] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, status,2, status,0, cstack
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3556 ;;Total ram usage:        1 bytes
  3557 ;; Hardware stack levels used: 1
  3558 ;; Hardware stack levels required when called: 4
  3559 ;; This function calls:
  3560 ;;		_LCD_sendbyte
  3561 ;; This function is called by:
  3562 ;;		_main
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text18
  3567   0020B0                     __ptext18:
  3568                           	callstack 0
  3569   0020B0                     _LCD_setline:
  3570                           	callstack 26
  3571                           
  3572                           ;incstack = 0
  3573                           ;LCD_setline@line stored from wreg
  3574   0020B0  6E06               	movwf	LCD_setline@line^0,c
  3575   0020B2                     
  3576                           ;LCD.c: 114: void LCD_setline (char line);LCD.c: 115: {;LCD.c: 116:     if (line){
  3577   0020B2  5006               	movf	LCD_setline@line^0,w,c
  3578   0020B4  B4D8               	btfsc	status,2,c
  3579   0020B6  EF5F  F010         	goto	u2041
  3580   0020BA  EF61  F010         	goto	u2040
  3581   0020BE                     u2041:
  3582   0020BE  EF68  F010         	goto	l2115
  3583   0020C2                     u2040:
  3584   0020C2                     
  3585                           ;LCD.c: 117:         LCD_sendbyte(0x80,0);
  3586   0020C2  0E00               	movlw	0
  3587   0020C4  6E03               	movwf	LCD_sendbyte@type^0,c
  3588   0020C6  0E80               	movlw	128
  3589   0020C8  ECFC  F00F         	call	_LCD_sendbyte
  3590                           
  3591                           ;LCD.c: 118:     }
  3592   0020CC  EF6D  F010         	goto	l192
  3593   0020D0                     l2115:
  3594                           
  3595                           ;LCD.c: 120:         LCD_sendbyte(0xC0,0);
  3596   0020D0  0E00               	movlw	0
  3597   0020D2  6E03               	movwf	LCD_sendbyte@type^0,c
  3598   0020D4  0EC0               	movlw	192
  3599   0020D6  ECFC  F00F         	call	_LCD_sendbyte
  3600   0020DA                     l192:
  3601   0020DA  0012               	return		;funcret
  3602   0020DC                     __end_of_LCD_setline:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _LCD_sendstring *****************
  3606 ;; Defined at:
  3607 ;;		line 130 in file "LCD.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  string          2    5[COMRAM] PTR unsigned char 
  3610 ;;		 -> main@buf2(40), main@buf1(40), 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;Total ram usage:        2 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; Hardware stack levels required when called: 4
  3629 ;; This function calls:
  3630 ;;		_LCD_sendbyte
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text19
  3637   00207C                     __ptext19:
  3638                           	callstack 0
  3639   00207C                     _LCD_sendstring:
  3640                           	callstack 26
  3641   00207C                     
  3642                           ;LCD.c: 130: void LCD_sendstring(char *string);LCD.c: 131: {;LCD.c: 133:     while(*stri
      +                          ng != 0){
  3643   00207C  EF4B  F010         	goto	l2123
  3644   002080                     l2119:
  3645                           
  3646                           ;LCD.c: 134:   LCD_sendbyte(*string++,1);
  3647   002080  0E01               	movlw	1
  3648   002082  6E03               	movwf	LCD_sendbyte@type^0,c
  3649   002084  C006  FFD9         	movff	LCD_sendstring@string,fsr2l
  3650   002088  C007  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3651   00208C  50DF               	movf	indf2,w,c
  3652   00208E  ECFC  F00F         	call	_LCD_sendbyte
  3653   002092  4A06               	infsnz	LCD_sendstring@string^0,f,c
  3654   002094  2A07               	incf	(LCD_sendstring@string+1)^0,f,c
  3655   002096                     l2123:
  3656                           
  3657                           ;LCD.c: 133:     while(*string != 0){
  3658   002096  C006  FFD9         	movff	LCD_sendstring@string,fsr2l
  3659   00209A  C007  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3660   00209E  50DF               	movf	indf2,w,c
  3661   0020A0  A4D8               	btfss	status,2,c
  3662   0020A2  EF55  F010         	goto	u2051
  3663   0020A6  EF57  F010         	goto	u2050
  3664   0020AA                     u2051:
  3665   0020AA  EF40  F010         	goto	l2119
  3666   0020AE                     u2050:
  3667   0020AE  0012               	return		;funcret
  3668   0020B0                     __end_of_LCD_sendstring:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function _LCD_Init *****************
  3672 ;; Defined at:
  3673 ;;		line 58 in file "LCD.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;Total ram usage:        2 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 4
  3694 ;; This function calls:
  3695 ;;		_LCD_sendbyte
  3696 ;;		_LCD_sendnibble
  3697 ;; This function is called by:
  3698 ;;		_main
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text20
  3703   001D62                     __ptext20:
  3704                           	callstack 0
  3705   001D62                     _LCD_Init:
  3706                           	callstack 26
  3707   001D62                     
  3708                           ;LCD.c: 64:     LATCbits.LATC6=0;
  3709   001D62  9C7B               	bcf	123,6,c	;volatile
  3710                           
  3711                           ;LCD.c: 65:     LATCbits.LATC2=0;
  3712   001D64  947B               	bcf	123,2,c	;volatile
  3713                           
  3714                           ;LCD.c: 66:     LATBbits.LATB3=0;
  3715   001D66  967A               	bcf	122,3,c	;volatile
  3716                           
  3717                           ;LCD.c: 67:     LATBbits.LATB2=0;
  3718   001D68  947A               	bcf	122,2,c	;volatile
  3719                           
  3720                           ;LCD.c: 68:     LATEbits.LATE3=0;
  3721   001D6A  967D               	bcf	125,3,c	;volatile
  3722                           
  3723                           ;LCD.c: 69:     LATEbits.LATE1=0;
  3724   001D6C  927D               	bcf	125,1,c	;volatile
  3725                           
  3726                           ;LCD.c: 72:     TRISCbits.TRISC6=0;
  3727   001D6E  9C83               	bcf	131,6,c	;volatile
  3728                           
  3729                           ;LCD.c: 73:     TRISCbits.TRISC2=0;
  3730   001D70  9483               	bcf	131,2,c	;volatile
  3731                           
  3732                           ;LCD.c: 74:     TRISBbits.TRISB3=0;
  3733   001D72  9682               	bcf	130,3,c	;volatile
  3734                           
  3735                           ;LCD.c: 75:     TRISBbits.TRISB2=0;
  3736   001D74  9482               	bcf	130,2,c	;volatile
  3737                           
  3738                           ;LCD.c: 76:     TRISEbits.TRISE3=0;
  3739   001D76  9685               	bcf	133,3,c	;volatile
  3740                           
  3741                           ;LCD.c: 77:     TRISEbits.TRISE1=0;
  3742   001D78  9285               	bcf	133,1,c	;volatile
  3743   001D7A                     
  3744                           ;LCD.c: 84:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3745   001D7A  0E05               	movlw	5
  3746   001D7C  6E07               	movwf	(??_LCD_Init+1)^0,c
  3747   001D7E  0E0F               	movlw	15
  3748   001D80  6E06               	movwf	??_LCD_Init^0,c
  3749   001D82  0EF1               	movlw	241
  3750   001D84                     u2167:
  3751   001D84  2EE8               	decfsz	wreg,f,c
  3752   001D86  D7FE               	bra	u2167
  3753   001D88  2E06               	decfsz	??_LCD_Init^0,f,c
  3754   001D8A  D7FC               	bra	u2167
  3755   001D8C  2E07               	decfsz	(??_LCD_Init+1)^0,f,c
  3756   001D8E  D7FA               	bra	u2167
  3757   001D90  F000               	nop	
  3758   001D92                     
  3759                           ;LCD.c: 86:     LCD_sendnibble(0b0011);
  3760   001D92  0E03               	movlw	3
  3761   001D94  EC00  F00F         	call	_LCD_sendnibble
  3762   001D98                     
  3763                           ;LCD.c: 88:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3764   001D98  0EA0               	movlw	160
  3765   001D9A                     u2177:
  3766   001D9A  D000               	nop2	
  3767   001D9C  2EE8               	decfsz	wreg,f,c
  3768   001D9E  D7FD               	bra	u2177
  3769                           
  3770                           ;LCD.c: 90:     LCD_sendbyte(0b00101000,0);
  3771   001DA0  0E00               	movlw	0
  3772   001DA2  6E03               	movwf	LCD_sendbyte@type^0,c
  3773   001DA4  0E28               	movlw	40
  3774   001DA6  ECFC  F00F         	call	_LCD_sendbyte
  3775   001DAA                     
  3776                           ;LCD.c: 92:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3777   001DAA  0EA0               	movlw	160
  3778   001DAC                     u2187:
  3779   001DAC  D000               	nop2	
  3780   001DAE  2EE8               	decfsz	wreg,f,c
  3781   001DB0  D7FD               	bra	u2187
  3782   001DB2                     
  3783                           ;LCD.c: 94:     LCD_sendbyte(0b00001110,0);
  3784   001DB2  0E00               	movlw	0
  3785   001DB4  6E03               	movwf	LCD_sendbyte@type^0,c
  3786   001DB6  0E0E               	movlw	14
  3787   001DB8  ECFC  F00F         	call	_LCD_sendbyte
  3788                           
  3789                           ;LCD.c: 96:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3790   001DBC  0EA0               	movlw	160
  3791   001DBE                     u2197:
  3792   001DBE  D000               	nop2	
  3793   001DC0  2EE8               	decfsz	wreg,f,c
  3794   001DC2  D7FD               	bra	u2197
  3795   001DC4                     
  3796                           ;LCD.c: 98:     LCD_sendbyte(0b00000001,0);
  3797   001DC4  0E00               	movlw	0
  3798   001DC6  6E03               	movwf	LCD_sendbyte@type^0,c
  3799   001DC8  0E01               	movlw	1
  3800   001DCA  ECFC  F00F         	call	_LCD_sendbyte
  3801   001DCE                     
  3802                           ;LCD.c: 100:     _delay((unsigned long)((10)*(64000000/4000.0)));
  3803   001DCE  0ED0               	movlw	208
  3804   001DD0  6E06               	movwf	??_LCD_Init^0,c
  3805   001DD2  0ECA               	movlw	202
  3806   001DD4                     u2207:
  3807   001DD4  2EE8               	decfsz	wreg,f,c
  3808   001DD6  D7FE               	bra	u2207
  3809   001DD8  2E06               	decfsz	??_LCD_Init^0,f,c
  3810   001DDA  D7FC               	bra	u2207
  3811                           
  3812                           ;LCD.c: 102:     LCD_sendbyte(0b00000110,0);
  3813   001DDC  0E00               	movlw	0
  3814   001DDE  6E03               	movwf	LCD_sendbyte@type^0,c
  3815   001DE0  0E06               	movlw	6
  3816   001DE2  ECFC  F00F         	call	_LCD_sendbyte
  3817   001DE6                     
  3818                           ;LCD.c: 104:     _delay((unsigned long)((10)*(64000000/4000.0)));
  3819   001DE6  0ED0               	movlw	208
  3820   001DE8  6E06               	movwf	??_LCD_Init^0,c
  3821   001DEA  0ECA               	movlw	202
  3822   001DEC                     u2217:
  3823   001DEC  2EE8               	decfsz	wreg,f,c
  3824   001DEE  D7FE               	bra	u2217
  3825   001DF0  2E06               	decfsz	??_LCD_Init^0,f,c
  3826   001DF2  D7FC               	bra	u2217
  3827   001DF4                     
  3828                           ;LCD.c: 106:     LCD_sendbyte(0b00001100,0);
  3829   001DF4  0E00               	movlw	0
  3830   001DF6  6E03               	movwf	LCD_sendbyte@type^0,c
  3831   001DF8  0E0C               	movlw	12
  3832   001DFA  ECFC  F00F         	call	_LCD_sendbyte
  3833   001DFE  0012               	return		;funcret
  3834   001E00                     __end_of_LCD_Init:
  3835                           	callstack 0
  3836                           
  3837 ;; *************** function _LCD_sendbyte *****************
  3838 ;; Defined at:
  3839 ;;		line 39 in file "LCD.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  Byte            1    wreg     unsigned char 
  3842 ;;  type            1    2[COMRAM] unsigned char 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  Byte            1    4[COMRAM] unsigned char 
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  1    wreg      void 
  3847 ;; Registers used:
  3848 ;;		wreg, status,2, status,0, cstack
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3854 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3857 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3858 ;;Total ram usage:        3 bytes
  3859 ;; Hardware stack levels used: 1
  3860 ;; Hardware stack levels required when called: 3
  3861 ;; This function calls:
  3862 ;;		_LCD_sendnibble
  3863 ;; This function is called by:
  3864 ;;		_LCD_Init
  3865 ;;		_LCD_setline
  3866 ;;		_LCD_sendstring
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text21
  3871   001FF8                     __ptext21:
  3872                           	callstack 0
  3873   001FF8                     _LCD_sendbyte:
  3874                           	callstack 26
  3875                           
  3876                           ;incstack = 0
  3877                           ;LCD_sendbyte@Byte stored from wreg
  3878   001FF8  6E05               	movwf	LCD_sendbyte@Byte^0,c
  3879   001FFA                     
  3880                           ;LCD.c: 39: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 40: {;LCD.c: 44:  LA
      +                          TCbits.LATC6 = (type)? 1 : 0;
  3881   001FFA  5003               	movf	LCD_sendbyte@type^0,w,c
  3882   001FFC  A4D8               	btfss	status,2,c
  3883   001FFE  EF03  F010         	goto	u1561
  3884   002002  EF07  F010         	goto	u1560
  3885   002006                     u1561:
  3886   002006  6A04               	clrf	??_LCD_sendbyte^0,c
  3887   002008  2A04               	incf	??_LCD_sendbyte^0,f,c
  3888   00200A  EF08  F010         	goto	u1578
  3889   00200E                     u1560:
  3890   00200E  6A04               	clrf	??_LCD_sendbyte^0,c
  3891   002010                     u1578:
  3892   002010  3A04               	swapf	??_LCD_sendbyte^0,f,c
  3893   002012  4604               	rlncf	??_LCD_sendbyte^0,f,c
  3894   002014  4604               	rlncf	??_LCD_sendbyte^0,f,c
  3895   002016  507B               	movf	123,w,c	;volatile
  3896   002018  1804               	xorwf	??_LCD_sendbyte^0,w,c
  3897   00201A  0BBF               	andlw	-65
  3898   00201C  1804               	xorwf	??_LCD_sendbyte^0,w,c
  3899   00201E  6E7B               	movwf	123,c	;volatile
  3900   002020                     
  3901                           ;LCD.c: 46:     LCD_sendnibble(Byte>>4);
  3902   002020  3805               	swapf	LCD_sendbyte@Byte^0,w,c
  3903   002022  0B0F               	andlw	15
  3904   002024  EC00  F00F         	call	_LCD_sendnibble
  3905   002028                     
  3906                           ;LCD.c: 47:     LCD_sendnibble(Byte&0b00001111);
  3907   002028  5005               	movf	LCD_sendbyte@Byte^0,w,c
  3908   00202A  0B0F               	andlw	15
  3909   00202C  EC00  F00F         	call	_LCD_sendnibble
  3910   002030                     
  3911                           ;LCD.c: 50:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3912   002030  0EA0               	movlw	160
  3913   002032                     u2227:
  3914   002032  D000               	nop2	
  3915   002034  2EE8               	decfsz	wreg,f,c
  3916   002036  D7FD               	bra	u2227
  3917   002038                     
  3918                           ;LCD.c: 51:     LATCbits.LATC6 = 0;
  3919   002038  9C7B               	bcf	123,6,c	;volatile
  3920   00203A  0012               	return		;funcret
  3921   00203C                     __end_of_LCD_sendbyte:
  3922                           	callstack 0
  3923                           
  3924 ;; *************** function _LCD_sendnibble *****************
  3925 ;; Defined at:
  3926 ;;		line 21 in file "LCD.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  number          1    wreg     unsigned char 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  number          1    1[COMRAM] unsigned char 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3942 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3943 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;Total ram usage:        2 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; Hardware stack levels required when called: 2
  3947 ;; This function calls:
  3948 ;;		_LCD_E_TOG
  3949 ;; This function is called by:
  3950 ;;		_LCD_sendbyte
  3951 ;;		_LCD_Init
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text22
  3956   001E00                     __ptext22:
  3957                           	callstack 0
  3958   001E00                     _LCD_sendnibble:
  3959                           	callstack 26
  3960                           
  3961                           ;incstack = 0
  3962                           ;LCD_sendnibble@number stored from wreg
  3963   001E00  6E02               	movwf	LCD_sendnibble@number^0,c
  3964   001E02                     
  3965                           ;LCD.c: 21: void LCD_sendnibble(unsigned char number);LCD.c: 22: {;LCD.c: 26:     LATBbi
      +                          ts.LATB3 = (number & 0b00000001)? 1 : 0;
  3966   001E02  B002               	btfsc	LCD_sendnibble@number^0,0,c
  3967   001E04  EF06  F00F         	goto	u1391
  3968   001E08  EF0A  F00F         	goto	u1390
  3969   001E0C                     u1391:
  3970   001E0C  6A01               	clrf	??_LCD_sendnibble^0,c
  3971   001E0E  2A01               	incf	??_LCD_sendnibble^0,f,c
  3972   001E10  EF0B  F00F         	goto	u1408
  3973   001E14                     u1390:
  3974   001E14  6A01               	clrf	??_LCD_sendnibble^0,c
  3975   001E16                     u1408:
  3976   001E16  4601               	rlncf	??_LCD_sendnibble^0,f,c
  3977   001E18  4601               	rlncf	??_LCD_sendnibble^0,f,c
  3978   001E1A  4601               	rlncf	??_LCD_sendnibble^0,f,c
  3979   001E1C  507A               	movf	122,w,c	;volatile
  3980   001E1E  1801               	xorwf	??_LCD_sendnibble^0,w,c
  3981   001E20  0BF7               	andlw	-9
  3982   001E22  1801               	xorwf	??_LCD_sendnibble^0,w,c
  3983   001E24  6E7A               	movwf	122,c	;volatile
  3984                           
  3985                           ;LCD.c: 27:     LATBbits.LATB2 = (number & 0b00000010)? 1 : 0;
  3986   001E26  B202               	btfsc	LCD_sendnibble@number^0,1,c
  3987   001E28  EF18  F00F         	goto	u1411
  3988   001E2C  EF1C  F00F         	goto	u1410
  3989   001E30                     u1411:
  3990   001E30  6A01               	clrf	??_LCD_sendnibble^0,c
  3991   001E32  2A01               	incf	??_LCD_sendnibble^0,f,c
  3992   001E34  EF1D  F00F         	goto	u1428
  3993   001E38                     u1410:
  3994   001E38  6A01               	clrf	??_LCD_sendnibble^0,c
  3995   001E3A                     u1428:
  3996   001E3A  4601               	rlncf	??_LCD_sendnibble^0,f,c
  3997   001E3C  4601               	rlncf	??_LCD_sendnibble^0,f,c
  3998   001E3E  507A               	movf	122,w,c	;volatile
  3999   001E40  1801               	xorwf	??_LCD_sendnibble^0,w,c
  4000   001E42  0BFB               	andlw	-5
  4001   001E44  1801               	xorwf	??_LCD_sendnibble^0,w,c
  4002   001E46  6E7A               	movwf	122,c	;volatile
  4003                           
  4004                           ;LCD.c: 28:     LATEbits.LATE3 = (number & 0b00000100)? 1 : 0;
  4005   001E48  B402               	btfsc	LCD_sendnibble@number^0,2,c
  4006   001E4A  EF29  F00F         	goto	u1431
  4007   001E4E  EF2D  F00F         	goto	u1430
  4008   001E52                     u1431:
  4009   001E52  6A01               	clrf	??_LCD_sendnibble^0,c
  4010   001E54  2A01               	incf	??_LCD_sendnibble^0,f,c
  4011   001E56  EF2E  F00F         	goto	u1448
  4012   001E5A                     u1430:
  4013   001E5A  6A01               	clrf	??_LCD_sendnibble^0,c
  4014   001E5C                     u1448:
  4015   001E5C  4601               	rlncf	??_LCD_sendnibble^0,f,c
  4016   001E5E  4601               	rlncf	??_LCD_sendnibble^0,f,c
  4017   001E60  4601               	rlncf	??_LCD_sendnibble^0,f,c
  4018   001E62  507D               	movf	125,w,c	;volatile
  4019   001E64  1801               	xorwf	??_LCD_sendnibble^0,w,c
  4020   001E66  0BF7               	andlw	-9
  4021   001E68  1801               	xorwf	??_LCD_sendnibble^0,w,c
  4022   001E6A  6E7D               	movwf	125,c	;volatile
  4023                           
  4024                           ;LCD.c: 29:     LATEbits.LATE1 = (number & 0b00001000)? 1 : 0;
  4025   001E6C  B602               	btfsc	LCD_sendnibble@number^0,3,c
  4026   001E6E  EF3B  F00F         	goto	u1451
  4027   001E72  EF3F  F00F         	goto	u1450
  4028   001E76                     u1451:
  4029   001E76  6A01               	clrf	??_LCD_sendnibble^0,c
  4030   001E78  2A01               	incf	??_LCD_sendnibble^0,f,c
  4031   001E7A  EF40  F00F         	goto	u1468
  4032   001E7E                     u1450:
  4033   001E7E  6A01               	clrf	??_LCD_sendnibble^0,c
  4034   001E80                     u1468:
  4035   001E80  4601               	rlncf	??_LCD_sendnibble^0,f,c
  4036   001E82  507D               	movf	125,w,c	;volatile
  4037   001E84  1801               	xorwf	??_LCD_sendnibble^0,w,c
  4038   001E86  0BFD               	andlw	-3
  4039   001E88  1801               	xorwf	??_LCD_sendnibble^0,w,c
  4040   001E8A  6E7D               	movwf	125,c	;volatile
  4041   001E8C                     
  4042                           ;LCD.c: 30:     LCD_E_TOG();
  4043   001E8C  ECD3  F010         	call	_LCD_E_TOG	;wreg free
  4044   001E90                     
  4045                           ;LCD.c: 31:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  4046   001E90  0E1A               	movlw	26
  4047   001E92                     u2237:
  4048   001E92  2EE8               	decfsz	wreg,f,c
  4049   001E94  D7FE               	bra	u2237
  4050   001E96  D000               	nop2	
  4051   001E98  0012               	return		;funcret
  4052   001E9A                     __end_of_LCD_sendnibble:
  4053                           	callstack 0
  4054                           
  4055 ;; *************** function _LCD_E_TOG *****************
  4056 ;; Defined at:
  4057 ;;		line 8 in file "LCD.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4075 ;;Total ram usage:        0 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 1
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_LCD_sendnibble
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text23
  4086   0021A6                     __ptext23:
  4087                           	callstack 0
  4088   0021A6                     _LCD_E_TOG:
  4089                           	callstack 26
  4090   0021A6                     
  4091                           ;LCD.c: 11:     LATCbits.LATC2=1;
  4092   0021A6  847B               	bsf	123,2,c	;volatile
  4093   0021A8                     
  4094                           ;LCD.c: 12:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  4095   0021A8  0E0A               	movlw	10
  4096   0021AA                     u2247:
  4097   0021AA  2EE8               	decfsz	wreg,f,c
  4098   0021AC  D7FE               	bra	u2247
  4099   0021AE  D000               	nop2	
  4100   0021B0                     
  4101                           ;LCD.c: 14:     LATCbits.LATC2=0;
  4102   0021B0  947B               	bcf	123,2,c	;volatile
  4103                           
  4104                           ;LCD.c: 15:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  4105   0021B2  0E0A               	movlw	10
  4106   0021B4                     u2257:
  4107   0021B4  2EE8               	decfsz	wreg,f,c
  4108   0021B6  D7FE               	bra	u2257
  4109   0021B8  D000               	nop2	
  4110   0021BA  0012               	return		;funcret
  4111   0021BC                     __end_of_LCD_E_TOG:
  4112                           	callstack 0
  4113                           
  4114 ;; *************** function _Interrupts_init *****************
  4115 ;; Defined at:
  4116 ;;		line 7 in file "interrupts.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		None
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4134 ;;Total ram usage:        0 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; Hardware stack levels required when called: 1
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_main
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text24
  4145   00218E                     __ptext24:
  4146                           	callstack 0
  4147   00218E                     _Interrupts_init:
  4148                           	callstack 29
  4149   00218E                     
  4150                           ;interrupts.c: 10: PIE2bits.C1IE=1;
  4151   00218E  010E               	movlb	14	; () banked
  4152   002190  812B               	bsf	43,0,b	;volatile
  4153                           
  4154                           ;interrupts.c: 11: PIE2bits.C2IE=1;
  4155   002192  832B               	bsf	43,1,b	;volatile
  4156                           
  4157                           ;interrupts.c: 12: PIE0bits.TMR0IE = 1;
  4158   002194  8B29               	bsf	41,5,b	;volatile
  4159                           
  4160                           ;interrupts.c: 15: INTCONbits.IPEN=1;
  4161   002196  8AF2               	bsf	242,5,c	;volatile
  4162                           
  4163                           ;interrupts.c: 16: INTCONbits.GIEL=1;
  4164   002198  8CF2               	bsf	242,6,c	;volatile
  4165                           
  4166                           ;interrupts.c: 18: IPR2bits.C1IP=1;
  4167   00219A  8121               	bsf	33,0,b	;volatile
  4168                           
  4169                           ;interrupts.c: 19: IPR2bits.C2IP=1;
  4170   00219C  8321               	bsf	33,1,b	;volatile
  4171                           
  4172                           ;interrupts.c: 20: IPR0bits.TMR0IP =1;
  4173   00219E  8B1F               	bsf	31,5,b	;volatile
  4174                           
  4175                           ;interrupts.c: 22: INTCONbits.PEIE = 1;
  4176   0021A0  8CF2               	bsf	242,6,c	;volatile
  4177                           
  4178                           ;interrupts.c: 23: INTCONbits.GIE=1;
  4179   0021A2  8EF2               	bsf	242,7,c	;volatile
  4180   0021A4                     
  4181                           ; BSR set to: 14
  4182   0021A4  0012               	return		;funcret
  4183   0021A6                     __end_of_Interrupts_init:
  4184                           	callstack 0
  4185                           
  4186 ;; *************** function _Comp2_init *****************
  4187 ;; Defined at:
  4188 ;;		line 31 in file "comparator.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;		None
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4206 ;;Total ram usage:        0 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 2
  4209 ;; This function calls:
  4210 ;;		_DAC_init
  4211 ;; This function is called by:
  4212 ;;		_main
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text25
  4217   002104                     __ptext25:
  4218                           	callstack 0
  4219   002104                     _Comp2_init:
  4220                           	callstack 28
  4221   002104                     
  4222                           ;comparator.c: 33:     TRISFbits.TRISF7=1;
  4223   002104  8E86               	bsf	134,7,c	;volatile
  4224   002106                     
  4225                           ;comparator.c: 34:     CM2NCHbits.NCH=0b011;
  4226   002106  010E               	movlb	14	; () banked
  4227   002108  51CE               	movf	206,w,b	;volatile
  4228   00210A  0BF8               	andlw	-8
  4229   00210C  0903               	iorlw	3
  4230   00210E  6FCE               	movwf	206,b	;volatile
  4231                           
  4232                           ;comparator.c: 35:     CM2PCHbits.PCH=0b101;
  4233   002110  51CF               	movf	207,w,b	;volatile
  4234   002112  0BF8               	andlw	-8
  4235   002114  0905               	iorlw	5
  4236   002116  6FCF               	movwf	207,b	;volatile
  4237   002118                     
  4238                           ; BSR set to: 14
  4239                           ;comparator.c: 36:     CM2CON0bits.HYS=1;
  4240   002118  83CC               	bsf	204,1,b	;volatile
  4241   00211A                     
  4242                           ; BSR set to: 14
  4243                           ;comparator.c: 37:     CM2CON0bits.POL=1;
  4244   00211A  89CC               	bsf	204,4,b	;volatile
  4245   00211C                     
  4246                           ; BSR set to: 14
  4247                           ;comparator.c: 39:     CM2CON1bits.INTN=1;
  4248   00211C  81CD               	bsf	205,0,b	;volatile
  4249   00211E                     
  4250                           ; BSR set to: 14
  4251                           ;comparator.c: 41:     DAC_init();
  4252   00211E  ECDE  F010         	call	_DAC_init	;wreg free
  4253   002122                     
  4254                           ;comparator.c: 42:     CM2CON0bits.EN=1;
  4255   002122  010E               	movlb	14	; () banked
  4256   002124  8FCC               	bsf	204,7,b	;volatile
  4257   002126                     
  4258                           ; BSR set to: 14
  4259   002126  0012               	return		;funcret
  4260   002128                     __end_of_Comp2_init:
  4261                           	callstack 0
  4262                           
  4263 ;; *************** function _Comp1_init *****************
  4264 ;; Defined at:
  4265 ;;		line 15 in file "comparator.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;		None
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4283 ;;Total ram usage:        0 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; Hardware stack levels required when called: 2
  4286 ;; This function calls:
  4287 ;;		_DAC_init
  4288 ;; This function is called by:
  4289 ;;		_main
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text26
  4294   002128                     __ptext26:
  4295                           	callstack 0
  4296   002128                     _Comp1_init:
  4297                           	callstack 28
  4298   002128                     
  4299                           ;comparator.c: 17:     TRISFbits.TRISF7=1;
  4300   002128  8E86               	bsf	134,7,c	;volatile
  4301   00212A                     
  4302                           ;comparator.c: 18:     CM1NCHbits.NCH=0b011;
  4303   00212A  010E               	movlb	14	; () banked
  4304   00212C  51D2               	movf	210,w,b	;volatile
  4305   00212E  0BF8               	andlw	-8
  4306   002130  0903               	iorlw	3
  4307   002132  6FD2               	movwf	210,b	;volatile
  4308                           
  4309                           ;comparator.c: 19:     CM1PCHbits.PCH=0b101;
  4310   002134  51D3               	movf	211,w,b	;volatile
  4311   002136  0BF8               	andlw	-8
  4312   002138  0905               	iorlw	5
  4313   00213A  6FD3               	movwf	211,b	;volatile
  4314   00213C                     
  4315                           ; BSR set to: 14
  4316                           ;comparator.c: 20:     CM1CON0bits.HYS=1;
  4317   00213C  83D0               	bsf	208,1,b	;volatile
  4318   00213E                     
  4319                           ; BSR set to: 14
  4320                           ;comparator.c: 21:     CM1CON0bits.POL=1;
  4321   00213E  89D0               	bsf	208,4,b	;volatile
  4322   002140                     
  4323                           ; BSR set to: 14
  4324                           ;comparator.c: 23:     CM1CON1bits.INTP=1;
  4325   002140  83D1               	bsf	209,1,b	;volatile
  4326   002142                     
  4327                           ; BSR set to: 14
  4328                           ;comparator.c: 25:     DAC_init();
  4329   002142  ECDE  F010         	call	_DAC_init	;wreg free
  4330   002146                     
  4331                           ;comparator.c: 26:     CM1CON0bits.EN=1;
  4332   002146  010E               	movlb	14	; () banked
  4333   002148  8FD0               	bsf	208,7,b	;volatile
  4334   00214A                     
  4335                           ; BSR set to: 14
  4336   00214A  0012               	return		;funcret
  4337   00214C                     __end_of_Comp1_init:
  4338                           	callstack 0
  4339                           
  4340 ;; *************** function _DAC_init *****************
  4341 ;; Defined at:
  4342 ;;		line 5 in file "comparator.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;		None
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;Total ram usage:        0 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 1
  4363 ;; This function calls:
  4364 ;;		Nothing
  4365 ;; This function is called by:
  4366 ;;		_Comp1_init
  4367 ;;		_Comp2_init
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text27
  4372   0021BC                     __ptext27:
  4373                           	callstack 0
  4374   0021BC                     _DAC_init:
  4375                           	callstack 28
  4376   0021BC                     
  4377                           ;comparator.c: 7:     DAC1CON0bits.PSS=0b00;
  4378   0021BC  0EF3               	movlw	-13
  4379   0021BE  010E               	movlb	14	; () banked
  4380   0021C0  17C6               	andwf	198,f,b	;volatile
  4381   0021C2                     
  4382                           ; BSR set to: 14
  4383                           ;comparator.c: 8:     DAC1CON0bits.NSS=0b0;
  4384   0021C2  91C6               	bcf	198,0,b	;volatile
  4385                           
  4386                           ;comparator.c: 10:     DAC1CON1bits.DAC1R=0b10000;
  4387   0021C4  51C7               	movf	199,w,b	;volatile
  4388   0021C6  0BE0               	andlw	-32
  4389   0021C8  0910               	iorlw	16
  4390   0021CA  6FC7               	movwf	199,b	;volatile
  4391   0021CC                     
  4392                           ; BSR set to: 14
  4393                           ;comparator.c: 11:     DAC1CON0bits.DAC1EN=1;
  4394   0021CC  8FC6               	bsf	198,7,b	;volatile
  4395   0021CE                     
  4396                           ; BSR set to: 14
  4397   0021CE  0012               	return		;funcret
  4398   0021D0                     __end_of_DAC_init:
  4399                           	callstack 0
  4400                           
  4401 ;; *************** function _HighISR *****************
  4402 ;; Defined at:
  4403 ;;		line 29 in file "interrupts.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4421 ;;Total ram usage:        0 bytes
  4422 ;; Hardware stack levels used: 1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		Interrupt level 2
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	intcode
  4431   000008                     __pintcode:
  4432                           	callstack 0
  4433   000008                     _HighISR:
  4434                           	callstack 22
  4435                           
  4436                           ; BSR set to: 14
  4437                           ;incstack = 0
  4438   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4439   00000A                     
  4440                           ;interrupts.c: 31:     if(PIR2bits.C2IF){
  4441   00000A  010E               	movlb	14	; () banked
  4442   00000C  A335               	btfss	53,1,b	;volatile
  4443   00000E  EF0B  F000         	goto	i2u206_41
  4444   000012  EF0D  F000         	goto	i2u206_40
  4445   000016                     i2u206_41:
  4446   000016  EF10  F000         	goto	i2l99
  4447   00001A                     i2u206_40:
  4448   00001A                     
  4449                           ; BSR set to: 14
  4450                           ;interrupts.c: 33:     sunDown = hour;
  4451   00001A  C0D1  F05D         	movff	_hour,_sunDown
  4452                           
  4453                           ;interrupts.c: 34:  PIR2bits.C2IF=0;
  4454   00001E  9335               	bcf	53,1,b	;volatile
  4455   000020                     i2l99:
  4456                           
  4457                           ; BSR set to: 14
  4458                           ;interrupts.c: 38:     if(PIR2bits.C1IF){
  4459   000020  A135               	btfss	53,0,b	;volatile
  4460   000022  EF15  F000         	goto	i2u207_41
  4461   000026  EF17  F000         	goto	i2u207_40
  4462   00002A                     i2u207_41:
  4463   00002A  EF1A  F000         	goto	i2l100
  4464   00002E                     i2u207_40:
  4465   00002E                     
  4466                           ; BSR set to: 14
  4467                           ;interrupts.c: 40:     sunUp = hour;
  4468   00002E  C0D1  F05E         	movff	_hour,_sunUp
  4469                           
  4470                           ;interrupts.c: 41:  PIR2bits.C1IF=0;
  4471   000032  9135               	bcf	53,0,b	;volatile
  4472   000034                     i2l100:
  4473                           
  4474                           ; BSR set to: 14
  4475                           ;interrupts.c: 45:     if(PIR0bits.TMR0IF){
  4476   000034  AB33               	btfss	51,5,b	;volatile
  4477   000036  EF1F  F000         	goto	i2u208_41
  4478   00003A  EF21  F000         	goto	i2u208_40
  4479   00003E                     i2u208_41:
  4480   00003E  EF29  F000         	goto	i2l102
  4481   000042                     i2u208_40:
  4482   000042                     
  4483                           ; BSR set to: 14
  4484                           ;interrupts.c: 47:     hour++;
  4485   000042  0100               	movlb	0	; () banked
  4486   000044  2BD1               	incf	_hour& (0+255),f,b
  4487   000046                     
  4488                           ; BSR set to: 0
  4489                           ;interrupts.c: 49:  PIR0bits.TMR0IF=0;
  4490   000046  010E               	movlb	14	; () banked
  4491   000048  9B33               	bcf	51,5,b	;volatile
  4492   00004A                     
  4493                           ; BSR set to: 14
  4494                           ;interrupts.c: 52:     TMR0H= 00001011;
  4495   00004A  0E09               	movlw	9
  4496   00004C  6ED4               	movwf	212,c	;volatile
  4497   00004E                     
  4498                           ; BSR set to: 14
  4499                           ;interrupts.c: 53:     TMR0L= 11011011;
  4500   00004E  0EC3               	movlw	195
  4501   000050  6ED3               	movwf	211,c	;volatile
  4502   000052                     i2l102:
  4503                           
  4504                           ; BSR set to: 14
  4505   000052  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4506   000054  0011               	retfie		f
  4507   000056                     __end_of_HighISR:
  4508                           	callstack 0
  4509                           
  4510                           	psect	rparam
  4511   000000                     
  4512                           	psect	temp
  4513   00005F                     btemp:
  4514                           	callstack 0
  4515   00005F                     	ds	1
  4516   000000                     int$flags	set	btemp
  4517   000000                     wtemp8	set	btemp+1
  4518   000000                     ttemp5	set	btemp+1
  4519   000000                     ttemp6	set	btemp+4
  4520   000000                     ttemp7	set	btemp+8
  4521                           
  4522                           	psect	idloc
  4523                           
  4524                           ;Config register IDLOC0 @ 0x200000
  4525                           ;	unspecified, using default values
  4526   200000                     	org	2097152
  4527   200000  0FFF               	dw	4095
  4528                           
  4529                           ;Config register IDLOC1 @ 0x200002
  4530                           ;	unspecified, using default values
  4531   200002                     	org	2097154
  4532   200002  0FFF               	dw	4095
  4533                           
  4534                           ;Config register IDLOC2 @ 0x200004
  4535                           ;	unspecified, using default values
  4536   200004                     	org	2097156
  4537   200004  0FFF               	dw	4095
  4538                           
  4539                           ;Config register IDLOC3 @ 0x200006
  4540                           ;	unspecified, using default values
  4541   200006                     	org	2097158
  4542   200006  0FFF               	dw	4095
  4543                           
  4544                           ;Config register IDLOC4 @ 0x200008
  4545                           ;	unspecified, using default values
  4546   200008                     	org	2097160
  4547   200008  0FFF               	dw	4095
  4548                           
  4549                           ;Config register IDLOC5 @ 0x20000A
  4550                           ;	unspecified, using default values
  4551   20000A                     	org	2097162
  4552   20000A  0FFF               	dw	4095
  4553                           
  4554                           ;Config register IDLOC6 @ 0x20000C
  4555                           ;	unspecified, using default values
  4556   20000C                     	org	2097164
  4557   20000C  0FFF               	dw	4095
  4558                           
  4559                           ;Config register IDLOC7 @ 0x20000E
  4560                           ;	unspecified, using default values
  4561   20000E                     	org	2097166
  4562   20000E  0FFF               	dw	4095
  4563                           
  4564                           	psect	config
  4565                           
  4566                           ;Config register CONFIG1L @ 0x300000
  4567                           ;	External Oscillator mode Selection bits
  4568                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4569                           ;	Power-up default value for COSC bits
  4570                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4571   300000                     	org	3145728
  4572   300000  AA                 	db	170
  4573                           
  4574                           ;Config register CONFIG1H @ 0x300001
  4575                           ;	unspecified, using default values
  4576                           ;	Clock Out Enable bit
  4577                           ;	CLKOUTEN = 0x1, unprogrammed default
  4578                           ;	Clock Switch Enable bit
  4579                           ;	CSWEN = 0x1, unprogrammed default
  4580                           ;	Fail-Safe Clock Monitor Enable bit
  4581                           ;	FCMEN = 0x1, unprogrammed default
  4582   300001                     	org	3145729
  4583   300001  FF                 	db	255
  4584                           
  4585                           ;Config register CONFIG2L @ 0x300002
  4586                           ;	unspecified, using default values
  4587                           ;	Master Clear Enable bit
  4588                           ;	MCLRE = 0x1, unprogrammed default
  4589                           ;	Power-up Timer Enable bit
  4590                           ;	PWRTE = 0x1, unprogrammed default
  4591                           ;	Low-power BOR enable bit
  4592                           ;	LPBOREN = 0x1, unprogrammed default
  4593                           ;	Brown-out Reset Enable bits
  4594                           ;	BOREN = 0x3, unprogrammed default
  4595   300002                     	org	3145730
  4596   300002  FF                 	db	255
  4597                           
  4598                           ;Config register CONFIG2H @ 0x300003
  4599                           ;	unspecified, using default values
  4600                           ;	Brown Out Reset Voltage selection bits
  4601                           ;	BORV = 0x3, unprogrammed default
  4602                           ;	ZCD Disable bit
  4603                           ;	ZCD = 0x1, unprogrammed default
  4604                           ;	PPSLOCK bit One-Way Set Enable bit
  4605                           ;	PPS1WAY = 0x1, unprogrammed default
  4606                           ;	Stack Full/Underflow Reset Enable bit
  4607                           ;	STVREN = 0x1, unprogrammed default
  4608                           ;	Debugger Enable bit
  4609                           ;	DEBUG = 0x1, unprogrammed default
  4610                           ;	Extended Instruction Set Enable bit
  4611                           ;	XINST = 0x1, unprogrammed default
  4612   300003                     	org	3145731
  4613   300003  FF                 	db	255
  4614                           
  4615                           ;Config register CONFIG3L @ 0x300004
  4616                           ;	WDT Period Select bits
  4617                           ;	WDTCPS = 0x1F, unprogrammed default
  4618                           ;	WDT operating mode
  4619                           ;	WDTE = OFF, WDT Disabled
  4620   300004                     	org	3145732
  4621   300004  9F                 	db	159
  4622                           
  4623                           ;Config register CONFIG3H @ 0x300005
  4624                           ;	unspecified, using default values
  4625                           ;	WDT Window Select bits
  4626                           ;	WDTCWS = 0x7, unprogrammed default
  4627                           ;	WDT input clock selector
  4628                           ;	WDTCCS = 0x7, unprogrammed default
  4629   300005                     	org	3145733
  4630   300005  FF                 	db	255
  4631                           
  4632                           ;Config register CONFIG4L @ 0x300006
  4633                           ;	unspecified, using default values
  4634                           ;	Write Protection Block 0
  4635                           ;	WRT0 = 0x1, unprogrammed default
  4636                           ;	Write Protection Block 1
  4637                           ;	WRT1 = 0x1, unprogrammed default
  4638                           ;	Write Protection Block 2
  4639                           ;	WRT2 = 0x1, unprogrammed default
  4640                           ;	Write Protection Block 3
  4641                           ;	WRT3 = 0x1, unprogrammed default
  4642                           ;	Write Protection Block 3
  4643                           ;	WRT4 = 0x1, unprogrammed default
  4644                           ;	Write Protection Block 3
  4645                           ;	WRT5 = 0x1, unprogrammed default
  4646                           ;	Write Protection Block 3
  4647                           ;	WRT6 = 0x1, unprogrammed default
  4648                           ;	Write Protection Block 3
  4649                           ;	WRT7 = 0x1, unprogrammed default
  4650   300006                     	org	3145734
  4651   300006  FF                 	db	255
  4652                           
  4653                           ;Config register CONFIG4H @ 0x300007
  4654                           ;	unspecified, using default values
  4655                           ;	Configuration Register Write Protection bit
  4656                           ;	WRTC = 0x1, unprogrammed default
  4657                           ;	Boot Block Write Protection bit
  4658                           ;	WRTB = 0x1, unprogrammed default
  4659                           ;	Data EEPROM Write Protection bit
  4660                           ;	WRTD = 0x1, unprogrammed default
  4661                           ;	Scanner Enable bit
  4662                           ;	SCANE = 0x1, unprogrammed default
  4663                           ;	Low Voltage Programming Enable bit
  4664                           ;	LVP = 0x1, unprogrammed default
  4665   300007                     	org	3145735
  4666   300007  FF                 	db	255
  4667                           
  4668                           ;Config register CONFIG5L @ 0x300008
  4669                           ;	unspecified, using default values
  4670                           ;	UserNVM Program Memory Code Protection bit
  4671                           ;	CP = 0x1, unprogrammed default
  4672                           ;	DataNVM Memory Code Protection bit
  4673                           ;	CPD = 0x1, unprogrammed default
  4674   300008                     	org	3145736
  4675   300008  FF                 	db	255
  4676                           
  4677                           ;Config register CONFIG5H @ 0x300009
  4678                           ;	unspecified, using default values
  4679   300009                     	org	3145737
  4680   300009  FF                 	db	255
  4681                           
  4682                           ;Config register CONFIG6L @ 0x30000A
  4683                           ;	unspecified, using default values
  4684                           ;	Table Read Protection Block 0
  4685                           ;	EBTR0 = 0x1, unprogrammed default
  4686                           ;	Table Read Protection Block 1
  4687                           ;	EBTR1 = 0x1, unprogrammed default
  4688                           ;	Table Read Protection Block 2
  4689                           ;	EBTR2 = 0x1, unprogrammed default
  4690                           ;	Table Read Protection Block 3
  4691                           ;	EBTR3 = 0x1, unprogrammed default
  4692                           ;	Table Read Protection Block 4
  4693                           ;	EBTR4 = 0x1, unprogrammed default
  4694                           ;	Table Read Protection Block 5
  4695                           ;	EBTR5 = 0x1, unprogrammed default
  4696                           ;	Table Read Protection Block 6
  4697                           ;	EBTR6 = 0x1, unprogrammed default
  4698                           ;	Table Read Protection Block 7
  4699                           ;	EBTR7 = 0x1, unprogrammed default
  4700   30000A                     	org	3145738
  4701   30000A  FF                 	db	255
  4702                           
  4703                           ;Config register CONFIG6H @ 0x30000B
  4704                           ;	unspecified, using default values
  4705                           ;	Boot Block Table Read Protection bit
  4706                           ;	EBTRB = 0x1, unprogrammed default
  4707   30000B                     	org	3145739
  4708   30000B  FF                 	db	255
  4709                           tosu	equ	0xFFF
  4710                           tosh	equ	0xFFE
  4711                           tosl	equ	0xFFD
  4712                           stkptr	equ	0xFFC
  4713                           pclatu	equ	0xFFB
  4714                           pclath	equ	0xFFA
  4715                           pcl	equ	0xFF9
  4716                           tblptru	equ	0xFF8
  4717                           tblptrh	equ	0xFF7
  4718                           tblptrl	equ	0xFF6
  4719                           tablat	equ	0xFF5
  4720                           prodh	equ	0xFF4
  4721                           prodl	equ	0xFF3
  4722                           indf0	equ	0xFEF
  4723                           postinc0	equ	0xFEE
  4724                           postdec0	equ	0xFED
  4725                           preinc0	equ	0xFEC
  4726                           plusw0	equ	0xFEB
  4727                           fsr0h	equ	0xFEA
  4728                           fsr0l	equ	0xFE9
  4729                           wreg	equ	0xFE8
  4730                           indf1	equ	0xFE7
  4731                           postinc1	equ	0xFE6
  4732                           postdec1	equ	0xFE5
  4733                           preinc1	equ	0xFE4
  4734                           plusw1	equ	0xFE3
  4735                           fsr1h	equ	0xFE2
  4736                           fsr1l	equ	0xFE1
  4737                           bsr	equ	0xFE0
  4738                           indf2	equ	0xFDF
  4739                           postinc2	equ	0xFDE
  4740                           postdec2	equ	0xFDD
  4741                           preinc2	equ	0xFDC
  4742                           plusw2	equ	0xFDB
  4743                           fsr2h	equ	0xFDA
  4744                           fsr2l	equ	0xFD9
  4745                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      94
    BANK0           160    110     146
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[17]), STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[17]), STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[17]), STR_1(CODE[20]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1837$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[17]), STR_1(CODE[20]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf2(BANK0[40]), main@buf1(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1784$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1784$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    dateIncrement@yearP	PTR unsigned int  size(2) Largest target is 2
		 -> main@year(BANK0[2]), 

    dateIncrement@monthP	PTR unsigned char  size(2) Largest target is 1
		 -> main@month(BANK0[1]), 

    dateIncrement@daylightSavingsP	PTR unsigned char  size(2) Largest target is 1
		 -> main@daylightSavings(BANK0[1]), 

    dateIncrement@dayOfMonthP	PTR unsigned char  size(2) Largest target is 1
		 -> main@dayOfMonth(BANK0[1]), 

    dateIncrement@dayOfWeekP	PTR unsigned char  size(2) Largest target is 1
		 -> main@dayOfWeek(BANK0[1]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@buf2(BANK0[40]), main@buf1(BANK0[40]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _dateIncrement->_syncro
    _syncro->___awdiv
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                88    88      0   10860
                                             88 COMRAM     1     1      0
                                             23 BANK0     87    87      0
                         _Comp1_init
                         _Comp2_init
                    _Interrupts_init
                           _LCD_Init
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                      _dateIncrement
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    15     10    5722
                                              0 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _dateIncrement                                       14     4     10    1981
                                             15 COMRAM    13     3     10
                             _syncro
 ---------------------------------------------------------------------------------
 (2) _syncro                                               8     8      0     564
                                              8 COMRAM     7     7      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     2      0     176
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0     784
                                              5 COMRAM     1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2     959
                                              5 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     850
                                              5 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         3     2      1     762
                                              2 COMRAM     3     2      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       2     2      0      88
                                              0 COMRAM     2     2      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp2_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Comp2_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendstring
     _LCD_sendbyte
   _LCD_setline
     _LCD_sendbyte
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _dateIncrement
     _syncro
       ___awdiv
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      47        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBIGSFRllllhh     A5      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6E      92       5       91.2%
BITBIGSFRlllllh     90      0       0      39        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5E       1      100.0%
BITBIGSFRhll        4A      0       0      34        0.0%
BITBIGSFRllllll     30      0       0      45        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      7      0       0      43        0.0%
BITBIGSFRlllllh      7      0       0      41        0.0%
BITBIGSFRllllhl      4      0       0      38        0.0%
BITBIGSFRlllllh      1      0       0      40        0.0%
BITBIGSFRllllll      1      0       0      44        0.0%
BITBIGSFRllllll      1      0       0      42        0.0%
BITBIGSFRlllh        1      0       0      36        0.0%
BITBIGSFRlh          1      0       0      35        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F0      46        0.0%
DATA                 0      0      F0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 10 09:41:54 2022

                           l30 1D32                             l22 1CDA                             l31 1D34  
                           l23 1CDC                             l32 1D48                             l24 1CF0  
                           l33 1D4A                             l25 1CF2                             l34 1D5E  
                           l26 1D06                             l27 1D08                             l19 216C  
                           l36 1D60                             l28 1D1C                             l61 21CE  
                           l29 1D1E                             l64 214A                             l67 2126  
                           l94 21A4                   ___awdiv@sign 0006              ??_Interrupts_init 0001  
                          l220 1B16                            l161 218C                            l146 17F2  
                          l219 1B0E                            l252 11E0                            l181 1E98  
                          l184 203A                            l192 20DA                            l178 21BA  
                          l187 1DFE                            l198 20AE                            l382 1748  
                          l369 15E4                            l486 1CA4                            l933 1F64  
                          l955 1EBC                            l964 126C                            l966 1274  
                          l959 1F12                            l967 12BA                            l991 1FB2  
                          l985 19F2                            l978 145C                            l995 2072  
                          l998 207A                            _abs 203C                            _pad 1E9A  
        __end_of_dateIncrement 11E2                            wreg 000FE8                           l1010 1BE0  
                         l1021 21D0                           l2001 0E3E                           l1018 1FF6  
                         l2011 0E7C                           l2003 0E48                           ?_abs 0013  
                         l2021 0EFC                           l2013 0E94                           l2005 0E52  
                         l2101 1F26                           l2111 20B2                           l2031 0F5C  
                         l2023 0F08                           l2015 0EAE                           l2007 0E58  
                         l2103 1F2E                           l2121 2092                           l2113 20C2  
                         l2041 0FD0                           l2033 0F76                           l2017 0EC8  
                         l2025 0F12                           l2009 0E70                           l2105 1F36  
                         l2123 2096                           l2115 20D0                           l2051 104E  
                         l2035 0F90                           l2027 0F2A                           l2043 0FDA  
                         l2019 0EE2                           l2107 1F52                           l2117 207C  
                         l2053 105A                           l2045 0FF2                           l2061 1084  
                         l2037 0FAA                           l2029 0F42                           l2141 174E  
                         l2119 2080                           l2071 10F6                           l2063 109C  
                         l2055 1068                           l2047 100C                           l2039 0FC4  
                         l2151 1762                           l2143 1752                           l2081 1154  
                         l2073 110E                           l2065 10B6                           l2049 1036  
                         l2161 177C                           l2153 1766                           l2145 1756  
                         l2091 11B0                           l2075 1128                           l2083 1160  
                         l2067 10CE                           l1611 1B3C                           l2171 17AA  
                         l2163 1780                           l2155 176C                           l2147 175A  
                         l2139 174A                           l2093 11B4                           l2085 1164  
                         l2077 1140                           l2069 10DC                           l1701 16F8  
                         l1613 1B46                           l1621 1FB4                           l2181 1828  
                         l2173 17AE                           l2165 1780                           l2157 1770  
                         l2149 175E                           l2095 11D0                           l2087 117E  
                         l2079 1152                           l1631 1462                           l1703 1708  
                         l1615 1B64                           l1607 1B18                           l1623 1FC0  
                         l1711 1EA8                           l2183 1850                           l2175 17EC  
                         l2167 1792                           l2159 1774                           l1801 1C0E  
                         l2097 11D4                           l2089 1196                           l1641 14C2  
                         l1633 1470                           l1705 1728                           l1617 1B9A  
                         l1609 1B2A                           l1625 1FD2                           l1721 1EFE  
                         l1713 1EB4                           l2185 187A                           l2177 17F4  
                         l2169 17A2                           l1731 21B0                           l1811 1C3C  
                         l1803 1C16                           l1651 150C                           l1643 14C6  
                         l1635 1490                           l1723 203C                           l1627 1FD6  
                         l1715 1EC8                           l2099 1F14                           l2187 188C  
                         l2179 1820                           l1821 1C76                           l1813 1C44  
                         l1805 1C1A                           l1901 1ACC                           l1661 157C  
                         l1653 151A                           l1645 14D2                           l1637 1494  
                         l1629 145E                           l1725 2056                           l1717 1EDC  
                         l1709 1E9A                           l1741 1246                           l1733 11E2  
                         l2189 1892                           l1727 21A6                           l1831 1C9C  
                         l1823 1C78                           l1815 1C52                           l1807 1C22  
                         l1903 1B00                           l1663 158E                           l1655 152C  
                         l1647 14F0                           l1639 14A2                           l1719 1EE0  
                         l1751 12A2                           l1743 1260                           l1735 1202  
                         l1911 1F8E                           l1729 21A8                           l1921 1CC6  
                         l1825 1C7E                           l1817 1C58                           l1809 1C34  
                         l1905 1B08                           l1657 155A                           l1649 14F8  
                         l1665 1594                           l1681 161C                           l1673 15E6  
                         l1761 12D2                           l1753 12AE                           l1745 127C  
                         l1737 1216                           l1841 18E6                           l1913 1FAA  
                         l1931 1D2C                           l1923 1CD4                           l1819 1C6E  
                         l1827 1C84                           l1667 15A4                           l1659 157A  
                         l1691 1684                           l1683 162A                           l1675 15EA  
                         l1771 13DE                           l1763 1354                           l1755 12B6  
                         l1747 128C                           l1739 1226                           l1851 1988  
                         l1843 18EA                           l1835 18A6                           l1907 1F66  
                         l1941 213C                           l1933 1D42                           l1925 1CEA  
                         l1917 214C                           l1829 1C94                           l1669 15C4  
                         l1693 1692                           l1685 164A                           l1677 15F8  
                         l1781 143C                           l1773 13FC                           l1765 135A  
                         l1757 12C2                           l1749 1292                           l1845 18FA  
                         l1837 18CA                           l1909 1F72                           l1943 213E  
                         l1951 2104                           l1871 1FFA                           l1935 1D58  
                         l1927 1D00                           l1919 1CA8                           l1791 1BE2  
                         l1695 16C0                           l1687 1668                           l1679 1618  
                         l1775 1416                           l1767 1360                           l1759 12CC  
                         l1855 19B8                           l1847 1916                           l1839 18D8  
                         l1865 21BC                           l1945 2140                           l1937 2128  
                         l1961 211E                           l1953 2106                           l1785 1E02  
                         l1873 2020                           l1929 1D16                           l1793 1BE6  
                         l1881 19F6                           l1697 16E0                           l1689 1670  
                         l1777 1426                           l1769 13C4                           l1849 1932  
                         l1867 21C2                           l1947 2142                           l1939 212A  
                         l1963 2122                           l1955 2118                           l1787 1E8C  
                         l1875 2028                           l1971 2180                           l1795 1BF4  
                         l1891 1A5E                           l1883 19FA                           l1699 16F2  
                         l1779 142C                           l1859 19CA                           l1869 21CC  
                         l1949 2146                           l1957 211A                           l1965 218E  
                         l1789 1E90                           l1877 2030                           l1981 1D98  
                         l1973 218A                           l1797 1BFC                           l1893 1A7A  
                         l1885 1A0A                           ?_pad 0011                           l1959 211C  
                         l1879 2038                           l1991 1DE6                           l1983 1DAA  
                         l1975 1D62                           l1967 216E                           l1799 1C00  
                         l1895 1A8C                           l1887 1A0A                           l1993 1DF4  
                         l1985 1DB2                           l1977 1D7A                           l1969 2176  
                         l1897 1AB2                           l1889 1A34                           l1987 1DC4  
                         l1979 1D92                           l1899 1ABC                           l1995 0E28  
                         l1989 1DCE                           l1997 0E28                           l1999 0E3A  
                         STR_1 0E01                           STR_2 0E15                           u1100 1B64  
                         u1101 1B60                           u1110 1B9A                           u1111 1B96  
                         u2000 117E                           u1200 15F8                           u1120 1FF6  
                         u2001 117A                           u1201 15F4                           u1121 1FF2  
                         u2010 1196                           u1130 1470                           u1210 162A  
                         u2011 1192                           u1131 146C                           u1211 1626  
                         u2020 11B0                           u1140 14A2                           u1220 1668  
                         u1300 1214                           u2100 17A2                           u2021 11AC  
                         u1141 149E                           u1221 1664                           u2101 179E  
                         u2030 11D0                           u1230 1692                           u1310 1226  
                         u2110 17C2                           u2031 11CC                           u1151 14CC  
                         u1231 168E                           u1311 1222                           u2111 17BA  
                         u2040 20C2                           u1160 14F0                           u1240 16C0  
                         u1080 1B2A                           u1320 1260                           u2120 17D8  
                         u2041 20BE                           u1161 14EC                           u1241 16BC  
                         u1081 1B26                           u1321 125C                           u2121 17D2  
                         u1410 1E38                           u2050 20AE                           u1170 151A  
                         u1250 1708                           u1090 1B3C                           u1330 128C  
                         u2130 17DA                           u1411 1E30                           u2051 20AA  
                         u1171 1516                           u1251 1704                           u1091 1B38  
                         u1331 1288                           u1500 1C52                           u1180 155A  
                         u1260 1EA8                           u1340 12A2                           u2140 17EC  
                         u1501 1C4E                           u1181 1556                           u1261 1EA4  
                         u1341 129E                           u2141 17E8                           u1430 1E5A  
                         u1510 1C6E                           u1190 15A4                           u1270 1EFE  
                         u1350 13DE                           u2118 17C4                           u1431 1E52  
                         u2207 1DD4                           u1511 1C6A                           u1191 15A0  
                         u1271 1EFA                           u1351 13DA                           u1408 1E16  
                         u1520 1C94                           u1600 1A5E                           u1280 2056  
                         u1360 13FC                           u2217 1DEC                           u1521 1C90  
                         u1601 1A5A                           u1281 2052                           u1361 13F8  
                         u1450 1E7E                           u1610 1A8C                           u1370 1416  
                         u1290 1212                           u1530 18CA                           u2090 1792  
                         u1451 1E76                           u2227 2032                           u1611 1A88  
                         u1371 1412                           u1291 120C                           u1531 18C6  
                         u2091 178E                           u1428 1E3A                           u1700 1D16  
                         u1620 1AB2                           u1380 1426                           u1540 1916  
                         u2237 1E92                           u1701 1D12                           u2157 1AC2  
                         u1621 1AAE                           u1381 1422                           u1541 1912  
                         u1390 1E14                           u1710 1D2C                           u1470 1BF4  
                         u1630 1B00                           u1550 1932                           u2247 21AA  
                         u1391 1E0C                           u2167 1D84                           u1711 1D28  
                         u1471 1BF0                           u1631 1AFC                           u1551 192E  
                         u1448 1E5C                           u1560 200E                           u1720 1D42  
                         u1480 1C0E                           u1800 0EFC                           u1640 1FAA  
                         u2257 21B4                           u1561 2006                           u2177 1D9A  
                         u1721 1D3E                           u1481 1C0A                           u1801 0EF8  
                         u1641 1FA6                           u1730 1D58                           u1650 1CBA  
                         u1490 1C34                           u1810 0F2A                           u2187 1DAC  
                         u1731 1D54                           u1651 1CB2                           u1491 1C30  
                         u1811 0F26                           u1468 1E80                           u1580 1A0A  
                         u1900 1036                           u1820 0F42                           u1740 0E3A  
                         u2197 1DBE                           u1581 1A06                           u1901 1032  
                         u1821 0F3E                           u1741 0E36                           u1670 1CD4  
                         u1590 1A34                           u1910 104E                           u1830 0F5C  
                         u1750 0E70                           u1671 1CD0                           u1591 1A30  
                         u1911 104A                           u1831 0F58                           u1751 0E6C  
                         u1680 1CEA                           u1920 1080                           u1840 0F76  
                         u1760 0E94                           u1681 1CE6                           u1921 107C  
                         u1841 0F72                           u1761 0E90                           u1578 2010  
                         u1690 1D00                           u1930 109C                           u1850 0F90  
                         u1770 0EAE                           u1691 1CFC                           u1931 1098  
                         u1851 0F8C                           u1771 0EAA                           u1668 1CBC  
                         u1940 10B6                           u1860 0FAA                           u1780 0EC8  
                         u1941 10B2                           u1861 0FA6                           u1781 0EC4  
                         u1950 10F6                           u1870 0FC4                           u1790 0EE2  
                         u1951 10F2                           u1871 0FC0                           u1791 0EDE  
                         u1960 110E                           u1880 0FF2                           u1961 110A  
                         u1881 0FEE                           u1970 1128                           u1890 100C  
                         u1971 1124                           u1891 1008                           u1980 1140  
                         u1981 113C                           u1990 1152                           u1991 114E  
                         i2l99 0020                           abs@a 0013                           _dbuf 00D2  
                         _main 174A                           _dtoa 11E2                           _hour 00D1  
                         _prec 005A                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         btemp 005F                   ?_LCD_setline 0001                           start 0056  
             __end_of_DAC_init 21D0                __end_of_HighISR 0056                   main@deadTime 00C7  
                 ___param_bank 000000                     _Comp1_init 2128                     _Comp2_init 2104  
                        ??_abs 0015                          ??_pad 0017               __end_of_LCD_Init 1E00  
        syncro@daylightSavings 000E                __end_of___aodiv 15E6                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 174A                __end_of___awdiv 1CA6  
              ___awdiv@divisor 0003                          i2l100 0034                          i2l102 0052  
              ___awdiv@counter 0005                   vfpfcnvrt@fmt 0041                          _TMR0H 000FD4  
                        _TMR0L 000FD3                          _flags 005C                          _fputc 1B18  
                        _fputs 1FB4                          pad@fp 0011                          _width 00CE  
                        _putch 21D0                          _sunUp 005E                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                  ?_LCD_sendbyte 0003  
                        tablat 000FF5                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 1F66                __initialization 20DC                  main@dayOfWeek 00CB  
                 __end_of_main 18A6                   __end_of_dtoa 145E              __end_of_LCD_E_TOG 21BC  
                       ??_main 0059                         ??_dtoa 0026                  __activetblptr 000001  
                       ?_fputc 0001                         ?_fputs 000A                 ??_LCD_sendbyte 0004  
             ___awdiv@dividend 0001                         ?_putch 0001                         i2l2131 0042  
                       i2l2133 0046                         i2l2125 000A                         i2l2135 004A  
                       i2l2127 001A                         i2l2137 004E                         i2l2129 002E  
                    ??_HighISR 0001              _LEDarray_disp_bin 1CA6             ?_LEDarray_disp_bin 0001  
                ??_Timer0_init 0001                   vfprintf@cfmt 0057                      ??___aodiv 0011  
                    ??___aomod 0011                    ?_Comp1_init 0001                      ??___awdiv 0005  
                  ?_Comp2_init 0001                         _midDay 00D0            ??_LEDarray_disp_bin 0001  
      dateIncrement@dayOfWeekP 0012                         clear_0 20E2               ___awdiv@quotient 0007  
                       isa$std 000001                         pad@buf 0013                         dtoa@fp 001C  
                       _syncro 19F4                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                       putch@c 0001                      ?_DAC_init 0001               __end_of_vfprintf 1FB4  
                    ??_sprintf 0059      __end_of_LEDarray_disp_bin 1D62                     __accesstop 0060  
      __end_of__initialization 20F2                      ?_LCD_Init 0001                  ___rparam_used 000001  
                _LEDarray_init 214C                _Interrupts_init 218E                 __pcstackCOMRAM 0001  
          dateIncrement@monthP 0016                 main@dayOfMonth 00CC                  __end_of_fputc 1BE2  
                __end_of_fputs 1FF8                  __end_of_putch 21D2            __end_of_Timer0_init 218E  
                   ??_DAC_init 0001                        ??_fputc 0005                        ??_fputs 000E  
                      ??_putch 0001                     __pbssBANK0 00CE                     ??_LCD_Init 0006  
               _LCD_sendnibble 1E00                 ?_LEDarray_init 0001                 _LCD_sendstring 207C  
         __end_of_LCD_sendbyte 203C                        ?_syncro 0001         __end_of_LCD_sendnibble 1E9A  
      __end_of_Interrupts_init 21A6                        _HighISR 0008         __end_of_LCD_sendstring 20B0  
                      __Hparam 0000                        __Lparam 0000                    _Timer0_init 216E  
                      ___aodiv 145E                        ___aomod 15E6                        ___awdiv 1BE2  
                    ?_vfprintf 0051                   __psmallconst 0E00                        __pcinit 20DC  
                      __ramtop 0E00                        __ptext0 174A                        __ptext1 1F14  
                      __ptext2 1F66                        __ptext3 18A6                        __ptext4 11E2  
                      __ptext5 1E9A                        __ptext6 1FB4                        __ptext7 1B18  
                      __ptext8 21D0                        __ptext9 203C       dateIncrement@dayOfMonthP 0014  
                    _LCD_E_TOG 21A6                LCD_setline@line 0006                        _sunDown 005D  
                      _sprintf 1F14           end_of_initialization 20F2                ?_LCD_sendnibble 0001  
                      fputc@fp 0003                ??_LEDarray_init 0001                        fputs@fp 000C  
              ?_LCD_sendstring 0006              __end_of_vfpfcnvrt 19F4                        postdec2 000FDD  
                 ??_Comp1_init 0001                   ??_Comp2_init 0001                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 0047  
                   ??_vfprintf 0057                     ?_LCD_E_TOG 0001                      _TRISAbits 000F81  
                    _TRISBbits 000F82                      _TRISCbits 000F83                      _TRISEbits 000F85  
                    _TRISFbits 000F86                  _dateIncrement 0E28                      _TRISGbits 000F87  
                    _TRISHbits 000F88             __end_of_Comp1_init 214C             __end_of_Comp2_init 2128  
                  _CM1CON0bits 000ED0                    _CM1CON1bits 000ED1               ?_Interrupts_init 0001  
                  _CM2CON0bits 000ECC                    _CM2CON1bits 000ECD                    vfpfcnvrt@ap 0043  
                  vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F           LCD_sendnibble@number 0002  
               __end_of_syncro 1B18            start_initialization 20DC                 ?_dateIncrement 0010  
                  __end_of_abs 207C                    __end_of_pad 1F14                   _LCD_sendbyte 1FF8  
                ??_LCD_setline 0006                    vfprintf@fmt 0053           LCD_sendstring@string 0006  
                     ??_syncro 0009                    __pbssCOMRAM 005A                    ??_LCD_E_TOG 0001  
                __pcstackBANK0 0060               ___aodiv@dividend 0001             dateIncrement@yearP 0018  
                     ?_HighISR 0001                      _dtoa$1865 002E                   ?_Timer0_init 0001  
                    __pintcode 0008                       ?___aodiv 0001                       ?___aomod 0001  
                     ?___awdiv 0001               ___aodiv@quotient 0013            __end_of_LCD_setline 20DC  
              ??_dateIncrement 001A                    __smallconst 0E00               ??_LCD_sendnibble 0001  
                     _DAC_init 21BC               ??_LCD_sendstring 0008                       ?_sprintf 0060  
             LCD_sendbyte@Byte 0005                       _LCD_Init 1D62               LCD_sendbyte@type 0003  
                     _LATAbits 000F79                       _LATBbits 000F7A                       _LATCbits 000F7B  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80                       _IPR0bits 000E1F                       _PIE0bits 000E29  
                     _IPR2bits 000E21                       _PIE2bits 000E2B                       i2u206_40 001A  
                     i2u206_41 0016                       i2u207_40 002E                       i2u207_41 002A  
                     i2u208_40 0042                       i2u208_41 003E                       _PIR0bits 000E33  
                     _PIR2bits 000E35                      _vfpfcnvrt 18A6                      main@month 00CD  
                   _CM1NCHbits 000ED2                     _CM1PCHbits 000ED3                     _CM2NCHbits 000ECE  
                   _CM2PCHbits 000ECF          __end_of_LEDarray_init 216E                    _LCD_setline 20B0  
                     __Hrparam 0000                     vfprintf@ap 0055                       __Lrparam 0000  
                   vfprintf@fp 0051                   __Lsmallconst 0E00                     ?_vfpfcnvrt 003F  
              ___aodiv@divisor 0009                ___aodiv@counter 0011                     sprintf@fmt 0062  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                       __ptext10 15E6  
                     __ptext11 145E                       __ptext20 1D62                       __ptext12 0E28  
                     __ptext21 1FF8                       __ptext13 19F4                       __ptext22 1E00  
                     __ptext14 1BE2                       __ptext23 21A6                       __ptext15 216E  
                     __ptext24 218E                       __ptext16 214C                       __ptext25 2104  
                     __ptext17 1CA6                       __ptext26 2128                       __ptext18 20B0  
                     __ptext27 21BC                       __ptext19 207C        LEDarray_disp_bin@number 0002  
                     isa$xinst 000000                       int$flags 005F                       _vfprintf 1F66  
                     main@buf1 0077                       main@buf2 009F                       main@year 00C8  
             ___aomod@dividend 0001  dateIncrement@daylightSavingsP 0010                     _INTCONbits 000FF2  
                     intlevel2 0000                      sprintf@ap 006A                   _DAC1CON0bits 000EC6  
                 _DAC1CON1bits 000EC7                ___aomod@divisor 0009                    ??_vfpfcnvrt 0045  
              ___aomod@counter 0011                       sprintf@f 006C                       sprintf@s 0060  
           _dateIncrement$1346 001C                  syncro@trueMid 000F                   ___aodiv@sign 0012  
          main@daylightSavings 00CA                   ___aomod@sign 0012  
